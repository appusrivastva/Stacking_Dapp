{
	"id": "6030e8eff8bcf59cb4e639440187911f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Staking.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract Staking {\r\n    using SafeERC20 for IERC20;\r\n\r\n    IERC20 public nlnt;\r\n    address public admin;\r\n\r\n    uint256 public constant cliff = 60 days;\r\n    uint256 public constant totalDuration = 365 days;\r\n    uint256 public constant maxAmount = 10000;\r\n    uint256 public constant minAmount = 100;\r\n    uint256 public constant ReferralPercentage = 5;\r\n    uint8 public constant globalLevel = 3;\r\n\r\n    event TokenLocked(address indexed user, uint256 amount);\r\n    event TokensClaimed(address indexed user, uint256 amount);\r\n    event ReferralRewardClaimed(address indexed user, uint256 amount);\r\n    event LevelIncomeClaimed(address indexed user, uint256 amount);\r\n    event EmergencyWithdraw(address indexed admin, uint256 amount);\r\n\r\n    struct Lock {\r\n        uint256 nlntAmount;\r\n        uint256 start;\r\n        uint256 claimAmount;\r\n        uint256 levelIncome;\r\n        address referral;\r\n    }\r\n\r\n    mapping(address => Lock[]) public allStakeDetails;\r\n    mapping(address => uint256) public referralRewards;\r\n\r\n    constructor(address _nlnt) {\r\n        nlnt = IERC20(_nlnt);\r\n        admin = msg.sender;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, \"Only admin can call this function\");\r\n        _;\r\n    }\r\n\r\n    function emergencyWithdraw(uint256 amount) external onlyAdmin {\r\n        nlnt.safeTransfer(admin, amount);\r\n        emit EmergencyWithdraw(admin, amount);\r\n    }\r\n\r\n    function lockToken(address _refAddress, uint256 _nlntAmount) external {\r\n        require(_nlntAmount >= minAmount && _nlntAmount <= maxAmount, \"Stake amount out of range\");\r\n        require(_refAddress != msg.sender, \"Self referral not allowed\");\r\n\r\n        // Transfer token from user\r\n        nlnt.safeTransferFrom(msg.sender, address(this), _nlntAmount);\r\n\r\n        // Handle referral\r\n        if (_refAddress != address(0)) {\r\n            Lock[] storage refLocks = allStakeDetails[_refAddress];\r\n            if (refLocks.length > 0) {\r\n                uint256 referralReward = (_nlntAmount * ReferralPercentage) / 100;\r\n                referralRewards[_refAddress] += referralReward;\r\n            }\r\n        }\r\n\r\n        allStakeDetails[msg.sender].push(Lock({\r\n            nlntAmount: _nlntAmount,\r\n            start: block.timestamp,\r\n            claimAmount: 0,\r\n            levelIncome: 0,\r\n            referral: _refAddress\r\n        }));\r\n\r\n        emit TokenLocked(msg.sender, _nlntAmount);\r\n    }\r\n\r\n    function claimTokens() external {\r\n        Lock[] storage locks = allStakeDetails[msg.sender];\r\n        uint256 totalClaimable;\r\n\r\n        for (uint i = 0; i < locks.length; i++) {\r\n            Lock storage l = locks[i];\r\n            if (block.timestamp < l.start + cliff) continue;\r\n\r\n            uint256 timePassed = block.timestamp - l.start;\r\n            if (timePassed > totalDuration) timePassed = totalDuration;\r\n\r\n            uint256 vestingTime = timePassed - cliff;\r\n            uint256 monthPassed = vestingTime / 30 days;\r\n            uint256 totalVested = (l.nlntAmount * 10 * monthPassed) / 100;\r\n\r\n            if (totalVested > l.claimAmount) {\r\n                uint256 claimable = totalVested - l.claimAmount;\r\n                l.claimAmount += claimable;\r\n                totalClaimable += claimable;\r\n\r\n                distributeLevel(l.referral, claimable);\r\n            }\r\n        }\r\n\r\n        require(totalClaimable > 0, \"No tokens available to claim\");\r\n        nlnt.safeTransfer(msg.sender, totalClaimable);\r\n        emit TokensClaimed(msg.sender, totalClaimable);\r\n    }\r\n\r\n    function claimReferralReward() external {\r\n        uint256 reward = referralRewards[msg.sender];\r\n        require(reward > 0, \"No referral reward available\");\r\n        referralRewards[msg.sender] = 0;\r\n        nlnt.safeTransfer(msg.sender, reward);\r\n        emit ReferralRewardClaimed(msg.sender, reward);\r\n    }\r\n\r\n    function distributeLevel(address _refAddress, uint256 rewardAmount) internal {\r\n        uint8[3] memory levelPercentage = [15, 10, 5];\r\n        address currentRef = _refAddress;\r\n\r\n        for (uint i = 0; i < globalLevel; i++) {\r\n            if (currentRef == address(0)) break;\r\n\r\n            Lock[] storage refLocks = allStakeDetails[currentRef];\r\n            if (refLocks.length == 0) break;\r\n\r\n            uint256 reward = (rewardAmount * levelPercentage[i]) / 100;\r\n            refLocks[0].levelIncome += reward;\r\n            currentRef = refLocks[0].referral;\r\n        }\r\n    }\r\n\r\n    function claimLevelIncome() external {\r\n        Lock[] storage locks = allStakeDetails[msg.sender];\r\n        require(locks.length > 0, \"No stakes found\");\r\n\r\n        uint256 income = locks[0].levelIncome;\r\n        require(income > 0, \"No level income to claim\");\r\n\r\n        locks[0].levelIncome = 0;\r\n        nlnt.safeTransfer(msg.sender, income);\r\n        emit LevelIncomeClaimed(msg.sender, income);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122017b94a87ae6b23e1be3b45e02b514dd188b93fb42a1c27c0f4e03b91091de1a664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122017b94a87ae6b23e1be3b45e02b514dd188b93fb42a1c27c0f4e03b91091de1a664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xB9 BLOBBASEFEE DUP8 0xAE PUSH12 0x23E1BE3B45E02B514DD188B9 EXTCODEHASH 0xB4 0x2A SHR 0x27 0xC0 DELEGATECALL 0xE0 EXTCODESIZE SWAP2 MULMOD SAR 0xE1 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "698:9376:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122017b94a87ae6b23e1be3b45e02b514dd188b93fb42a1c27c0f4e03b91091de1a664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xB9 BLOBBASEFEE DUP8 0xAE PUSH12 0x23E1BE3B45E02B514DD188B9 EXTCODEHASH 0xB4 0x2A SHR 0x27 0xC0 DELEGATECALL 0xE0 EXTCODESIZE SWAP2 MULMOD SAR 0xE1 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "698:9376:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122017b94a87ae6b23e1be3b45e02b514dd188b93fb42a1c27c0f4e03b91091de1a664736f6c634300081a0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Staking.sol": {
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nlnt",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LevelIncomeClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ReferralRewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokenLocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensClaimed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ReferralPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allStakeDetails",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nlntAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claimAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "levelIncome",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "referral",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimLevelIncome",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReferralReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cliff",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "globalLevel",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_refAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_nlntAmount",
									"type": "uint256"
								}
							],
							"name": "lockToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nlnt",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "referralRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Staking.sol\":199:5063  contract Staking {... */\n  mstore(0x40, 0x80)\n    /* \"Staking.sol\":1227:1322  constructor(address _nlnt) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Staking.sol\":1279:1284  _nlnt */\n  dup1\n    /* \"Staking.sol\":1265:1269  nlnt */\n  0x00\n  dup1\n    /* \"Staking.sol\":1265:1285  nlnt = IERC20(_nlnt) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Staking.sol\":1304:1314  msg.sender */\n  caller\n    /* \"Staking.sol\":1296:1301  admin */\n  0x01\n  0x00\n    /* \"Staking.sol\":1296:1314  admin = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Staking.sol\":1227:1322  constructor(address _nlnt) {... */\n  pop\n    /* \"Staking.sol\":199:5063  contract Staking {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Staking.sol\":199:5063  contract Staking {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Staking.sol\":199:5063  contract Staking {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x60f43fd2\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x9b4b2c9c\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x9b4b2c9c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xaa03875e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe1ba51fb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x60f43fd2\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7e2bc224\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8af6c259\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9b2cb5d8\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x5312ea8e\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x53aaa63b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5e9d2f90\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5f48f393\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x13d033c0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x17be3fa5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x48c54b9d\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Staking.sol\":312:351  uint256 public constant cliff = 60 days */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":1624:2631  function lockToken(address _refAddress, uint256 _nlntAmount) external {... */\n    tag_4:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"Staking.sol\":2639:3732  function claimTokens() external {... */\n    tag_5:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"Staking.sol\":1455:1616  function emergencyWithdraw(uint256 amount) external onlyAdmin {... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"Staking.sol\":1168:1218  mapping(address => uint256) public referralRewards */\n    tag_7:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":560:597  uint8 public constant globalLevel = 3 */\n    tag_8:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":413:454  uint256 public constant maxAmount = 10000 */\n    tag_9:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":4652:5060  function claimLevelIncome() external {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      stop\n        /* \"Staking.sol\":507:553  uint256 public constant ReferralPercentage = 5 */\n    tag_11:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":358:406  uint256 public constant totalDuration = 365 days */\n    tag_12:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":461:500  uint256 public constant minAmount = 100 */\n    tag_13:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":3740:4052  function claimReferralReward() external {... */\n    tag_14:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      stop\n        /* \"Staking.sol\":258:276  IERC20 public nlnt */\n    tag_15:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":1112:1161  mapping(address => Lock[]) public allStakeDetails */\n    tag_16:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":283:303  address public admin */\n    tag_17:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":312:351  uint256 public constant cliff = 60 days */\n    tag_22:\n        /* \"Staking.sol\":344:351  60 days */\n      0x4f1a00\n        /* \"Staking.sol\":312:351  uint256 public constant cliff = 60 days */\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":1624:2631  function lockToken(address _refAddress, uint256 _nlntAmount) external {... */\n    tag_28:\n        /* \"Staking.sol\":497:500  100 */\n      0x64\n        /* \"Staking.sol\":1713:1724  _nlntAmount */\n      dup2\n        /* \"Staking.sol\":1713:1737  _nlntAmount >= minAmount */\n      lt\n      iszero\n        /* \"Staking.sol\":1713:1765  _nlntAmount >= minAmount && _nlntAmount <= maxAmount */\n      dup1\n      iszero\n      tag_74\n      jumpi\n      pop\n        /* \"Staking.sol\":449:454  10000 */\n      0x2710\n        /* \"Staking.sol\":1741:1752  _nlntAmount */\n      dup2\n        /* \"Staking.sol\":1741:1765  _nlntAmount <= maxAmount */\n      gt\n      iszero\n        /* \"Staking.sol\":1713:1765  _nlntAmount >= minAmount && _nlntAmount <= maxAmount */\n    tag_74:\n        /* \"Staking.sol\":1705:1795  require(_nlntAmount >= minAmount && _nlntAmount <= maxAmount, \"Stake amount out of range\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"Staking.sol\":1829:1839  msg.sender */\n      caller\n        /* \"Staking.sol\":1814:1839  _refAddress != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":1814:1825  _refAddress */\n      dup3\n        /* \"Staking.sol\":1814:1839  _refAddress != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Staking.sol\":1806:1869  require(_refAddress != msg.sender, \"Self referral not allowed\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"Staking.sol\":1919:1980  nlnt.safeTransferFrom(msg.sender, address(this), _nlntAmount) */\n      tag_81\n        /* \"Staking.sol\":1941:1951  msg.sender */\n      caller\n        /* \"Staking.sol\":1961:1965  this */\n      address\n        /* \"Staking.sol\":1968:1979  _nlntAmount */\n      dup4\n        /* \"Staking.sol\":1919:1923  nlnt */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":1919:1940  nlnt.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_82\n      swap1\n        /* \"Staking.sol\":1919:1980  nlnt.safeTransferFrom(msg.sender, address(this), _nlntAmount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"Staking.sol\":2048:2049  0 */\n      0x00\n        /* \"Staking.sol\":2025:2050  _refAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":2025:2036  _refAddress */\n      dup3\n        /* \"Staking.sol\":2025:2050  _refAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Staking.sol\":2021:2337  if (_refAddress != address(0)) {... */\n      tag_83\n      jumpi\n        /* \"Staking.sol\":2067:2090  Lock[] storage refLocks */\n      0x00\n        /* \"Staking.sol\":2093:2108  allStakeDetails */\n      0x02\n        /* \"Staking.sol\":2093:2121  allStakeDetails[_refAddress] */\n      0x00\n        /* \"Staking.sol\":2109:2120  _refAddress */\n      dup5\n        /* \"Staking.sol\":2093:2121  allStakeDetails[_refAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":2067:2121  Lock[] storage refLocks = allStakeDetails[_refAddress] */\n      swap1\n      pop\n        /* \"Staking.sol\":2158:2159  0 */\n      0x00\n        /* \"Staking.sol\":2140:2148  refLocks */\n      dup2\n        /* \"Staking.sol\":2140:2155  refLocks.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Staking.sol\":2140:2159  refLocks.length > 0 */\n      gt\n        /* \"Staking.sol\":2136:2326  if (refLocks.length > 0) {... */\n      iszero\n      tag_84\n      jumpi\n        /* \"Staking.sol\":2180:2202  uint256 referralReward */\n      0x00\n        /* \"Staking.sol\":2242:2245  100 */\n      0x64\n        /* \"Staking.sol\":552:553  5 */\n      0x05\n        /* \"Staking.sol\":2206:2217  _nlntAmount */\n      dup5\n        /* \"Staking.sol\":2206:2238  _nlntAmount * ReferralPercentage */\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"Staking.sol\":2205:2245  (_nlntAmount * ReferralPercentage) / 100 */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"Staking.sol\":2180:2245  uint256 referralReward = (_nlntAmount * ReferralPercentage) / 100 */\n      swap1\n      pop\n        /* \"Staking.sol\":2296:2310  referralReward */\n      dup1\n        /* \"Staking.sol\":2264:2279  referralRewards */\n      0x03\n        /* \"Staking.sol\":2264:2292  referralRewards[_refAddress] */\n      0x00\n        /* \"Staking.sol\":2280:2291  _refAddress */\n      dup7\n        /* \"Staking.sol\":2264:2292  referralRewards[_refAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Staking.sol\":2264:2310  referralRewards[_refAddress] += referralReward */\n      dup3\n      dup3\n      sload\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":2161:2326  {... */\n      pop\n        /* \"Staking.sol\":2136:2326  if (refLocks.length > 0) {... */\n    tag_84:\n        /* \"Staking.sol\":2052:2337  {... */\n      pop\n        /* \"Staking.sol\":2021:2337  if (_refAddress != address(0)) {... */\n    tag_83:\n        /* \"Staking.sol\":2349:2364  allStakeDetails */\n      0x02\n        /* \"Staking.sol\":2349:2376  allStakeDetails[msg.sender] */\n      0x00\n        /* \"Staking.sol\":2365:2375  msg.sender */\n      caller\n        /* \"Staking.sol\":2349:2376  allStakeDetails[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":2382:2568  Lock({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Staking.sol\":2414:2425  _nlntAmount */\n      dup4\n        /* \"Staking.sol\":2382:2568  Lock({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":2447:2462  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":2382:2568  Lock({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":2490:2491  0 */\n      0x00\n        /* \"Staking.sol\":2382:2568  Lock({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":2519:2520  0 */\n      0x00\n        /* \"Staking.sol\":2382:2568  Lock({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":2545:2556  _refAddress */\n      dup5\n        /* \"Staking.sol\":2382:2568  Lock({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"Staking.sol\":2349:2569  allStakeDetails[msg.sender].push(Lock({... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"Staking.sol\":2599:2609  msg.sender */\n      caller\n        /* \"Staking.sol\":2587:2623  TokenLocked(msg.sender, _nlntAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf9626bca62c59d77fa45a204dc096874ee066a5c5e124aa9ce6c438dbdf7387a\n        /* \"Staking.sol\":2611:2622  _nlntAmount */\n      dup3\n        /* \"Staking.sol\":2587:2623  TokenLocked(msg.sender, _nlntAmount) */\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":1624:2631  function lockToken(address _refAddress, uint256 _nlntAmount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Staking.sol\":2639:3732  function claimTokens() external {... */\n    tag_30:\n        /* \"Staking.sol\":2682:2702  Lock[] storage locks */\n      0x00\n        /* \"Staking.sol\":2705:2720  allStakeDetails */\n      0x02\n        /* \"Staking.sol\":2705:2732  allStakeDetails[msg.sender] */\n      0x00\n        /* \"Staking.sol\":2721:2731  msg.sender */\n      caller\n        /* \"Staking.sol\":2705:2732  allStakeDetails[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":2682:2732  Lock[] storage locks = allStakeDetails[msg.sender] */\n      swap1\n      pop\n        /* \"Staking.sol\":2743:2765  uint256 totalClaimable */\n      0x00\n        /* \"Staking.sol\":2783:2789  uint i */\n      dup1\n        /* \"Staking.sol\":2792:2793  0 */\n      0x00\n        /* \"Staking.sol\":2783:2793  uint i = 0 */\n      swap1\n      pop\n        /* \"Staking.sol\":2778:3540  for (uint i = 0; i < locks.length; i++) {... */\n    tag_94:\n        /* \"Staking.sol\":2799:2804  locks */\n      dup3\n        /* \"Staking.sol\":2799:2811  locks.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Staking.sol\":2795:2796  i */\n      dup2\n        /* \"Staking.sol\":2795:2811  i < locks.length */\n      lt\n        /* \"Staking.sol\":2778:3540  for (uint i = 0; i < locks.length; i++) {... */\n      iszero\n      tag_95\n      jumpi\n        /* \"Staking.sol\":2833:2847  Lock storage l */\n      0x00\n        /* \"Staking.sol\":2850:2855  locks */\n      dup4\n        /* \"Staking.sol\":2856:2857  i */\n      dup3\n        /* \"Staking.sol\":2850:2858  locks[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_97\n      jumpi\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n    tag_97:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":2833:2858  Lock storage l = locks[i] */\n      swap1\n      pop\n        /* \"Staking.sol\":344:351  60 days */\n      0x4f1a00\n        /* \"Staking.sol\":2895:2896  l */\n      dup2\n        /* \"Staking.sol\":2895:2902  l.start */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":2895:2910  l.start + cliff */\n      tag_101\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_101:\n        /* \"Staking.sol\":2877:2892  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":2877:2910  block.timestamp < l.start + cliff */\n      lt\n        /* \"Staking.sol\":2873:2920  if (block.timestamp < l.start + cliff) continue */\n      iszero\n      tag_102\n      jumpi\n        /* \"Staking.sol\":2912:2920  continue */\n      pop\n      jump(tag_96)\n        /* \"Staking.sol\":2873:2920  if (block.timestamp < l.start + cliff) continue */\n    tag_102:\n        /* \"Staking.sol\":2937:2955  uint256 timePassed */\n      0x00\n        /* \"Staking.sol\":2976:2977  l */\n      dup2\n        /* \"Staking.sol\":2976:2983  l.start */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":2958:2973  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":2958:2983  block.timestamp - l.start */\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"Staking.sol\":2937:2983  uint256 timePassed = block.timestamp - l.start */\n      swap1\n      pop\n        /* \"Staking.sol\":398:406  365 days */\n      0x01e13380\n        /* \"Staking.sol\":3002:3012  timePassed */\n      dup2\n        /* \"Staking.sol\":3002:3028  timePassed > totalDuration */\n      gt\n        /* \"Staking.sol\":2998:3056  if (timePassed > totalDuration) timePassed = totalDuration */\n      iszero\n      tag_105\n      jumpi\n        /* \"Staking.sol\":398:406  365 days */\n      0x01e13380\n        /* \"Staking.sol\":3030:3056  timePassed = totalDuration */\n      swap1\n      pop\n        /* \"Staking.sol\":2998:3056  if (timePassed > totalDuration) timePassed = totalDuration */\n    tag_105:\n        /* \"Staking.sol\":3073:3092  uint256 vestingTime */\n      0x00\n        /* \"Staking.sol\":344:351  60 days */\n      0x4f1a00\n        /* \"Staking.sol\":3095:3105  timePassed */\n      dup3\n        /* \"Staking.sol\":3095:3113  timePassed - cliff */\n      tag_106\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_106:\n        /* \"Staking.sol\":3073:3113  uint256 vestingTime = timePassed - cliff */\n      swap1\n      pop\n        /* \"Staking.sol\":3128:3147  uint256 monthPassed */\n      0x00\n        /* \"Staking.sol\":3164:3171  30 days */\n      0x278d00\n        /* \"Staking.sol\":3150:3161  vestingTime */\n      dup3\n        /* \"Staking.sol\":3150:3171  vestingTime / 30 days */\n      tag_107\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_107:\n        /* \"Staking.sol\":3128:3171  uint256 monthPassed = vestingTime / 30 days */\n      swap1\n      pop\n        /* \"Staking.sol\":3186:3205  uint256 totalVested */\n      0x00\n        /* \"Staking.sol\":3244:3247  100 */\n      0x64\n        /* \"Staking.sol\":3229:3240  monthPassed */\n      dup3\n        /* \"Staking.sol\":3224:3226  10 */\n      0x0a\n        /* \"Staking.sol\":3209:3210  l */\n      dup8\n        /* \"Staking.sol\":3209:3221  l.nlntAmount */\n      0x00\n      add\n      sload\n        /* \"Staking.sol\":3209:3226  l.nlntAmount * 10 */\n      tag_108\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_108:\n        /* \"Staking.sol\":3209:3240  l.nlntAmount * 10 * monthPassed */\n      tag_109\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_109:\n        /* \"Staking.sol\":3208:3247  (l.nlntAmount * 10 * monthPassed) / 100 */\n      tag_110\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_110:\n        /* \"Staking.sol\":3186:3247  uint256 totalVested = (l.nlntAmount * 10 * monthPassed) / 100 */\n      swap1\n      pop\n        /* \"Staking.sol\":3282:3283  l */\n      dup5\n        /* \"Staking.sol\":3282:3295  l.claimAmount */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":3268:3279  totalVested */\n      dup2\n        /* \"Staking.sol\":3268:3295  totalVested > l.claimAmount */\n      gt\n        /* \"Staking.sol\":3264:3529  if (totalVested > l.claimAmount) {... */\n      iszero\n      tag_111\n      jumpi\n        /* \"Staking.sol\":3316:3333  uint256 claimable */\n      0x00\n        /* \"Staking.sol\":3350:3351  l */\n      dup6\n        /* \"Staking.sol\":3350:3363  l.claimAmount */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":3336:3347  totalVested */\n      dup3\n        /* \"Staking.sol\":3336:3363  totalVested - l.claimAmount */\n      tag_112\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_112:\n        /* \"Staking.sol\":3316:3363  uint256 claimable = totalVested - l.claimAmount */\n      swap1\n      pop\n        /* \"Staking.sol\":3399:3408  claimable */\n      dup1\n        /* \"Staking.sol\":3382:3383  l */\n      dup7\n        /* \"Staking.sol\":3382:3395  l.claimAmount */\n      0x02\n      add\n      0x00\n        /* \"Staking.sol\":3382:3408  l.claimAmount += claimable */\n      dup3\n      dup3\n      sload\n      tag_113\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_113:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":3445:3454  claimable */\n      dup1\n        /* \"Staking.sol\":3427:3454  totalClaimable += claimable */\n      dup9\n      tag_114\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_114:\n      swap8\n      pop\n        /* \"Staking.sol\":3475:3513  distributeLevel(l.referral, claimable) */\n      tag_115\n        /* \"Staking.sol\":3491:3492  l */\n      dup7\n        /* \"Staking.sol\":3491:3501  l.referral */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":3503:3512  claimable */\n      dup3\n        /* \"Staking.sol\":3475:3490  distributeLevel */\n      tag_116\n        /* \"Staking.sol\":3475:3513  distributeLevel(l.referral, claimable) */\n      jump\t// in\n    tag_115:\n        /* \"Staking.sol\":3297:3529  {... */\n      pop\n        /* \"Staking.sol\":3264:3529  if (totalVested > l.claimAmount) {... */\n    tag_111:\n        /* \"Staking.sol\":2818:3540  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Staking.sol\":2778:3540  for (uint i = 0; i < locks.length; i++) {... */\n    tag_96:\n        /* \"Staking.sol\":2813:2816  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"Staking.sol\":2778:3540  for (uint i = 0; i < locks.length; i++) {... */\n      jump(tag_94)\n    tag_95:\n      pop\n        /* \"Staking.sol\":3577:3578  0 */\n      0x00\n        /* \"Staking.sol\":3560:3574  totalClaimable */\n      dup2\n        /* \"Staking.sol\":3560:3578  totalClaimable > 0 */\n      gt\n        /* \"Staking.sol\":3552:3611  require(totalClaimable > 0, \"No tokens available to claim\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"Staking.sol\":3622:3667  nlnt.safeTransfer(msg.sender, totalClaimable) */\n      tag_120\n        /* \"Staking.sol\":3640:3650  msg.sender */\n      caller\n        /* \"Staking.sol\":3652:3666  totalClaimable */\n      dup3\n        /* \"Staking.sol\":3622:3626  nlnt */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":3622:3639  nlnt.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_121\n      swap1\n        /* \"Staking.sol\":3622:3667  nlnt.safeTransfer(msg.sender, totalClaimable) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_120:\n        /* \"Staking.sol\":3697:3707  msg.sender */\n      caller\n        /* \"Staking.sol\":3683:3724  TokensClaimed(msg.sender, totalClaimable) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430\n        /* \"Staking.sol\":3709:3723  totalClaimable */\n      dup3\n        /* \"Staking.sol\":3683:3724  TokensClaimed(msg.sender, totalClaimable) */\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":2671:3732  {... */\n      pop\n      pop\n        /* \"Staking.sol\":2639:3732  function claimTokens() external {... */\n      jump\t// out\n        /* \"Staking.sol\":1455:1616  function emergencyWithdraw(uint256 amount) external onlyAdmin {... */\n    tag_34:\n        /* \"Staking.sol\":1384:1389  admin */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":1370:1389  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":1370:1380  msg.sender */\n      caller\n        /* \"Staking.sol\":1370:1389  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Staking.sol\":1362:1427  require(msg.sender == admin, \"Only admin can call this function\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"Staking.sol\":1528:1560  nlnt.safeTransfer(admin, amount) */\n      tag_128\n        /* \"Staking.sol\":1546:1551  admin */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":1553:1559  amount */\n      dup3\n        /* \"Staking.sol\":1528:1532  nlnt */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":1528:1545  nlnt.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_121\n      swap1\n        /* \"Staking.sol\":1528:1560  nlnt.safeTransfer(admin, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_128:\n        /* \"Staking.sol\":1594:1599  admin */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":1576:1608  EmergencyWithdraw(admin, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695\n        /* \"Staking.sol\":1601:1607  amount */\n      dup3\n        /* \"Staking.sol\":1576:1608  EmergencyWithdraw(admin, amount) */\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":1455:1616  function emergencyWithdraw(uint256 amount) external onlyAdmin {... */\n      pop\n      jump\t// out\n        /* \"Staking.sol\":1168:1218  mapping(address => uint256) public referralRewards */\n    tag_38:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":560:597  uint8 public constant globalLevel = 3 */\n    tag_41:\n        /* \"Staking.sol\":596:597  3 */\n      0x03\n        /* \"Staking.sol\":560:597  uint8 public constant globalLevel = 3 */\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":413:454  uint256 public constant maxAmount = 10000 */\n    tag_45:\n        /* \"Staking.sol\":449:454  10000 */\n      0x2710\n        /* \"Staking.sol\":413:454  uint256 public constant maxAmount = 10000 */\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":4652:5060  function claimLevelIncome() external {... */\n    tag_48:\n        /* \"Staking.sol\":4700:4720  Lock[] storage locks */\n      0x00\n        /* \"Staking.sol\":4723:4738  allStakeDetails */\n      0x02\n        /* \"Staking.sol\":4723:4750  allStakeDetails[msg.sender] */\n      0x00\n        /* \"Staking.sol\":4739:4749  msg.sender */\n      caller\n        /* \"Staking.sol\":4723:4750  allStakeDetails[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":4700:4750  Lock[] storage locks = allStakeDetails[msg.sender] */\n      swap1\n      pop\n        /* \"Staking.sol\":4784:4785  0 */\n      0x00\n        /* \"Staking.sol\":4769:4774  locks */\n      dup2\n        /* \"Staking.sol\":4769:4781  locks.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Staking.sol\":4769:4785  locks.length > 0 */\n      gt\n        /* \"Staking.sol\":4761:4805  require(locks.length > 0, \"No stakes found\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"Staking.sol\":4818:4832  uint256 income */\n      0x00\n        /* \"Staking.sol\":4835:4840  locks */\n      dup2\n        /* \"Staking.sol\":4841:4842  0 */\n      0x00\n        /* \"Staking.sol\":4835:4843  locks[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_135\n      tag_99\n      jump\t// in\n    tag_135:\n    tag_134:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":4835:4855  locks[0].levelIncome */\n      0x03\n      add\n      sload\n        /* \"Staking.sol\":4818:4855  uint256 income = locks[0].levelIncome */\n      swap1\n      pop\n        /* \"Staking.sol\":4883:4884  0 */\n      0x00\n        /* \"Staking.sol\":4874:4880  income */\n      dup2\n        /* \"Staking.sol\":4874:4884  income > 0 */\n      gt\n        /* \"Staking.sol\":4866:4913  require(income > 0, \"No level income to claim\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"Staking.sol\":4949:4950  0 */\n      0x00\n        /* \"Staking.sol\":4926:4931  locks */\n      dup3\n        /* \"Staking.sol\":4932:4933  0 */\n      0x00\n        /* \"Staking.sol\":4926:4934  locks[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_140\n      jumpi\n      tag_141\n      tag_99\n      jump\t// in\n    tag_141:\n    tag_140:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":4926:4946  locks[0].levelIncome */\n      0x03\n      add\n        /* \"Staking.sol\":4926:4950  locks[0].levelIncome = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":4961:4998  nlnt.safeTransfer(msg.sender, income) */\n      tag_143\n        /* \"Staking.sol\":4979:4989  msg.sender */\n      caller\n        /* \"Staking.sol\":4991:4997  income */\n      dup3\n        /* \"Staking.sol\":4961:4965  nlnt */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":4961:4978  nlnt.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_121\n      swap1\n        /* \"Staking.sol\":4961:4998  nlnt.safeTransfer(msg.sender, income) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"Staking.sol\":5033:5043  msg.sender */\n      caller\n        /* \"Staking.sol\":5014:5052  LevelIncomeClaimed(msg.sender, income) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8830fd27a530b5f90e62adf0b2d34e36b25aa4f956359df6db4bcdec067f75b1\n        /* \"Staking.sol\":5045:5051  income */\n      dup3\n        /* \"Staking.sol\":5014:5052  LevelIncomeClaimed(msg.sender, income) */\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":4689:5060  {... */\n      pop\n      pop\n        /* \"Staking.sol\":4652:5060  function claimLevelIncome() external {... */\n      jump\t// out\n        /* \"Staking.sol\":507:553  uint256 public constant ReferralPercentage = 5 */\n    tag_50:\n        /* \"Staking.sol\":552:553  5 */\n      0x05\n        /* \"Staking.sol\":507:553  uint256 public constant ReferralPercentage = 5 */\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":358:406  uint256 public constant totalDuration = 365 days */\n    tag_53:\n        /* \"Staking.sol\":398:406  365 days */\n      0x01e13380\n        /* \"Staking.sol\":358:406  uint256 public constant totalDuration = 365 days */\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":461:500  uint256 public constant minAmount = 100 */\n    tag_56:\n        /* \"Staking.sol\":497:500  100 */\n      0x64\n        /* \"Staking.sol\":461:500  uint256 public constant minAmount = 100 */\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":3740:4052  function claimReferralReward() external {... */\n    tag_59:\n        /* \"Staking.sol\":3791:3805  uint256 reward */\n      0x00\n        /* \"Staking.sol\":3808:3823  referralRewards */\n      0x03\n        /* \"Staking.sol\":3808:3835  referralRewards[msg.sender] */\n      0x00\n        /* \"Staking.sol\":3824:3834  msg.sender */\n      caller\n        /* \"Staking.sol\":3808:3835  referralRewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Staking.sol\":3791:3835  uint256 reward = referralRewards[msg.sender] */\n      swap1\n      pop\n        /* \"Staking.sol\":3863:3864  0 */\n      0x00\n        /* \"Staking.sol\":3854:3860  reward */\n      dup2\n        /* \"Staking.sol\":3854:3864  reward > 0 */\n      gt\n        /* \"Staking.sol\":3846:3897  require(reward > 0, \"No referral reward available\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"Staking.sol\":3938:3939  0 */\n      0x00\n        /* \"Staking.sol\":3908:3923  referralRewards */\n      0x03\n        /* \"Staking.sol\":3908:3935  referralRewards[msg.sender] */\n      0x00\n        /* \"Staking.sol\":3924:3934  msg.sender */\n      caller\n        /* \"Staking.sol\":3908:3935  referralRewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":3908:3939  referralRewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":3950:3987  nlnt.safeTransfer(msg.sender, reward) */\n      tag_149\n        /* \"Staking.sol\":3968:3978  msg.sender */\n      caller\n        /* \"Staking.sol\":3980:3986  reward */\n      dup3\n        /* \"Staking.sol\":3950:3954  nlnt */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":3950:3967  nlnt.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_121\n      swap1\n        /* \"Staking.sol\":3950:3987  nlnt.safeTransfer(msg.sender, reward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"Staking.sol\":4025:4035  msg.sender */\n      caller\n        /* \"Staking.sol\":4003:4044  ReferralRewardClaimed(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5be4d22009fea85381595ed91090bc5c0bc92a93fe07ed7472c5888eb1993f83\n        /* \"Staking.sol\":4037:4043  reward */\n      dup3\n        /* \"Staking.sol\":4003:4044  ReferralRewardClaimed(msg.sender, reward) */\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":3780:4052  {... */\n      pop\n        /* \"Staking.sol\":3740:4052  function claimReferralReward() external {... */\n      jump\t// out\n        /* \"Staking.sol\":258:276  IERC20 public nlnt */\n    tag_61:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":1112:1161  mapping(address => Lock[]) public allStakeDetails */\n    tag_66:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"Staking.sol\":283:303  address public admin */\n    tag_70:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_155\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Staking.sol\":4060:4644  function distributeLevel(address _refAddress, uint256 rewardAmount) internal {... */\n    tag_116:\n        /* \"Staking.sol\":4148:4179  uint8[3] memory levelPercentage */\n      0x00\n        /* \"Staking.sol\":4148:4193  uint8[3] memory levelPercentage = [15, 10, 5] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Staking.sol\":4183:4185  15 */\n      0x0f\n        /* \"Staking.sol\":4148:4193  uint8[3] memory levelPercentage = [15, 10, 5] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":4187:4189  10 */\n      0x0a\n        /* \"Staking.sol\":4148:4193  uint8[3] memory levelPercentage = [15, 10, 5] */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":4191:4192  5 */\n      0x05\n        /* \"Staking.sol\":4148:4193  uint8[3] memory levelPercentage = [15, 10, 5] */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"Staking.sol\":4204:4222  address currentRef */\n      0x00\n        /* \"Staking.sol\":4225:4236  _refAddress */\n      dup4\n        /* \"Staking.sol\":4204:4236  address currentRef = _refAddress */\n      swap1\n      pop\n        /* \"Staking.sol\":4254:4260  uint i */\n      0x00\n        /* \"Staking.sol\":4249:4637  for (uint i = 0; i < globalLevel; i++) {... */\n    tag_159:\n        /* \"Staking.sol\":596:597  3 */\n      0x03\n        /* \"Staking.sol\":4266:4281  i < globalLevel */\n      0xff\n      and\n        /* \"Staking.sol\":4266:4267  i */\n      dup2\n        /* \"Staking.sol\":4266:4281  i < globalLevel */\n      lt\n        /* \"Staking.sol\":4249:4637  for (uint i = 0; i < globalLevel; i++) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"Staking.sol\":4329:4330  0 */\n      0x00\n        /* \"Staking.sol\":4307:4331  currentRef == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":4307:4317  currentRef */\n      dup3\n        /* \"Staking.sol\":4307:4331  currentRef == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Staking.sol\":4303:4338  if (currentRef == address(0)) break */\n      iszero\n        /* \"Staking.sol\":4333:4338  break */\n      tag_160\n        /* \"Staking.sol\":4303:4338  if (currentRef == address(0)) break */\n      jumpi\n        /* \"Staking.sol\":4355:4378  Lock[] storage refLocks */\n      0x00\n        /* \"Staking.sol\":4381:4396  allStakeDetails */\n      0x02\n        /* \"Staking.sol\":4381:4408  allStakeDetails[currentRef] */\n      0x00\n        /* \"Staking.sol\":4397:4407  currentRef */\n      dup5\n        /* \"Staking.sol\":4381:4408  allStakeDetails[currentRef] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":4355:4408  Lock[] storage refLocks = allStakeDetails[currentRef] */\n      swap1\n      pop\n        /* \"Staking.sol\":4446:4447  0 */\n      0x00\n        /* \"Staking.sol\":4427:4435  refLocks */\n      dup2\n        /* \"Staking.sol\":4427:4442  refLocks.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Staking.sol\":4427:4447  refLocks.length == 0 */\n      sub\n        /* \"Staking.sol\":4423:4454  if (refLocks.length == 0) break */\n      tag_163\n      jumpi\n        /* \"Staking.sol\":4449:4454  break */\n      pop\n      jump(tag_160)\n        /* \"Staking.sol\":4423:4454  if (refLocks.length == 0) break */\n    tag_163:\n        /* \"Staking.sol\":4471:4485  uint256 reward */\n      0x00\n        /* \"Staking.sol\":4526:4529  100 */\n      0x64\n        /* \"Staking.sol\":4504:4519  levelPercentage */\n      dup6\n        /* \"Staking.sol\":4520:4521  i */\n      dup5\n        /* \"Staking.sol\":4504:4522  levelPercentage[i] */\n      0x03\n      dup2\n      lt\n      tag_164\n      jumpi\n      tag_165\n      tag_99\n      jump\t// in\n    tag_165:\n    tag_164:\n      0x20\n      mul\n      add\n      mload\n        /* \"Staking.sol\":4489:4522  rewardAmount * levelPercentage[i] */\n      0xff\n      and\n        /* \"Staking.sol\":4489:4501  rewardAmount */\n      dup8\n        /* \"Staking.sol\":4489:4522  rewardAmount * levelPercentage[i] */\n      tag_166\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_166:\n        /* \"Staking.sol\":4488:4529  (rewardAmount * levelPercentage[i]) / 100 */\n      tag_167\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_167:\n        /* \"Staking.sol\":4471:4529  uint256 reward = (rewardAmount * levelPercentage[i]) / 100 */\n      swap1\n      pop\n        /* \"Staking.sol\":4571:4577  reward */\n      dup1\n        /* \"Staking.sol\":4544:4552  refLocks */\n      dup3\n        /* \"Staking.sol\":4553:4554  0 */\n      0x00\n        /* \"Staking.sol\":4544:4555  refLocks[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_168\n      jumpi\n      tag_169\n      tag_99\n      jump\t// in\n    tag_169:\n    tag_168:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":4544:4567  refLocks[0].levelIncome */\n      0x03\n      add\n      0x00\n        /* \"Staking.sol\":4544:4577  refLocks[0].levelIncome += reward */\n      dup3\n      dup3\n      sload\n      tag_171\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_171:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":4605:4613  refLocks */\n      dup2\n        /* \"Staking.sol\":4614:4615  0 */\n      0x00\n        /* \"Staking.sol\":4605:4616  refLocks[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_172\n      jumpi\n      tag_173\n      tag_99\n      jump\t// in\n    tag_173:\n    tag_172:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":4605:4625  refLocks[0].referral */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":4592:4625  currentRef = refLocks[0].referral */\n      swap4\n      pop\n        /* \"Staking.sol\":4288:4637  {... */\n      pop\n      pop\n        /* \"Staking.sol\":4283:4286  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"Staking.sol\":4249:4637  for (uint i = 0; i < globalLevel; i++) {... */\n      jump(tag_159)\n    tag_160:\n      pop\n        /* \"Staking.sol\":4137:4644  {... */\n      pop\n      pop\n        /* \"Staking.sol\":4060:4644  function distributeLevel(address _refAddress, uint256 rewardAmount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_177\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_182)\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_185:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_186:\n        /* \"#utility.yul\":177:201   */\n      tag_224\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_185\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_24:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_226\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_186\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_188:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_190:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_191:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_232\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_190\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_192:\n        /* \"#utility.yul\":1076:1100   */\n      tag_234\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_191\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_235:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_193:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_237\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_192\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1398   */\n    tag_194:\n        /* \"#utility.yul\":1349:1373   */\n      tag_239\n        /* \"#utility.yul\":1367:1372   */\n      dup2\n        /* \"#utility.yul\":1349:1373   */\n      tag_185\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":1342:1347   */\n      dup2\n        /* \"#utility.yul\":1339:1374   */\n      eq\n        /* \"#utility.yul\":1329:1392   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      dup1\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1329:1392   */\n    tag_240:\n        /* \"#utility.yul\":1276:1398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1543   */\n    tag_195:\n        /* \"#utility.yul\":1450:1455   */\n      0x00\n        /* \"#utility.yul\":1488:1494   */\n      dup2\n        /* \"#utility.yul\":1475:1495   */\n      calldataload\n        /* \"#utility.yul\":1466:1495   */\n      swap1\n      pop\n        /* \"#utility.yul\":1504:1537   */\n      tag_242\n        /* \"#utility.yul\":1531:1536   */\n      dup2\n        /* \"#utility.yul\":1504:1537   */\n      tag_194\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":1404:1543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:2023   */\n    tag_27:\n        /* \"#utility.yul\":1617:1623   */\n      0x00\n        /* \"#utility.yul\":1625:1631   */\n      dup1\n        /* \"#utility.yul\":1674:1676   */\n      0x40\n        /* \"#utility.yul\":1662:1671   */\n      dup4\n        /* \"#utility.yul\":1653:1660   */\n      dup6\n        /* \"#utility.yul\":1649:1672   */\n      sub\n        /* \"#utility.yul\":1645:1677   */\n      slt\n        /* \"#utility.yul\":1642:1761   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":1680:1759   */\n      tag_245\n      tag_188\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":1642:1761   */\n    tag_244:\n        /* \"#utility.yul\":1800:1801   */\n      0x00\n        /* \"#utility.yul\":1825:1878   */\n      tag_246\n        /* \"#utility.yul\":1870:1877   */\n      dup6\n        /* \"#utility.yul\":1861:1867   */\n      dup3\n        /* \"#utility.yul\":1850:1859   */\n      dup7\n        /* \"#utility.yul\":1846:1868   */\n      add\n        /* \"#utility.yul\":1825:1878   */\n      tag_193\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":1815:1878   */\n      swap3\n      pop\n        /* \"#utility.yul\":1771:1888   */\n      pop\n        /* \"#utility.yul\":1927:1929   */\n      0x20\n        /* \"#utility.yul\":1953:2006   */\n      tag_247\n        /* \"#utility.yul\":1998:2005   */\n      dup6\n        /* \"#utility.yul\":1989:1995   */\n      dup3\n        /* \"#utility.yul\":1978:1987   */\n      dup7\n        /* \"#utility.yul\":1974:1996   */\n      add\n        /* \"#utility.yul\":1953:2006   */\n      tag_195\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":1943:2006   */\n      swap2\n      pop\n        /* \"#utility.yul\":1898:2016   */\n      pop\n        /* \"#utility.yul\":1549:2023   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2358   */\n    tag_33:\n        /* \"#utility.yul\":2088:2094   */\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2125:2134   */\n      dup3\n        /* \"#utility.yul\":2116:2123   */\n      dup5\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2224   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":2143:2222   */\n      tag_250\n      tag_188\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":2105:2224   */\n    tag_249:\n        /* \"#utility.yul\":2263:2264   */\n      0x00\n        /* \"#utility.yul\":2288:2341   */\n      tag_251\n        /* \"#utility.yul\":2333:2340   */\n      dup5\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup6\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_195\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2234:2351   */\n      pop\n        /* \"#utility.yul\":2029:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2693   */\n    tag_37:\n        /* \"#utility.yul\":2423:2429   */\n      0x00\n        /* \"#utility.yul\":2472:2474   */\n      0x20\n        /* \"#utility.yul\":2460:2469   */\n      dup3\n        /* \"#utility.yul\":2451:2458   */\n      dup5\n        /* \"#utility.yul\":2447:2470   */\n      sub\n        /* \"#utility.yul\":2443:2475   */\n      slt\n        /* \"#utility.yul\":2440:2559   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":2478:2557   */\n      tag_254\n      tag_188\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2440:2559   */\n    tag_253:\n        /* \"#utility.yul\":2598:2599   */\n      0x00\n        /* \"#utility.yul\":2623:2676   */\n      tag_255\n        /* \"#utility.yul\":2668:2675   */\n      dup5\n        /* \"#utility.yul\":2659:2665   */\n      dup3\n        /* \"#utility.yul\":2648:2657   */\n      dup6\n        /* \"#utility.yul\":2644:2666   */\n      add\n        /* \"#utility.yul\":2623:2676   */\n      tag_193\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2613:2676   */\n      swap2\n      pop\n        /* \"#utility.yul\":2569:2686   */\n      pop\n        /* \"#utility.yul\":2364:2693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:2785   */\n    tag_196:\n        /* \"#utility.yul\":2734:2741   */\n      0x00\n        /* \"#utility.yul\":2774:2778   */\n      0xff\n        /* \"#utility.yul\":2767:2772   */\n      dup3\n        /* \"#utility.yul\":2763:2779   */\n      and\n        /* \"#utility.yul\":2752:2779   */\n      swap1\n      pop\n        /* \"#utility.yul\":2699:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:2903   */\n    tag_197:\n        /* \"#utility.yul\":2874:2896   */\n      tag_258\n        /* \"#utility.yul\":2890:2895   */\n      dup2\n        /* \"#utility.yul\":2874:2896   */\n      tag_196\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2869:2872   */\n      dup3\n        /* \"#utility.yul\":2862:2897   */\n      mstore\n        /* \"#utility.yul\":2791:2903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2909:3123   */\n    tag_43:\n        /* \"#utility.yul\":2998:3002   */\n      0x00\n        /* \"#utility.yul\":3036:3038   */\n      0x20\n        /* \"#utility.yul\":3025:3034   */\n      dup3\n        /* \"#utility.yul\":3021:3039   */\n      add\n        /* \"#utility.yul\":3013:3039   */\n      swap1\n      pop\n        /* \"#utility.yul\":3049:3116   */\n      tag_260\n        /* \"#utility.yul\":3113:3114   */\n      0x00\n        /* \"#utility.yul\":3102:3111   */\n      dup4\n        /* \"#utility.yul\":3098:3115   */\n      add\n        /* \"#utility.yul\":3089:3095   */\n      dup5\n        /* \"#utility.yul\":3049:3116   */\n      tag_197\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2909:3123   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3129:3189   */\n    tag_198:\n        /* \"#utility.yul\":3157:3160   */\n      0x00\n        /* \"#utility.yul\":3178:3183   */\n      dup2\n        /* \"#utility.yul\":3171:3183   */\n      swap1\n      pop\n        /* \"#utility.yul\":3129:3189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3195:3337   */\n    tag_199:\n        /* \"#utility.yul\":3245:3254   */\n      0x00\n        /* \"#utility.yul\":3278:3331   */\n      tag_263\n        /* \"#utility.yul\":3296:3330   */\n      tag_264\n        /* \"#utility.yul\":3305:3329   */\n      tag_265\n        /* \"#utility.yul\":3323:3328   */\n      dup5\n        /* \"#utility.yul\":3305:3329   */\n      tag_190\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":3296:3330   */\n      tag_198\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":3278:3331   */\n      tag_190\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3265:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3195:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3469   */\n    tag_200:\n        /* \"#utility.yul\":3393:3402   */\n      0x00\n        /* \"#utility.yul\":3426:3463   */\n      tag_267\n        /* \"#utility.yul\":3457:3462   */\n      dup3\n        /* \"#utility.yul\":3426:3463   */\n      tag_199\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3413:3463   */\n      swap1\n      pop\n        /* \"#utility.yul\":3343:3469   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3475:3615   */\n    tag_201:\n        /* \"#utility.yul\":3539:3548   */\n      0x00\n        /* \"#utility.yul\":3572:3609   */\n      tag_269\n        /* \"#utility.yul\":3603:3608   */\n      dup3\n        /* \"#utility.yul\":3572:3609   */\n      tag_200\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3559:3609   */\n      swap1\n      pop\n        /* \"#utility.yul\":3475:3615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3621:3780   */\n    tag_202:\n        /* \"#utility.yul\":3722:3773   */\n      tag_271\n        /* \"#utility.yul\":3767:3772   */\n      dup2\n        /* \"#utility.yul\":3722:3773   */\n      tag_201\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3717:3720   */\n      dup3\n        /* \"#utility.yul\":3710:3774   */\n      mstore\n        /* \"#utility.yul\":3621:3780   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3786:4036   */\n    tag_63:\n        /* \"#utility.yul\":3893:3897   */\n      0x00\n        /* \"#utility.yul\":3931:3933   */\n      0x20\n        /* \"#utility.yul\":3920:3929   */\n      dup3\n        /* \"#utility.yul\":3916:3934   */\n      add\n        /* \"#utility.yul\":3908:3934   */\n      swap1\n      pop\n        /* \"#utility.yul\":3944:4029   */\n      tag_273\n        /* \"#utility.yul\":4026:4027   */\n      0x00\n        /* \"#utility.yul\":4015:4024   */\n      dup4\n        /* \"#utility.yul\":4011:4028   */\n      add\n        /* \"#utility.yul\":4002:4008   */\n      dup5\n        /* \"#utility.yul\":3944:4029   */\n      tag_202\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":3786:4036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4042:4160   */\n    tag_203:\n        /* \"#utility.yul\":4129:4153   */\n      tag_275\n        /* \"#utility.yul\":4147:4152   */\n      dup2\n        /* \"#utility.yul\":4129:4153   */\n      tag_191\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4124:4127   */\n      dup3\n        /* \"#utility.yul\":4117:4154   */\n      mstore\n        /* \"#utility.yul\":4042:4160   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4166:4830   */\n    tag_68:\n        /* \"#utility.yul\":4371:4375   */\n      0x00\n        /* \"#utility.yul\":4409:4412   */\n      0xa0\n        /* \"#utility.yul\":4398:4407   */\n      dup3\n        /* \"#utility.yul\":4394:4413   */\n      add\n        /* \"#utility.yul\":4386:4413   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4494   */\n      tag_277\n        /* \"#utility.yul\":4491:4492   */\n      0x00\n        /* \"#utility.yul\":4480:4489   */\n      dup4\n        /* \"#utility.yul\":4476:4493   */\n      add\n        /* \"#utility.yul\":4467:4473   */\n      dup9\n        /* \"#utility.yul\":4423:4494   */\n      tag_186\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4504:4576   */\n      tag_278\n        /* \"#utility.yul\":4572:4574   */\n      0x20\n        /* \"#utility.yul\":4561:4570   */\n      dup4\n        /* \"#utility.yul\":4557:4575   */\n      add\n        /* \"#utility.yul\":4548:4554   */\n      dup8\n        /* \"#utility.yul\":4504:4576   */\n      tag_186\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4586:4658   */\n      tag_279\n        /* \"#utility.yul\":4654:4656   */\n      0x40\n        /* \"#utility.yul\":4643:4652   */\n      dup4\n        /* \"#utility.yul\":4639:4657   */\n      add\n        /* \"#utility.yul\":4630:4636   */\n      dup7\n        /* \"#utility.yul\":4586:4658   */\n      tag_186\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":4668:4740   */\n      tag_280\n        /* \"#utility.yul\":4736:4738   */\n      0x60\n        /* \"#utility.yul\":4725:4734   */\n      dup4\n        /* \"#utility.yul\":4721:4739   */\n      add\n        /* \"#utility.yul\":4712:4718   */\n      dup6\n        /* \"#utility.yul\":4668:4740   */\n      tag_186\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":4750:4823   */\n      tag_281\n        /* \"#utility.yul\":4818:4821   */\n      0x80\n        /* \"#utility.yul\":4807:4816   */\n      dup4\n        /* \"#utility.yul\":4803:4822   */\n      add\n        /* \"#utility.yul\":4794:4800   */\n      dup5\n        /* \"#utility.yul\":4750:4823   */\n      tag_203\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":4166:4830   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4836:5058   */\n    tag_72:\n        /* \"#utility.yul\":4929:4933   */\n      0x00\n        /* \"#utility.yul\":4967:4969   */\n      0x20\n        /* \"#utility.yul\":4956:4965   */\n      dup3\n        /* \"#utility.yul\":4952:4970   */\n      add\n        /* \"#utility.yul\":4944:4970   */\n      swap1\n      pop\n        /* \"#utility.yul\":4980:5051   */\n      tag_283\n        /* \"#utility.yul\":5048:5049   */\n      0x00\n        /* \"#utility.yul\":5037:5046   */\n      dup4\n        /* \"#utility.yul\":5033:5050   */\n      add\n        /* \"#utility.yul\":5024:5030   */\n      dup5\n        /* \"#utility.yul\":4980:5051   */\n      tag_203\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":4836:5058   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5064:5233   */\n    tag_204:\n        /* \"#utility.yul\":5148:5159   */\n      0x00\n        /* \"#utility.yul\":5182:5188   */\n      dup3\n        /* \"#utility.yul\":5177:5180   */\n      dup3\n        /* \"#utility.yul\":5170:5189   */\n      mstore\n        /* \"#utility.yul\":5222:5226   */\n      0x20\n        /* \"#utility.yul\":5217:5220   */\n      dup3\n        /* \"#utility.yul\":5213:5227   */\n      add\n        /* \"#utility.yul\":5198:5227   */\n      swap1\n      pop\n        /* \"#utility.yul\":5064:5233   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5239:5414   */\n    tag_205:\n        /* \"#utility.yul\":5379:5406   */\n      0x5374616b6520616d6f756e74206f7574206f662072616e676500000000000000\n        /* \"#utility.yul\":5375:5376   */\n      0x00\n        /* \"#utility.yul\":5367:5373   */\n      dup3\n        /* \"#utility.yul\":5363:5377   */\n      add\n        /* \"#utility.yul\":5356:5407   */\n      mstore\n        /* \"#utility.yul\":5239:5414   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5420:5786   */\n    tag_206:\n        /* \"#utility.yul\":5562:5565   */\n      0x00\n        /* \"#utility.yul\":5583:5650   */\n      tag_287\n        /* \"#utility.yul\":5647:5649   */\n      0x19\n        /* \"#utility.yul\":5642:5645   */\n      dup4\n        /* \"#utility.yul\":5583:5650   */\n      tag_204\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5576:5650   */\n      swap2\n      pop\n        /* \"#utility.yul\":5659:5752   */\n      tag_288\n        /* \"#utility.yul\":5748:5751   */\n      dup3\n        /* \"#utility.yul\":5659:5752   */\n      tag_205\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":5777:5779   */\n      0x20\n        /* \"#utility.yul\":5772:5775   */\n      dup3\n        /* \"#utility.yul\":5768:5780   */\n      add\n        /* \"#utility.yul\":5761:5780   */\n      swap1\n      pop\n        /* \"#utility.yul\":5420:5786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5792:6211   */\n    tag_77:\n        /* \"#utility.yul\":5958:5962   */\n      0x00\n        /* \"#utility.yul\":5996:5998   */\n      0x20\n        /* \"#utility.yul\":5985:5994   */\n      dup3\n        /* \"#utility.yul\":5981:5999   */\n      add\n        /* \"#utility.yul\":5973:5999   */\n      swap1\n      pop\n        /* \"#utility.yul\":6045:6054   */\n      dup2\n        /* \"#utility.yul\":6039:6043   */\n      dup2\n        /* \"#utility.yul\":6035:6055   */\n      sub\n        /* \"#utility.yul\":6031:6032   */\n      0x00\n        /* \"#utility.yul\":6020:6029   */\n      dup4\n        /* \"#utility.yul\":6016:6033   */\n      add\n        /* \"#utility.yul\":6009:6056   */\n      mstore\n        /* \"#utility.yul\":6073:6204   */\n      tag_290\n        /* \"#utility.yul\":6199:6203   */\n      dup2\n        /* \"#utility.yul\":6073:6204   */\n      tag_206\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":6065:6204   */\n      swap1\n      pop\n        /* \"#utility.yul\":5792:6211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6217:6392   */\n    tag_207:\n        /* \"#utility.yul\":6357:6384   */\n      0x53656c6620726566657272616c206e6f7420616c6c6f77656400000000000000\n        /* \"#utility.yul\":6353:6354   */\n      0x00\n        /* \"#utility.yul\":6345:6351   */\n      dup3\n        /* \"#utility.yul\":6341:6355   */\n      add\n        /* \"#utility.yul\":6334:6385   */\n      mstore\n        /* \"#utility.yul\":6217:6392   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6398:6764   */\n    tag_208:\n        /* \"#utility.yul\":6540:6543   */\n      0x00\n        /* \"#utility.yul\":6561:6628   */\n      tag_293\n        /* \"#utility.yul\":6625:6627   */\n      0x19\n        /* \"#utility.yul\":6620:6623   */\n      dup4\n        /* \"#utility.yul\":6561:6628   */\n      tag_204\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":6554:6628   */\n      swap2\n      pop\n        /* \"#utility.yul\":6637:6730   */\n      tag_294\n        /* \"#utility.yul\":6726:6729   */\n      dup3\n        /* \"#utility.yul\":6637:6730   */\n      tag_207\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":6755:6757   */\n      0x20\n        /* \"#utility.yul\":6750:6753   */\n      dup3\n        /* \"#utility.yul\":6746:6758   */\n      add\n        /* \"#utility.yul\":6739:6758   */\n      swap1\n      pop\n        /* \"#utility.yul\":6398:6764   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6770:7189   */\n    tag_80:\n        /* \"#utility.yul\":6936:6940   */\n      0x00\n        /* \"#utility.yul\":6974:6976   */\n      0x20\n        /* \"#utility.yul\":6963:6972   */\n      dup3\n        /* \"#utility.yul\":6959:6977   */\n      add\n        /* \"#utility.yul\":6951:6977   */\n      swap1\n      pop\n        /* \"#utility.yul\":7023:7032   */\n      dup2\n        /* \"#utility.yul\":7017:7021   */\n      dup2\n        /* \"#utility.yul\":7013:7033   */\n      sub\n        /* \"#utility.yul\":7009:7010   */\n      0x00\n        /* \"#utility.yul\":6998:7007   */\n      dup4\n        /* \"#utility.yul\":6994:7011   */\n      add\n        /* \"#utility.yul\":6987:7034   */\n      mstore\n        /* \"#utility.yul\":7051:7182   */\n      tag_296\n        /* \"#utility.yul\":7177:7181   */\n      dup2\n        /* \"#utility.yul\":7051:7182   */\n      tag_208\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":7043:7182   */\n      swap1\n      pop\n        /* \"#utility.yul\":6770:7189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7195:7375   */\n    tag_209:\n        /* \"#utility.yul\":7243:7320   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7240:7241   */\n      0x00\n        /* \"#utility.yul\":7233:7321   */\n      mstore\n        /* \"#utility.yul\":7340:7344   */\n      0x11\n        /* \"#utility.yul\":7337:7338   */\n      0x04\n        /* \"#utility.yul\":7330:7345   */\n      mstore\n        /* \"#utility.yul\":7364:7368   */\n      0x24\n        /* \"#utility.yul\":7361:7362   */\n      0x00\n        /* \"#utility.yul\":7354:7369   */\n      revert\n        /* \"#utility.yul\":7381:7791   */\n    tag_86:\n        /* \"#utility.yul\":7421:7428   */\n      0x00\n        /* \"#utility.yul\":7444:7464   */\n      tag_299\n        /* \"#utility.yul\":7462:7463   */\n      dup3\n        /* \"#utility.yul\":7444:7464   */\n      tag_185\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":7439:7464   */\n      swap2\n      pop\n        /* \"#utility.yul\":7478:7498   */\n      tag_300\n        /* \"#utility.yul\":7496:7497   */\n      dup4\n        /* \"#utility.yul\":7478:7498   */\n      tag_185\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":7473:7498   */\n      swap3\n      pop\n        /* \"#utility.yul\":7533:7534   */\n      dup3\n        /* \"#utility.yul\":7530:7531   */\n      dup3\n        /* \"#utility.yul\":7526:7535   */\n      mul\n        /* \"#utility.yul\":7555:7585   */\n      tag_301\n        /* \"#utility.yul\":7573:7584   */\n      dup2\n        /* \"#utility.yul\":7555:7585   */\n      tag_185\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":7544:7585   */\n      swap2\n      pop\n        /* \"#utility.yul\":7734:7735   */\n      dup3\n        /* \"#utility.yul\":7725:7732   */\n      dup3\n        /* \"#utility.yul\":7721:7736   */\n      div\n        /* \"#utility.yul\":7718:7719   */\n      dup5\n        /* \"#utility.yul\":7715:7737   */\n      eq\n        /* \"#utility.yul\":7695:7696   */\n      dup4\n        /* \"#utility.yul\":7688:7697   */\n      iszero\n        /* \"#utility.yul\":7668:7751   */\n      or\n        /* \"#utility.yul\":7645:7784   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":7764:7782   */\n      tag_303\n      tag_209\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":7645:7784   */\n    tag_302:\n        /* \"#utility.yul\":7429:7791   */\n      pop\n        /* \"#utility.yul\":7381:7791   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7797:7977   */\n    tag_210:\n        /* \"#utility.yul\":7845:7922   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7842:7843   */\n      0x00\n        /* \"#utility.yul\":7835:7923   */\n      mstore\n        /* \"#utility.yul\":7942:7946   */\n      0x12\n        /* \"#utility.yul\":7939:7940   */\n      0x04\n        /* \"#utility.yul\":7932:7947   */\n      mstore\n        /* \"#utility.yul\":7966:7970   */\n      0x24\n        /* \"#utility.yul\":7963:7964   */\n      0x00\n        /* \"#utility.yul\":7956:7971   */\n      revert\n        /* \"#utility.yul\":7983:8168   */\n    tag_88:\n        /* \"#utility.yul\":8023:8024   */\n      0x00\n        /* \"#utility.yul\":8040:8060   */\n      tag_306\n        /* \"#utility.yul\":8058:8059   */\n      dup3\n        /* \"#utility.yul\":8040:8060   */\n      tag_185\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":8035:8060   */\n      swap2\n      pop\n        /* \"#utility.yul\":8074:8094   */\n      tag_307\n        /* \"#utility.yul\":8092:8093   */\n      dup4\n        /* \"#utility.yul\":8074:8094   */\n      tag_185\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":8069:8094   */\n      swap3\n      pop\n        /* \"#utility.yul\":8113:8114   */\n      dup3\n        /* \"#utility.yul\":8103:8138   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":8118:8136   */\n      tag_309\n      tag_210\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":8103:8138   */\n    tag_308:\n        /* \"#utility.yul\":8160:8161   */\n      dup3\n        /* \"#utility.yul\":8157:8158   */\n      dup3\n        /* \"#utility.yul\":8153:8162   */\n      div\n        /* \"#utility.yul\":8148:8162   */\n      swap1\n      pop\n        /* \"#utility.yul\":7983:8168   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8174:8365   */\n    tag_90:\n        /* \"#utility.yul\":8214:8217   */\n      0x00\n        /* \"#utility.yul\":8233:8253   */\n      tag_311\n        /* \"#utility.yul\":8251:8252   */\n      dup3\n        /* \"#utility.yul\":8233:8253   */\n      tag_185\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":8228:8253   */\n      swap2\n      pop\n        /* \"#utility.yul\":8267:8287   */\n      tag_312\n        /* \"#utility.yul\":8285:8286   */\n      dup4\n        /* \"#utility.yul\":8267:8287   */\n      tag_185\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":8262:8287   */\n      swap3\n      pop\n        /* \"#utility.yul\":8310:8311   */\n      dup3\n        /* \"#utility.yul\":8307:8308   */\n      dup3\n        /* \"#utility.yul\":8303:8312   */\n      add\n        /* \"#utility.yul\":8296:8312   */\n      swap1\n      pop\n        /* \"#utility.yul\":8331:8334   */\n      dup1\n        /* \"#utility.yul\":8328:8329   */\n      dup3\n        /* \"#utility.yul\":8325:8335   */\n      gt\n        /* \"#utility.yul\":8322:8358   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":8338:8356   */\n      tag_314\n      tag_209\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":8322:8358   */\n    tag_313:\n        /* \"#utility.yul\":8174:8365   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8371:8551   */\n    tag_99:\n        /* \"#utility.yul\":8419:8496   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8416:8417   */\n      0x00\n        /* \"#utility.yul\":8409:8497   */\n      mstore\n        /* \"#utility.yul\":8516:8520   */\n      0x32\n        /* \"#utility.yul\":8513:8514   */\n      0x04\n        /* \"#utility.yul\":8506:8521   */\n      mstore\n        /* \"#utility.yul\":8540:8544   */\n      0x24\n        /* \"#utility.yul\":8537:8538   */\n      0x00\n        /* \"#utility.yul\":8530:8545   */\n      revert\n        /* \"#utility.yul\":8557:8751   */\n    tag_104:\n        /* \"#utility.yul\":8597:8601   */\n      0x00\n        /* \"#utility.yul\":8617:8637   */\n      tag_317\n        /* \"#utility.yul\":8635:8636   */\n      dup3\n        /* \"#utility.yul\":8617:8637   */\n      tag_185\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":8612:8637   */\n      swap2\n      pop\n        /* \"#utility.yul\":8651:8671   */\n      tag_318\n        /* \"#utility.yul\":8669:8670   */\n      dup4\n        /* \"#utility.yul\":8651:8671   */\n      tag_185\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":8646:8671   */\n      swap3\n      pop\n        /* \"#utility.yul\":8695:8696   */\n      dup3\n        /* \"#utility.yul\":8692:8693   */\n      dup3\n        /* \"#utility.yul\":8688:8697   */\n      sub\n        /* \"#utility.yul\":8680:8697   */\n      swap1\n      pop\n        /* \"#utility.yul\":8719:8720   */\n      dup2\n        /* \"#utility.yul\":8713:8717   */\n      dup2\n        /* \"#utility.yul\":8710:8721   */\n      gt\n        /* \"#utility.yul\":8707:8744   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":8724:8742   */\n      tag_320\n      tag_209\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":8707:8744   */\n    tag_319:\n        /* \"#utility.yul\":8557:8751   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8757:8935   */\n    tag_211:\n        /* \"#utility.yul\":8897:8927   */\n      0x4e6f20746f6b656e7320617661696c61626c6520746f20636c61696d00000000\n        /* \"#utility.yul\":8893:8894   */\n      0x00\n        /* \"#utility.yul\":8885:8891   */\n      dup3\n        /* \"#utility.yul\":8881:8895   */\n      add\n        /* \"#utility.yul\":8874:8928   */\n      mstore\n        /* \"#utility.yul\":8757:8935   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8941:9307   */\n    tag_212:\n        /* \"#utility.yul\":9083:9086   */\n      0x00\n        /* \"#utility.yul\":9104:9171   */\n      tag_323\n        /* \"#utility.yul\":9168:9170   */\n      0x1c\n        /* \"#utility.yul\":9163:9166   */\n      dup4\n        /* \"#utility.yul\":9104:9171   */\n      tag_204\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":9097:9171   */\n      swap2\n      pop\n        /* \"#utility.yul\":9180:9273   */\n      tag_324\n        /* \"#utility.yul\":9269:9272   */\n      dup3\n        /* \"#utility.yul\":9180:9273   */\n      tag_211\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":9298:9300   */\n      0x20\n        /* \"#utility.yul\":9293:9296   */\n      dup3\n        /* \"#utility.yul\":9289:9301   */\n      add\n        /* \"#utility.yul\":9282:9301   */\n      swap1\n      pop\n        /* \"#utility.yul\":8941:9307   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9313:9732   */\n    tag_119:\n        /* \"#utility.yul\":9479:9483   */\n      0x00\n        /* \"#utility.yul\":9517:9519   */\n      0x20\n        /* \"#utility.yul\":9506:9515   */\n      dup3\n        /* \"#utility.yul\":9502:9520   */\n      add\n        /* \"#utility.yul\":9494:9520   */\n      swap1\n      pop\n        /* \"#utility.yul\":9566:9575   */\n      dup2\n        /* \"#utility.yul\":9560:9564   */\n      dup2\n        /* \"#utility.yul\":9556:9576   */\n      sub\n        /* \"#utility.yul\":9552:9553   */\n      0x00\n        /* \"#utility.yul\":9541:9550   */\n      dup4\n        /* \"#utility.yul\":9537:9554   */\n      add\n        /* \"#utility.yul\":9530:9577   */\n      mstore\n        /* \"#utility.yul\":9594:9725   */\n      tag_326\n        /* \"#utility.yul\":9720:9724   */\n      dup2\n        /* \"#utility.yul\":9594:9725   */\n      tag_212\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":9586:9725   */\n      swap1\n      pop\n        /* \"#utility.yul\":9313:9732   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9738:9958   */\n    tag_213:\n        /* \"#utility.yul\":9878:9912   */\n      0x4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f\n        /* \"#utility.yul\":9874:9875   */\n      0x00\n        /* \"#utility.yul\":9866:9872   */\n      dup3\n        /* \"#utility.yul\":9862:9876   */\n      add\n        /* \"#utility.yul\":9855:9913   */\n      mstore\n        /* \"#utility.yul\":9947:9950   */\n      0x6e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9942:9944   */\n      0x20\n        /* \"#utility.yul\":9934:9940   */\n      dup3\n        /* \"#utility.yul\":9930:9945   */\n      add\n        /* \"#utility.yul\":9923:9951   */\n      mstore\n        /* \"#utility.yul\":9738:9958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9964:10330   */\n    tag_214:\n        /* \"#utility.yul\":10106:10109   */\n      0x00\n        /* \"#utility.yul\":10127:10194   */\n      tag_329\n        /* \"#utility.yul\":10191:10193   */\n      0x21\n        /* \"#utility.yul\":10186:10189   */\n      dup4\n        /* \"#utility.yul\":10127:10194   */\n      tag_204\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":10120:10194   */\n      swap2\n      pop\n        /* \"#utility.yul\":10203:10296   */\n      tag_330\n        /* \"#utility.yul\":10292:10295   */\n      dup3\n        /* \"#utility.yul\":10203:10296   */\n      tag_213\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":10321:10323   */\n      0x40\n        /* \"#utility.yul\":10316:10319   */\n      dup3\n        /* \"#utility.yul\":10312:10324   */\n      add\n        /* \"#utility.yul\":10305:10324   */\n      swap1\n      pop\n        /* \"#utility.yul\":9964:10330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10336:10755   */\n    tag_126:\n        /* \"#utility.yul\":10502:10506   */\n      0x00\n        /* \"#utility.yul\":10540:10542   */\n      0x20\n        /* \"#utility.yul\":10529:10538   */\n      dup3\n        /* \"#utility.yul\":10525:10543   */\n      add\n        /* \"#utility.yul\":10517:10543   */\n      swap1\n      pop\n        /* \"#utility.yul\":10589:10598   */\n      dup2\n        /* \"#utility.yul\":10583:10587   */\n      dup2\n        /* \"#utility.yul\":10579:10599   */\n      sub\n        /* \"#utility.yul\":10575:10576   */\n      0x00\n        /* \"#utility.yul\":10564:10573   */\n      dup4\n        /* \"#utility.yul\":10560:10577   */\n      add\n        /* \"#utility.yul\":10553:10600   */\n      mstore\n        /* \"#utility.yul\":10617:10748   */\n      tag_332\n        /* \"#utility.yul\":10743:10747   */\n      dup2\n        /* \"#utility.yul\":10617:10748   */\n      tag_214\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":10609:10748   */\n      swap1\n      pop\n        /* \"#utility.yul\":10336:10755   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10761:10926   */\n    tag_215:\n        /* \"#utility.yul\":10901:10918   */\n      0x4e6f207374616b657320666f756e640000000000000000000000000000000000\n        /* \"#utility.yul\":10897:10898   */\n      0x00\n        /* \"#utility.yul\":10889:10895   */\n      dup3\n        /* \"#utility.yul\":10885:10899   */\n      add\n        /* \"#utility.yul\":10878:10919   */\n      mstore\n        /* \"#utility.yul\":10761:10926   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10932:11298   */\n    tag_216:\n        /* \"#utility.yul\":11074:11077   */\n      0x00\n        /* \"#utility.yul\":11095:11162   */\n      tag_335\n        /* \"#utility.yul\":11159:11161   */\n      0x0f\n        /* \"#utility.yul\":11154:11157   */\n      dup4\n        /* \"#utility.yul\":11095:11162   */\n      tag_204\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":11088:11162   */\n      swap2\n      pop\n        /* \"#utility.yul\":11171:11264   */\n      tag_336\n        /* \"#utility.yul\":11260:11263   */\n      dup3\n        /* \"#utility.yul\":11171:11264   */\n      tag_215\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":11289:11291   */\n      0x20\n        /* \"#utility.yul\":11284:11287   */\n      dup3\n        /* \"#utility.yul\":11280:11292   */\n      add\n        /* \"#utility.yul\":11273:11292   */\n      swap1\n      pop\n        /* \"#utility.yul\":10932:11298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11304:11723   */\n    tag_133:\n        /* \"#utility.yul\":11470:11474   */\n      0x00\n        /* \"#utility.yul\":11508:11510   */\n      0x20\n        /* \"#utility.yul\":11497:11506   */\n      dup3\n        /* \"#utility.yul\":11493:11511   */\n      add\n        /* \"#utility.yul\":11485:11511   */\n      swap1\n      pop\n        /* \"#utility.yul\":11557:11566   */\n      dup2\n        /* \"#utility.yul\":11551:11555   */\n      dup2\n        /* \"#utility.yul\":11547:11567   */\n      sub\n        /* \"#utility.yul\":11543:11544   */\n      0x00\n        /* \"#utility.yul\":11532:11541   */\n      dup4\n        /* \"#utility.yul\":11528:11545   */\n      add\n        /* \"#utility.yul\":11521:11568   */\n      mstore\n        /* \"#utility.yul\":11585:11716   */\n      tag_338\n        /* \"#utility.yul\":11711:11715   */\n      dup2\n        /* \"#utility.yul\":11585:11716   */\n      tag_216\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":11577:11716   */\n      swap1\n      pop\n        /* \"#utility.yul\":11304:11723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11729:11903   */\n    tag_217:\n        /* \"#utility.yul\":11869:11895   */\n      0x4e6f206c6576656c20696e636f6d6520746f20636c61696d0000000000000000\n        /* \"#utility.yul\":11865:11866   */\n      0x00\n        /* \"#utility.yul\":11857:11863   */\n      dup3\n        /* \"#utility.yul\":11853:11867   */\n      add\n        /* \"#utility.yul\":11846:11896   */\n      mstore\n        /* \"#utility.yul\":11729:11903   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11909:12275   */\n    tag_218:\n        /* \"#utility.yul\":12051:12054   */\n      0x00\n        /* \"#utility.yul\":12072:12139   */\n      tag_341\n        /* \"#utility.yul\":12136:12138   */\n      0x18\n        /* \"#utility.yul\":12131:12134   */\n      dup4\n        /* \"#utility.yul\":12072:12139   */\n      tag_204\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":12065:12139   */\n      swap2\n      pop\n        /* \"#utility.yul\":12148:12241   */\n      tag_342\n        /* \"#utility.yul\":12237:12240   */\n      dup3\n        /* \"#utility.yul\":12148:12241   */\n      tag_217\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":12266:12268   */\n      0x20\n        /* \"#utility.yul\":12261:12264   */\n      dup3\n        /* \"#utility.yul\":12257:12269   */\n      add\n        /* \"#utility.yul\":12250:12269   */\n      swap1\n      pop\n        /* \"#utility.yul\":11909:12275   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12281:12700   */\n    tag_139:\n        /* \"#utility.yul\":12447:12451   */\n      0x00\n        /* \"#utility.yul\":12485:12487   */\n      0x20\n        /* \"#utility.yul\":12474:12483   */\n      dup3\n        /* \"#utility.yul\":12470:12488   */\n      add\n        /* \"#utility.yul\":12462:12488   */\n      swap1\n      pop\n        /* \"#utility.yul\":12534:12543   */\n      dup2\n        /* \"#utility.yul\":12528:12532   */\n      dup2\n        /* \"#utility.yul\":12524:12544   */\n      sub\n        /* \"#utility.yul\":12520:12521   */\n      0x00\n        /* \"#utility.yul\":12509:12518   */\n      dup4\n        /* \"#utility.yul\":12505:12522   */\n      add\n        /* \"#utility.yul\":12498:12545   */\n      mstore\n        /* \"#utility.yul\":12562:12693   */\n      tag_344\n        /* \"#utility.yul\":12688:12692   */\n      dup2\n        /* \"#utility.yul\":12562:12693   */\n      tag_218\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":12554:12693   */\n      swap1\n      pop\n        /* \"#utility.yul\":12281:12700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12706:12884   */\n    tag_219:\n        /* \"#utility.yul\":12846:12876   */\n      0x4e6f20726566657272616c2072657761726420617661696c61626c6500000000\n        /* \"#utility.yul\":12842:12843   */\n      0x00\n        /* \"#utility.yul\":12834:12840   */\n      dup3\n        /* \"#utility.yul\":12830:12844   */\n      add\n        /* \"#utility.yul\":12823:12877   */\n      mstore\n        /* \"#utility.yul\":12706:12884   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12890:13256   */\n    tag_220:\n        /* \"#utility.yul\":13032:13035   */\n      0x00\n        /* \"#utility.yul\":13053:13120   */\n      tag_347\n        /* \"#utility.yul\":13117:13119   */\n      0x1c\n        /* \"#utility.yul\":13112:13115   */\n      dup4\n        /* \"#utility.yul\":13053:13120   */\n      tag_204\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":13046:13120   */\n      swap2\n      pop\n        /* \"#utility.yul\":13129:13222   */\n      tag_348\n        /* \"#utility.yul\":13218:13221   */\n      dup3\n        /* \"#utility.yul\":13129:13222   */\n      tag_219\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":13247:13249   */\n      0x20\n        /* \"#utility.yul\":13242:13245   */\n      dup3\n        /* \"#utility.yul\":13238:13250   */\n      add\n        /* \"#utility.yul\":13231:13250   */\n      swap1\n      pop\n        /* \"#utility.yul\":12890:13256   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13262:13681   */\n    tag_148:\n        /* \"#utility.yul\":13428:13432   */\n      0x00\n        /* \"#utility.yul\":13466:13468   */\n      0x20\n        /* \"#utility.yul\":13455:13464   */\n      dup3\n        /* \"#utility.yul\":13451:13469   */\n      add\n        /* \"#utility.yul\":13443:13469   */\n      swap1\n      pop\n        /* \"#utility.yul\":13515:13524   */\n      dup2\n        /* \"#utility.yul\":13509:13513   */\n      dup2\n        /* \"#utility.yul\":13505:13525   */\n      sub\n        /* \"#utility.yul\":13501:13502   */\n      0x00\n        /* \"#utility.yul\":13490:13499   */\n      dup4\n        /* \"#utility.yul\":13486:13503   */\n      add\n        /* \"#utility.yul\":13479:13526   */\n      mstore\n        /* \"#utility.yul\":13543:13674   */\n      tag_350\n        /* \"#utility.yul\":13669:13673   */\n      dup2\n        /* \"#utility.yul\":13543:13674   */\n      tag_220\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":13535:13674   */\n      swap1\n      pop\n        /* \"#utility.yul\":13262:13681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13687:14129   */\n    tag_156:\n        /* \"#utility.yul\":13836:13840   */\n      0x00\n        /* \"#utility.yul\":13874:13876   */\n      0x60\n        /* \"#utility.yul\":13863:13872   */\n      dup3\n        /* \"#utility.yul\":13859:13877   */\n      add\n        /* \"#utility.yul\":13851:13877   */\n      swap1\n      pop\n        /* \"#utility.yul\":13887:13958   */\n      tag_352\n        /* \"#utility.yul\":13955:13956   */\n      0x00\n        /* \"#utility.yul\":13944:13953   */\n      dup4\n        /* \"#utility.yul\":13940:13957   */\n      add\n        /* \"#utility.yul\":13931:13937   */\n      dup7\n        /* \"#utility.yul\":13887:13958   */\n      tag_203\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":13968:14040   */\n      tag_353\n        /* \"#utility.yul\":14036:14038   */\n      0x20\n        /* \"#utility.yul\":14025:14034   */\n      dup4\n        /* \"#utility.yul\":14021:14039   */\n      add\n        /* \"#utility.yul\":14012:14018   */\n      dup6\n        /* \"#utility.yul\":13968:14040   */\n      tag_203\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":14050:14122   */\n      tag_354\n        /* \"#utility.yul\":14118:14120   */\n      0x40\n        /* \"#utility.yul\":14107:14116   */\n      dup4\n        /* \"#utility.yul\":14103:14121   */\n      add\n        /* \"#utility.yul\":14094:14100   */\n      dup5\n        /* \"#utility.yul\":14050:14122   */\n      tag_186\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":13687:14129   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14135:14467   */\n    tag_178:\n        /* \"#utility.yul\":14256:14260   */\n      0x00\n        /* \"#utility.yul\":14294:14296   */\n      0x40\n        /* \"#utility.yul\":14283:14292   */\n      dup3\n        /* \"#utility.yul\":14279:14297   */\n      add\n        /* \"#utility.yul\":14271:14297   */\n      swap1\n      pop\n        /* \"#utility.yul\":14307:14378   */\n      tag_356\n        /* \"#utility.yul\":14375:14376   */\n      0x00\n        /* \"#utility.yul\":14364:14373   */\n      dup4\n        /* \"#utility.yul\":14360:14377   */\n      add\n        /* \"#utility.yul\":14351:14357   */\n      dup6\n        /* \"#utility.yul\":14307:14378   */\n      tag_203\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":14388:14460   */\n      tag_357\n        /* \"#utility.yul\":14456:14458   */\n      0x20\n        /* \"#utility.yul\":14445:14454   */\n      dup4\n        /* \"#utility.yul\":14441:14459   */\n      add\n        /* \"#utility.yul\":14432:14438   */\n      dup5\n        /* \"#utility.yul\":14388:14460   */\n      tag_186\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":14135:14467   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204b412252bdf208e52d79d66c28d09ac283da7130a0753fd725ebdd08ef642bed64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_742": {
									"entryPoint": null,
									"id": 742,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:7",
										"nodeType": "YulBlock",
										"src": "0:1199:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "922:274:7",
													"nodeType": "YulBlock",
													"src": "922:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:7",
																"nodeType": "YulBlock",
																"src": "968:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:7"
																			},
																			"nativeSrc": "970:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:7"
																		},
																		"nativeSrc": "970:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nativeSrc": "939:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:7",
																		"nodeType": "YulLiteral",
																		"src": "964:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nativeSrc": "935:32:7",
																"nodeType": "YulFunctionCall",
																"src": "935:32:7"
															},
															"nativeSrc": "932:119:7",
															"nodeType": "YulIf",
															"src": "932:119:7"
														},
														{
															"nativeSrc": "1061:128:7",
															"nodeType": "YulBlock",
															"src": "1061:128:7",
															"statements": [
																{
																	"nativeSrc": "1076:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:7"
																				},
																				"nativeSrc": "1147:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:7"
																		},
																		"nativeSrc": "1115:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:7",
														"nodeType": "YulTypedName",
														"src": "892:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:7",
														"nodeType": "YulTypedName",
														"src": "903:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:7",
														"nodeType": "YulTypedName",
														"src": "915:6:7",
														"type": ""
													}
												],
												"src": "845:351:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516119b53803806119b583398181016040528101906100319190610114565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013f565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100e3826100ba565b9050919050565b6100f3816100d9565b81146100fd575f80fd5b50565b5f8151905061010e816100ea565b92915050565b5f60208284031215610129576101286100b6565b5b5f61013684828501610100565b91505092915050565b6118698061014c5f395ff3fe608060405234801561000f575f80fd5b50600436106100f3575f3560e01c806360f43fd2116100955780639b4b2c9c116100645780639b4b2c9c14610227578063aa03875e14610231578063e1ba51fb1461024f578063f851a44014610283576100f3565b806360f43fd2146101c35780637e2bc224146101cd5780638af6c259146101eb5780639b2cb5d814610209576100f3565b80635312ea8e116100d15780635312ea8e1461013b57806353aaa63b146101575780635e9d2f90146101875780635f48f393146101a5576100f3565b806313d033c0146100f757806317be3fa51461011557806348c54b9d14610131575b5f80fd5b6100ff6102a1565b60405161010c9190611115565b60405180910390f35b61012f600480360381019061012a91906111b6565b6102a8565b005b610139610606565b005b610155600480360381019061015091906111f4565b610877565b005b610171600480360381019061016c919061121f565b6109e3565b60405161017e9190611115565b60405180910390f35b61018f6109f8565b60405161019c9190611265565b60405180910390f35b6101ad6109fd565b6040516101ba9190611115565b60405180910390f35b6101cb610a03565b005b6101d5610bb4565b6040516101e29190611115565b60405180910390f35b6101f3610bb9565b6040516102009190611115565b60405180910390f35b610211610bc1565b60405161021e9190611115565b60405180910390f35b61022f610bc6565b005b610239610d26565b60405161024691906112d9565b60405180910390f35b610269600480360381019061026491906111b6565b610d49565b60405161027a959493929190611301565b60405180910390f35b61028b610db4565b6040516102989190611352565b60405180910390f35b624f1a0081565b606481101580156102bb57506127108111155b6102fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f1906113c5565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035f9061142d565b60405180910390fd5b6103b43330835f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610dd9909392919063ffffffff16565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146104a6575f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f818054905011156104a4575f60646005846104439190611478565b61044d91906114e6565b90508060035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461049b9190611516565b92505081905550505b505b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060a001604052808381526020014281526020015f81526020015f81526020018473ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050503373ffffffffffffffffffffffffffffffffffffffff167ff9626bca62c59d77fa45a204dc096874ee066a5c5e124aa9ce6c438dbdf7387a826040516105fa9190611115565b60405180910390a25050565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f805f90505b8280549050811015610798575f83828154811061066c5761066b611549565b5b905f5260205f2090600502019050624f1a00816001015461068d9190611516565b42101561069a575061078b565b5f8160010154426106ab9190611576565b90506301e133808111156106c1576301e1338090505b5f624f1a00826106d19190611576565b90505f62278d00826106e391906114e6565b90505f606482600a875f01546106f99190611478565b6107039190611478565b61070d91906114e6565b90508460020154811115610785575f85600201548261072c9190611576565b905080866002015f8282546107419190611516565b9250508190555080886107549190611516565b9750610783866004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682610e5b565b505b50505050505b808060010191505061064c565b505f81116107db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d2906115f3565b60405180910390fd5b61082533825f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fe39092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e4308260405161086b9190611115565b60405180910390a25050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd90611681565b60405180910390fd5b61097160015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16825f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fe39092919063ffffffff16565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695826040516109d89190611115565b60405180910390a250565b6003602052805f5260405f205f915090505481565b600381565b61271081565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f818054905011610a89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a80906116e9565b60405180910390fd5b5f815f81548110610a9d57610a9c611549565b5b905f5260205f2090600502016003015490505f8111610af1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae890611751565b60405180910390fd5b5f825f81548110610b0557610b04611549565b5b905f5260205f20906005020160030181905550610b6233825f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fe39092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f8830fd27a530b5f90e62adf0b2d34e36b25aa4f956359df6db4bcdec067f75b182604051610ba89190611115565b60405180910390a25050565b600581565b6301e1338081565b606481565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610c49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c40906117b9565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610cd533825f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fe39092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f5be4d22009fea85381595ed91090bc5c0bc92a93fe07ed7472c5888eb1993f8382604051610d1b9190611115565b60405180910390a250565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052815f5260405f208181548110610d62575f80fd5b905f5260205f2090600502015f9150915050805f015490806001015490806002015490806003015490806004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e55848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610e0e939291906117d7565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611062565b50505050565b5f6040518060600160405280600f60ff168152602001600a60ff168152602001600560ff1681525090505f8390505f5b600360ff16811015610fdc575f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160315610fdc575f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f818054905003610f1c5750610fdc565b5f6064858460038110610f3257610f31611549565b5b602002015160ff1687610f459190611478565b610f4f91906114e6565b905080825f81548110610f6557610f64611549565b5b905f5260205f2090600502016003015f828254610f829190611516565b92505081905550815f81548110610f9c57610f9b611549565b5b905f5260205f2090600502016004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16935050508080600101915050610e8b565b5050505050565b61105d838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161101692919061180c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611062565b505050565b5f8060205f8451602086015f885af180611081576040513d5f823e3d81fd5b3d92505f519150505f821461109a5760018114156110b5565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156110f757836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016110ee9190611352565b60405180910390fd5b50505050565b5f819050919050565b61110f816110fd565b82525050565b5f6020820190506111285f830184611106565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61115b82611132565b9050919050565b61116b81611151565b8114611175575f80fd5b50565b5f8135905061118681611162565b92915050565b611195816110fd565b811461119f575f80fd5b50565b5f813590506111b08161118c565b92915050565b5f80604083850312156111cc576111cb61112e565b5b5f6111d985828601611178565b92505060206111ea858286016111a2565b9150509250929050565b5f602082840312156112095761120861112e565b5b5f611216848285016111a2565b91505092915050565b5f602082840312156112345761123361112e565b5b5f61124184828501611178565b91505092915050565b5f60ff82169050919050565b61125f8161124a565b82525050565b5f6020820190506112785f830184611256565b92915050565b5f819050919050565b5f6112a161129c61129784611132565b61127e565b611132565b9050919050565b5f6112b282611287565b9050919050565b5f6112c3826112a8565b9050919050565b6112d3816112b9565b82525050565b5f6020820190506112ec5f8301846112ca565b92915050565b6112fb81611151565b82525050565b5f60a0820190506113145f830188611106565b6113216020830187611106565b61132e6040830186611106565b61133b6060830185611106565b61134860808301846112f2565b9695505050505050565b5f6020820190506113655f8301846112f2565b92915050565b5f82825260208201905092915050565b7f5374616b6520616d6f756e74206f7574206f662072616e6765000000000000005f82015250565b5f6113af60198361136b565b91506113ba8261137b565b602082019050919050565b5f6020820190508181035f8301526113dc816113a3565b9050919050565b7f53656c6620726566657272616c206e6f7420616c6c6f776564000000000000005f82015250565b5f61141760198361136b565b9150611422826113e3565b602082019050919050565b5f6020820190508181035f8301526114448161140b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611482826110fd565b915061148d836110fd565b925082820261149b816110fd565b915082820484148315176114b2576114b161144b565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6114f0826110fd565b91506114fb836110fd565b92508261150b5761150a6114b9565b5b828204905092915050565b5f611520826110fd565b915061152b836110fd565b92508282019050808211156115435761154261144b565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611580826110fd565b915061158b836110fd565b92508282039050818111156115a3576115a261144b565b5b92915050565b7f4e6f20746f6b656e7320617661696c61626c6520746f20636c61696d000000005f82015250565b5f6115dd601c8361136b565b91506115e8826115a9565b602082019050919050565b5f6020820190508181035f83015261160a816115d1565b9050919050565b7f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f61166b60218361136b565b915061167682611611565b604082019050919050565b5f6020820190508181035f8301526116988161165f565b9050919050565b7f4e6f207374616b657320666f756e6400000000000000000000000000000000005f82015250565b5f6116d3600f8361136b565b91506116de8261169f565b602082019050919050565b5f6020820190508181035f830152611700816116c7565b9050919050565b7f4e6f206c6576656c20696e636f6d6520746f20636c61696d00000000000000005f82015250565b5f61173b60188361136b565b915061174682611707565b602082019050919050565b5f6020820190508181035f8301526117688161172f565b9050919050565b7f4e6f20726566657272616c2072657761726420617661696c61626c65000000005f82015250565b5f6117a3601c8361136b565b91506117ae8261176f565b602082019050919050565b5f6020820190508181035f8301526117d081611797565b9050919050565b5f6060820190506117ea5f8301866112f2565b6117f760208301856112f2565b6118046040830184611106565b949350505050565b5f60408201905061181f5f8301856112f2565b61182c6020830184611106565b939250505056fea26469706673582212204b412252bdf208e52d79d66c28d09ac283da7130a0753fd725ebdd08ef642bed64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x19B5 CODESIZE SUB DUP1 PUSH2 0x19B5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x13F JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE3 DUP3 PUSH2 0xBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF3 DUP2 PUSH2 0xD9 JUMP JUMPDEST DUP2 EQ PUSH2 0xFD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x10E DUP2 PUSH2 0xEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129 JUMPI PUSH2 0x128 PUSH2 0xB6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x136 DUP5 DUP3 DUP6 ADD PUSH2 0x100 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1869 DUP1 PUSH2 0x14C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60F43FD2 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x9B4B2C9C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9B4B2C9C EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xAA03875E EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xE1BA51FB EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x283 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x60F43FD2 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x7E2BC224 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x8AF6C259 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x9B2CB5D8 EQ PUSH2 0x209 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x5312EA8E GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x53AAA63B EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x5E9D2F90 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x5F48F393 EQ PUSH2 0x1A5 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x13D033C0 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x17BE3FA5 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x48C54B9D EQ PUSH2 0x131 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH2 0x606 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0x877 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH2 0xA03 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH2 0xBC6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH2 0xD26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x4F1A00 DUP2 JUMP JUMPDEST PUSH1 0x64 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x2BB JUMPI POP PUSH2 0x2710 DUP2 GT ISZERO JUMPDEST PUSH2 0x2FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F1 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x368 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3B4 CALLER ADDRESS DUP4 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDD9 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A6 JUMPI PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 DUP1 SLOAD SWAP1 POP GT ISZERO PUSH2 0x4A4 JUMPI PUSH0 PUSH1 0x64 PUSH1 0x5 DUP5 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x14E6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF9626BCA62C59D77FA45A204DC096874EE066A5C5E124AA9CE6C438DBDF7387A DUP3 PUSH1 0x40 MLOAD PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST DUP3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x798 JUMPI PUSH0 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x66C JUMPI PUSH2 0x66B PUSH2 0x1549 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH3 0x4F1A00 DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0x68D SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x69A JUMPI POP PUSH2 0x78B JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST SWAP1 POP PUSH4 0x1E13380 DUP2 GT ISZERO PUSH2 0x6C1 JUMPI PUSH4 0x1E13380 SWAP1 POP JUMPDEST PUSH0 PUSH3 0x4F1A00 DUP3 PUSH2 0x6D1 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH3 0x278D00 DUP3 PUSH2 0x6E3 SWAP2 SWAP1 PUSH2 0x14E6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 DUP3 PUSH1 0xA DUP8 PUSH0 ADD SLOAD PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x703 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x14E6 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x2 ADD SLOAD DUP2 GT ISZERO PUSH2 0x785 JUMPI PUSH0 DUP6 PUSH1 0x2 ADD SLOAD DUP3 PUSH2 0x72C SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP9 PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST SWAP8 POP PUSH2 0x783 DUP7 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0xE5B JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x64C JUMP JUMPDEST POP PUSH0 DUP2 GT PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x825 CALLER DUP3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFE3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 DUP3 PUSH1 0x40 MLOAD PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x906 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x1681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x971 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFE3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 DUP3 PUSH1 0x40 MLOAD PUSH2 0x9D8 SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 DUP1 SLOAD SWAP1 POP GT PUSH2 0xA89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA80 SWAP1 PUSH2 0x16E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH0 DUP2 SLOAD DUP2 LT PUSH2 0xA9D JUMPI PUSH2 0xA9C PUSH2 0x1549 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xAF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE8 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH0 DUP2 SLOAD DUP2 LT PUSH2 0xB05 JUMPI PUSH2 0xB04 PUSH2 0x1549 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xB62 CALLER DUP3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFE3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8830FD27A530B5F90E62ADF0B2D34E36B25AA4F956359DF6DB4BCDEC067F75B1 DUP3 PUSH1 0x40 MLOAD PUSH2 0xBA8 SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xC49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC40 SWAP1 PUSH2 0x17B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCD5 CALLER DUP3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFE3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5BE4D22009FEA85381595ED91090BC5C0BC92A93FE07ED7472C5888EB1993F83 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD1B SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD62 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE55 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE0E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1062 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 DUP4 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0xFDC JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB ISZERO PUSH2 0xFDC JUMPI PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 DUP1 SLOAD SWAP1 POP SUB PUSH2 0xF1C JUMPI POP PUSH2 0xFDC JUMP JUMPDEST PUSH0 PUSH1 0x64 DUP6 DUP5 PUSH1 0x3 DUP2 LT PUSH2 0xF32 JUMPI PUSH2 0xF31 PUSH2 0x1549 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0xFF AND DUP8 PUSH2 0xF45 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0xF4F SWAP2 SWAP1 PUSH2 0x14E6 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH0 DUP2 SLOAD DUP2 LT PUSH2 0xF65 JUMPI PUSH2 0xF64 PUSH2 0x1549 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF82 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP2 SLOAD DUP2 LT PUSH2 0xF9C JUMPI PUSH2 0xF9B PUSH2 0x1549 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE8B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x105D DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1016 SWAP3 SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1062 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1081 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x109A JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x10B5 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x10F7 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EE SWAP2 SWAP1 PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x110F DUP2 PUSH2 0x10FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1128 PUSH0 DUP4 ADD DUP5 PUSH2 0x1106 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x115B DUP3 PUSH2 0x1132 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x116B DUP2 PUSH2 0x1151 JUMP JUMPDEST DUP2 EQ PUSH2 0x1175 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1186 DUP2 PUSH2 0x1162 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1195 DUP2 PUSH2 0x10FD JUMP JUMPDEST DUP2 EQ PUSH2 0x119F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11B0 DUP2 PUSH2 0x118C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11CC JUMPI PUSH2 0x11CB PUSH2 0x112E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11D9 DUP6 DUP3 DUP7 ADD PUSH2 0x1178 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11EA DUP6 DUP3 DUP7 ADD PUSH2 0x11A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1209 JUMPI PUSH2 0x1208 PUSH2 0x112E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1216 DUP5 DUP3 DUP6 ADD PUSH2 0x11A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1234 JUMPI PUSH2 0x1233 PUSH2 0x112E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1241 DUP5 DUP3 DUP6 ADD PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x125F DUP2 PUSH2 0x124A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1278 PUSH0 DUP4 ADD DUP5 PUSH2 0x1256 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12A1 PUSH2 0x129C PUSH2 0x1297 DUP5 PUSH2 0x1132 JUMP JUMPDEST PUSH2 0x127E JUMP JUMPDEST PUSH2 0x1132 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12B2 DUP3 PUSH2 0x1287 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12C3 DUP3 PUSH2 0x12A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D3 DUP2 PUSH2 0x12B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12EC PUSH0 DUP4 ADD DUP5 PUSH2 0x12CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12FB DUP2 PUSH2 0x1151 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1314 PUSH0 DUP4 ADD DUP9 PUSH2 0x1106 JUMP JUMPDEST PUSH2 0x1321 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1106 JUMP JUMPDEST PUSH2 0x132E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1106 JUMP JUMPDEST PUSH2 0x133B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1106 JUMP JUMPDEST PUSH2 0x1348 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x12F2 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1365 PUSH0 DUP4 ADD DUP5 PUSH2 0x12F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B6520616D6F756E74206F7574206F662072616E676500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13AF PUSH1 0x19 DUP4 PUSH2 0x136B JUMP JUMPDEST SWAP2 POP PUSH2 0x13BA DUP3 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13DC DUP2 PUSH2 0x13A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656C6620726566657272616C206E6F7420616C6C6F77656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1417 PUSH1 0x19 DUP4 PUSH2 0x136B JUMP JUMPDEST SWAP2 POP PUSH2 0x1422 DUP3 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1444 DUP2 PUSH2 0x140B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1482 DUP3 PUSH2 0x10FD JUMP JUMPDEST SWAP2 POP PUSH2 0x148D DUP4 PUSH2 0x10FD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x149B DUP2 PUSH2 0x10FD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x14B2 JUMPI PUSH2 0x14B1 PUSH2 0x144B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x14F0 DUP3 PUSH2 0x10FD JUMP JUMPDEST SWAP2 POP PUSH2 0x14FB DUP4 PUSH2 0x10FD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x150B JUMPI PUSH2 0x150A PUSH2 0x14B9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1520 DUP3 PUSH2 0x10FD JUMP JUMPDEST SWAP2 POP PUSH2 0x152B DUP4 PUSH2 0x10FD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1543 JUMPI PUSH2 0x1542 PUSH2 0x144B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1580 DUP3 PUSH2 0x10FD JUMP JUMPDEST SWAP2 POP PUSH2 0x158B DUP4 PUSH2 0x10FD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x15A3 JUMPI PUSH2 0x15A2 PUSH2 0x144B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320617661696C61626C6520746F20636C61696D00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15DD PUSH1 0x1C DUP4 PUSH2 0x136B JUMP JUMPDEST SWAP2 POP PUSH2 0x15E8 DUP3 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x160A DUP2 PUSH2 0x15D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x166B PUSH1 0x21 DUP4 PUSH2 0x136B JUMP JUMPDEST SWAP2 POP PUSH2 0x1676 DUP3 PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1698 DUP2 PUSH2 0x165F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207374616B657320666F756E640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16D3 PUSH1 0xF DUP4 PUSH2 0x136B JUMP JUMPDEST SWAP2 POP PUSH2 0x16DE DUP3 PUSH2 0x169F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1700 DUP2 PUSH2 0x16C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206C6576656C20696E636F6D6520746F20636C61696D0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x173B PUSH1 0x18 DUP4 PUSH2 0x136B JUMP JUMPDEST SWAP2 POP PUSH2 0x1746 DUP3 PUSH2 0x1707 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1768 DUP2 PUSH2 0x172F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20726566657272616C2072657761726420617661696C61626C6500000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17A3 PUSH1 0x1C DUP4 PUSH2 0x136B JUMP JUMPDEST SWAP2 POP PUSH2 0x17AE DUP3 PUSH2 0x176F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17D0 DUP2 PUSH2 0x1797 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17EA PUSH0 DUP4 ADD DUP7 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x17F7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x1804 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1106 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x181F PUSH0 DUP4 ADD DUP6 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x182C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1106 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B COINBASE 0x22 MSTORE 0xBD CALLCODE ADDMOD 0xE5 0x2D PUSH26 0xD66C28D09AC283DA7130A0753FD725EBDD08EF642BED64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "199:4864:6:-:0;;;1227:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1279:5;1265:4;;:20;;;;;;;;;;;;;;;;;;1304:10;1296:5;;:18;;;;;;;;;;;;;;;;;;1227:95;199:4864;;88:117:7;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;199:4864:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ReferralPercentage_671": {
									"entryPoint": 2996,
									"id": 671,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_589": {
									"entryPoint": 4194,
									"id": 589,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@admin_656": {
									"entryPoint": 3508,
									"id": 656,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allStakeDetails_721": {
									"entryPoint": 3401,
									"id": 721,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimLevelIncome_1187": {
									"entryPoint": 2563,
									"id": 1187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimReferralReward_1047": {
									"entryPoint": 3014,
									"id": 1047,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimTokens_1008": {
									"entryPoint": 1542,
									"id": 1008,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cliff_659": {
									"entryPoint": 673,
									"id": 659,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@distributeLevel_1130": {
									"entryPoint": 3675,
									"id": 1130,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@emergencyWithdraw_774": {
									"entryPoint": 2167,
									"id": 774,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@globalLevel_674": {
									"entryPoint": 2552,
									"id": 674,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lockToken_872": {
									"entryPoint": 680,
									"id": 872,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@maxAmount_665": {
									"entryPoint": 2557,
									"id": 665,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minAmount_668": {
									"entryPoint": 3009,
									"id": 668,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nlnt_654": {
									"entryPoint": 3366,
									"id": 654,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@referralRewards_725": {
									"entryPoint": 2531,
									"id": 725,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_239": {
									"entryPoint": 3545,
									"id": 239,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_212": {
									"entryPoint": 4067,
									"id": 212,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@totalDuration_662": {
									"entryPoint": 3001,
									"id": 662,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack": {
									"entryPoint": 4810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_2b4b5d23e1fe0bfa770424b0047417e5abbe574a8967435cd555c8f5bf89ab2f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a6986e5133152c912c18bdc61623271eec2e7f5b8b1ea755693ac6218ff7efb7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_afc7218b32e114ec965464013d43e9fc4a998fd4f9b9fceb167763aa8c319785_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bd6e6be77339438fa1ce99e753eafbac0b165ee3cf81de39211cd1fa463c169e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d3c7d8a55d308962a49d643398c1a7f771d32ab6a1c86998cd19cc63622632cf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d994444ac13ecaeeccca9b7f3363f0d6c486526e60d1c7d157dfc6b1a19e01ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6103,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6156,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$167__to_t_address__fromStack_reversed": {
									"entryPoint": 4825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2b4b5d23e1fe0bfa770424b0047417e5abbe574a8967435cd555c8f5bf89ab2f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6986e5133152c912c18bdc61623271eec2e7f5b8b1ea755693ac6218ff7efb7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_afc7218b32e114ec965464013d43e9fc4a998fd4f9b9fceb167763aa8c319785__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bd6e6be77339438fa1ce99e753eafbac0b165ee3cf81de39211cd1fa463c169e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3c7d8a55d308962a49d643398c1a7f771d32ab6a1c86998cd19cc63622632cf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d994444ac13ecaeeccca9b7f3363f0d6c486526e60d1c7d157dfc6b1a19e01ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 4865,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$167_to_t_address": {
									"entryPoint": 4793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5195,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5305,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5449,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4398,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_2b4b5d23e1fe0bfa770424b0047417e5abbe574a8967435cd555c8f5bf89ab2f": {
									"entryPoint": 5091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a6986e5133152c912c18bdc61623271eec2e7f5b8b1ea755693ac6218ff7efb7": {
									"entryPoint": 5999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_afc7218b32e114ec965464013d43e9fc4a998fd4f9b9fceb167763aa8c319785": {
									"entryPoint": 5791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bd6e6be77339438fa1ce99e753eafbac0b165ee3cf81de39211cd1fa463c169e": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3c7d8a55d308962a49d643398c1a7f771d32ab6a1c86998cd19cc63622632cf": {
									"entryPoint": 5545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d994444ac13ecaeeccca9b7f3363f0d6c486526e60d1c7d157dfc6b1a19e01ad": {
									"entryPoint": 4987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b": {
									"entryPoint": 5649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14470:7",
										"nodeType": "YulBlock",
										"src": "0:14470:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:7",
													"nodeType": "YulBlock",
													"src": "52:32:7",
													"statements": [
														{
															"nativeSrc": "62:16:7",
															"nodeType": "YulAssignment",
															"src": "62:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:7",
																"nodeType": "YulIdentifier",
																"src": "73:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:7",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:7",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:77:7"
											},
											{
												"body": {
													"nativeSrc": "155:53:7",
													"nodeType": "YulBlock",
													"src": "155:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:7"
																		},
																		"nativeSrc": "177:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:7"
																},
																"nativeSrc": "165:37:7",
																"nodeType": "YulFunctionCall",
																"src": "165:37:7"
															},
															"nativeSrc": "165:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:7",
														"nodeType": "YulTypedName",
														"src": "143:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:7",
														"nodeType": "YulTypedName",
														"src": "150:3:7",
														"type": ""
													}
												],
												"src": "90:118:7"
											},
											{
												"body": {
													"nativeSrc": "312:124:7",
													"nodeType": "YulBlock",
													"src": "312:124:7",
													"statements": [
														{
															"nativeSrc": "322:26:7",
															"nodeType": "YulAssignment",
															"src": "322:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:7",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:7"
																},
																"nativeSrc": "330:18:7",
																"nodeType": "YulFunctionCall",
																"src": "330:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:7",
																				"nodeType": "YulLiteral",
																				"src": "426:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:7"
																		},
																		"nativeSrc": "411:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:7"
																},
																"nativeSrc": "358:71:7",
																"nodeType": "YulFunctionCall",
																"src": "358:71:7"
															},
															"nativeSrc": "358:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:7",
														"nodeType": "YulTypedName",
														"src": "284:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:7",
														"nodeType": "YulTypedName",
														"src": "296:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:7",
														"nodeType": "YulTypedName",
														"src": "307:4:7",
														"type": ""
													}
												],
												"src": "214:222:7"
											},
											{
												"body": {
													"nativeSrc": "482:35:7",
													"nodeType": "YulBlock",
													"src": "482:35:7",
													"statements": [
														{
															"nativeSrc": "492:19:7",
															"nodeType": "YulAssignment",
															"src": "492:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:7",
																		"nodeType": "YulLiteral",
																		"src": "508:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:7"
																},
																"nativeSrc": "502:9:7",
																"nodeType": "YulFunctionCall",
																"src": "502:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:7",
														"nodeType": "YulTypedName",
														"src": "475:6:7",
														"type": ""
													}
												],
												"src": "442:75:7"
											},
											{
												"body": {
													"nativeSrc": "612:28:7",
													"nodeType": "YulBlock",
													"src": "612:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:7",
																		"nodeType": "YulLiteral",
																		"src": "629:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:7",
																		"nodeType": "YulLiteral",
																		"src": "632:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:7"
																},
																"nativeSrc": "622:12:7",
																"nodeType": "YulFunctionCall",
																"src": "622:12:7"
															},
															"nativeSrc": "622:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:7"
											},
											{
												"body": {
													"nativeSrc": "735:28:7",
													"nodeType": "YulBlock",
													"src": "735:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:7",
																		"nodeType": "YulLiteral",
																		"src": "752:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:7",
																		"nodeType": "YulLiteral",
																		"src": "755:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:7"
																},
																"nativeSrc": "745:12:7",
																"nodeType": "YulFunctionCall",
																"src": "745:12:7"
															},
															"nativeSrc": "745:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:7"
											},
											{
												"body": {
													"nativeSrc": "814:81:7",
													"nodeType": "YulBlock",
													"src": "814:81:7",
													"statements": [
														{
															"nativeSrc": "824:65:7",
															"nodeType": "YulAssignment",
															"src": "824:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:7",
																		"nodeType": "YulLiteral",
																		"src": "846:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:7"
																},
																"nativeSrc": "835:54:7",
																"nodeType": "YulFunctionCall",
																"src": "835:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:7",
														"nodeType": "YulTypedName",
														"src": "796:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:7",
														"nodeType": "YulTypedName",
														"src": "806:7:7",
														"type": ""
													}
												],
												"src": "769:126:7"
											},
											{
												"body": {
													"nativeSrc": "946:51:7",
													"nodeType": "YulBlock",
													"src": "946:51:7",
													"statements": [
														{
															"nativeSrc": "956:35:7",
															"nodeType": "YulAssignment",
															"src": "956:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "985:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "967:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:7"
																},
																"nativeSrc": "967:24:7",
																"nodeType": "YulFunctionCall",
																"src": "967:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "956:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "901:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "928:5:7",
														"nodeType": "YulTypedName",
														"src": "928:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "938:7:7",
														"nodeType": "YulTypedName",
														"src": "938:7:7",
														"type": ""
													}
												],
												"src": "901:96:7"
											},
											{
												"body": {
													"nativeSrc": "1046:79:7",
													"nodeType": "YulBlock",
													"src": "1046:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:7",
																"nodeType": "YulBlock",
																"src": "1103:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:7"
																			},
																			"nativeSrc": "1105:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:7"
																		},
																		"nativeSrc": "1105:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1076:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:7"
																				},
																				"nativeSrc": "1076:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:7"
																		},
																		"nativeSrc": "1066:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:7"
																},
																"nativeSrc": "1059:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:7"
															},
															"nativeSrc": "1056:63:7",
															"nodeType": "YulIf",
															"src": "1056:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1003:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:7",
														"nodeType": "YulTypedName",
														"src": "1039:5:7",
														"type": ""
													}
												],
												"src": "1003:122:7"
											},
											{
												"body": {
													"nativeSrc": "1183:87:7",
													"nodeType": "YulBlock",
													"src": "1183:87:7",
													"statements": [
														{
															"nativeSrc": "1193:29:7",
															"nodeType": "YulAssignment",
															"src": "1193:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:7"
																},
																"nativeSrc": "1202:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1231:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:7"
																},
																"nativeSrc": "1231:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:7"
															},
															"nativeSrc": "1231:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1131:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:7",
														"nodeType": "YulTypedName",
														"src": "1161:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:7",
														"nodeType": "YulTypedName",
														"src": "1169:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:7",
														"nodeType": "YulTypedName",
														"src": "1177:5:7",
														"type": ""
													}
												],
												"src": "1131:139:7"
											},
											{
												"body": {
													"nativeSrc": "1319:79:7",
													"nodeType": "YulBlock",
													"src": "1319:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1376:16:7",
																"nodeType": "YulBlock",
																"src": "1376:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1385:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1388:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1378:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:7"
																			},
																			"nativeSrc": "1378:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:7"
																		},
																		"nativeSrc": "1378:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1342:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1342:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1367:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1367:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1349:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1349:17:7"
																				},
																				"nativeSrc": "1349:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1349:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1339:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1339:2:7"
																		},
																		"nativeSrc": "1339:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1339:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1332:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:7"
																},
																"nativeSrc": "1332:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1332:43:7"
															},
															"nativeSrc": "1329:63:7",
															"nodeType": "YulIf",
															"src": "1329:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1276:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:7",
														"nodeType": "YulTypedName",
														"src": "1312:5:7",
														"type": ""
													}
												],
												"src": "1276:122:7"
											},
											{
												"body": {
													"nativeSrc": "1456:87:7",
													"nodeType": "YulBlock",
													"src": "1456:87:7",
													"statements": [
														{
															"nativeSrc": "1466:29:7",
															"nodeType": "YulAssignment",
															"src": "1466:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1488:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1475:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1475:12:7"
																},
																"nativeSrc": "1475:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1475:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1466:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1531:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1531:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1504:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1504:26:7"
																},
																"nativeSrc": "1504:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1504:33:7"
															},
															"nativeSrc": "1504:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1504:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1404:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1434:6:7",
														"nodeType": "YulTypedName",
														"src": "1434:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1442:3:7",
														"nodeType": "YulTypedName",
														"src": "1442:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1450:5:7",
														"nodeType": "YulTypedName",
														"src": "1450:5:7",
														"type": ""
													}
												],
												"src": "1404:139:7"
											},
											{
												"body": {
													"nativeSrc": "1632:391:7",
													"nodeType": "YulBlock",
													"src": "1632:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1678:83:7",
																"nodeType": "YulBlock",
																"src": "1678:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1680:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1680:77:7"
																			},
																			"nativeSrc": "1680:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1680:79:7"
																		},
																		"nativeSrc": "1680:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1680:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1653:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1653:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1662:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1662:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1649:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1649:3:7"
																		},
																		"nativeSrc": "1649:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1649:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1674:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1674:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1645:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1645:3:7"
																},
																"nativeSrc": "1645:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1645:32:7"
															},
															"nativeSrc": "1642:119:7",
															"nodeType": "YulIf",
															"src": "1642:119:7"
														},
														{
															"nativeSrc": "1771:117:7",
															"nodeType": "YulBlock",
															"src": "1771:117:7",
															"statements": [
																{
																	"nativeSrc": "1786:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1786:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1800:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1790:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1790:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1815:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1815:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1850:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1850:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1861:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1861:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1846:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1846:3:7"
																				},
																				"nativeSrc": "1846:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1846:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1870:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1870:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1825:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1825:20:7"
																		},
																		"nativeSrc": "1825:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1825:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1815:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1815:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1898:118:7",
															"nodeType": "YulBlock",
															"src": "1898:118:7",
															"statements": [
																{
																	"nativeSrc": "1913:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1913:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1927:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1927:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1917:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1917:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1943:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1943:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1978:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1978:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1989:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1989:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1974:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1974:3:7"
																				},
																				"nativeSrc": "1974:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1974:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1998:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1998:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1953:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1953:20:7"
																		},
																		"nativeSrc": "1953:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1953:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1943:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1943:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1549:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1594:9:7",
														"nodeType": "YulTypedName",
														"src": "1594:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1605:7:7",
														"nodeType": "YulTypedName",
														"src": "1605:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1617:6:7",
														"nodeType": "YulTypedName",
														"src": "1617:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1625:6:7",
														"nodeType": "YulTypedName",
														"src": "1625:6:7",
														"type": ""
													}
												],
												"src": "1549:474:7"
											},
											{
												"body": {
													"nativeSrc": "2095:263:7",
													"nodeType": "YulBlock",
													"src": "2095:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2141:83:7",
																"nodeType": "YulBlock",
																"src": "2141:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2143:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2143:77:7"
																			},
																			"nativeSrc": "2143:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2143:79:7"
																		},
																		"nativeSrc": "2143:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2116:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2125:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2112:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:7"
																		},
																		"nativeSrc": "2112:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2137:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2108:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:7"
																},
																"nativeSrc": "2108:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2108:32:7"
															},
															"nativeSrc": "2105:119:7",
															"nodeType": "YulIf",
															"src": "2105:119:7"
														},
														{
															"nativeSrc": "2234:117:7",
															"nodeType": "YulBlock",
															"src": "2234:117:7",
															"statements": [
																{
																	"nativeSrc": "2249:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2249:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2263:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2253:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2253:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2278:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2278:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2313:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2324:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2309:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:7"
																				},
																				"nativeSrc": "2309:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2333:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2288:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:7"
																		},
																		"nativeSrc": "2288:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2278:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2029:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2065:9:7",
														"nodeType": "YulTypedName",
														"src": "2065:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2076:7:7",
														"nodeType": "YulTypedName",
														"src": "2076:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2088:6:7",
														"nodeType": "YulTypedName",
														"src": "2088:6:7",
														"type": ""
													}
												],
												"src": "2029:329:7"
											},
											{
												"body": {
													"nativeSrc": "2430:263:7",
													"nodeType": "YulBlock",
													"src": "2430:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2476:83:7",
																"nodeType": "YulBlock",
																"src": "2476:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2478:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2478:77:7"
																			},
																			"nativeSrc": "2478:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2478:79:7"
																		},
																		"nativeSrc": "2478:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2478:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2451:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2451:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2460:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2460:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2447:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2447:3:7"
																		},
																		"nativeSrc": "2447:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2447:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2472:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2472:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2443:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2443:3:7"
																},
																"nativeSrc": "2443:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2443:32:7"
															},
															"nativeSrc": "2440:119:7",
															"nodeType": "YulIf",
															"src": "2440:119:7"
														},
														{
															"nativeSrc": "2569:117:7",
															"nodeType": "YulBlock",
															"src": "2569:117:7",
															"statements": [
																{
																	"nativeSrc": "2584:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2584:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2598:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2598:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2588:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2588:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2613:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2613:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2648:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2648:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2659:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2659:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2644:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2644:3:7"
																				},
																				"nativeSrc": "2644:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2644:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2668:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2668:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2623:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2623:20:7"
																		},
																		"nativeSrc": "2623:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2623:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2613:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2613:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2364:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2400:9:7",
														"nodeType": "YulTypedName",
														"src": "2400:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2411:7:7",
														"nodeType": "YulTypedName",
														"src": "2411:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2423:6:7",
														"nodeType": "YulTypedName",
														"src": "2423:6:7",
														"type": ""
													}
												],
												"src": "2364:329:7"
											},
											{
												"body": {
													"nativeSrc": "2742:43:7",
													"nodeType": "YulBlock",
													"src": "2742:43:7",
													"statements": [
														{
															"nativeSrc": "2752:27:7",
															"nodeType": "YulAssignment",
															"src": "2752:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2767:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2767:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2774:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2774:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2763:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2763:3:7"
																},
																"nativeSrc": "2763:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2763:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2752:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2752:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2699:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2724:5:7",
														"nodeType": "YulTypedName",
														"src": "2724:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2734:7:7",
														"nodeType": "YulTypedName",
														"src": "2734:7:7",
														"type": ""
													}
												],
												"src": "2699:86:7"
											},
											{
												"body": {
													"nativeSrc": "2852:51:7",
													"nodeType": "YulBlock",
													"src": "2852:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2869:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2869:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2890:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2890:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "2874:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "2874:15:7"
																		},
																		"nativeSrc": "2874:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2874:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2862:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2862:6:7"
																},
																"nativeSrc": "2862:35:7",
																"nodeType": "YulFunctionCall",
																"src": "2862:35:7"
															},
															"nativeSrc": "2862:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "2862:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "2791:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2840:5:7",
														"nodeType": "YulTypedName",
														"src": "2840:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2847:3:7",
														"nodeType": "YulTypedName",
														"src": "2847:3:7",
														"type": ""
													}
												],
												"src": "2791:112:7"
											},
											{
												"body": {
													"nativeSrc": "3003:120:7",
													"nodeType": "YulBlock",
													"src": "3003:120:7",
													"statements": [
														{
															"nativeSrc": "3013:26:7",
															"nodeType": "YulAssignment",
															"src": "3013:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3025:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3025:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3036:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3036:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3021:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3021:3:7"
																},
																"nativeSrc": "3021:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3021:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3013:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3013:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3089:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3089:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3102:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3102:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3113:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3113:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3098:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3098:3:7"
																		},
																		"nativeSrc": "3098:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3098:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "3049:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "3049:39:7"
																},
																"nativeSrc": "3049:67:7",
																"nodeType": "YulFunctionCall",
																"src": "3049:67:7"
															},
															"nativeSrc": "3049:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "3049:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2909:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2975:9:7",
														"nodeType": "YulTypedName",
														"src": "2975:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2987:6:7",
														"nodeType": "YulTypedName",
														"src": "2987:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2998:4:7",
														"nodeType": "YulTypedName",
														"src": "2998:4:7",
														"type": ""
													}
												],
												"src": "2909:214:7"
											},
											{
												"body": {
													"nativeSrc": "3161:28:7",
													"nodeType": "YulBlock",
													"src": "3161:28:7",
													"statements": [
														{
															"nativeSrc": "3171:12:7",
															"nodeType": "YulAssignment",
															"src": "3171:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3178:5:7",
																"nodeType": "YulIdentifier",
																"src": "3178:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3171:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3171:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3129:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3147:5:7",
														"nodeType": "YulTypedName",
														"src": "3147:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3157:3:7",
														"nodeType": "YulTypedName",
														"src": "3157:3:7",
														"type": ""
													}
												],
												"src": "3129:60:7"
											},
											{
												"body": {
													"nativeSrc": "3255:82:7",
													"nodeType": "YulBlock",
													"src": "3255:82:7",
													"statements": [
														{
															"nativeSrc": "3265:66:7",
															"nodeType": "YulAssignment",
															"src": "3265:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3323:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3323:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3305:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3305:17:7"
																				},
																				"nativeSrc": "3305:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3305:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3296:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "3296:8:7"
																		},
																		"nativeSrc": "3296:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3296:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3278:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3278:17:7"
																},
																"nativeSrc": "3278:53:7",
																"nodeType": "YulFunctionCall",
																"src": "3278:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3265:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3265:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3195:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3235:5:7",
														"nodeType": "YulTypedName",
														"src": "3235:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3245:9:7",
														"nodeType": "YulTypedName",
														"src": "3245:9:7",
														"type": ""
													}
												],
												"src": "3195:142:7"
											},
											{
												"body": {
													"nativeSrc": "3403:66:7",
													"nodeType": "YulBlock",
													"src": "3403:66:7",
													"statements": [
														{
															"nativeSrc": "3413:50:7",
															"nodeType": "YulAssignment",
															"src": "3413:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3457:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3457:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3426:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3426:30:7"
																},
																"nativeSrc": "3426:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3426:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3413:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3413:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3343:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3383:5:7",
														"nodeType": "YulTypedName",
														"src": "3383:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3393:9:7",
														"nodeType": "YulTypedName",
														"src": "3393:9:7",
														"type": ""
													}
												],
												"src": "3343:126:7"
											},
											{
												"body": {
													"nativeSrc": "3549:66:7",
													"nodeType": "YulBlock",
													"src": "3549:66:7",
													"statements": [
														{
															"nativeSrc": "3559:50:7",
															"nodeType": "YulAssignment",
															"src": "3559:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3603:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3603:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3572:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:7"
																},
																"nativeSrc": "3572:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3572:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3559:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3559:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$167_to_t_address",
												"nativeSrc": "3475:140:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3529:5:7",
														"nodeType": "YulTypedName",
														"src": "3529:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3539:9:7",
														"nodeType": "YulTypedName",
														"src": "3539:9:7",
														"type": ""
													}
												],
												"src": "3475:140:7"
											},
											{
												"body": {
													"nativeSrc": "3700:80:7",
													"nodeType": "YulBlock",
													"src": "3700:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3717:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3717:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3767:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3767:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$167_to_t_address",
																			"nativeSrc": "3722:44:7",
																			"nodeType": "YulIdentifier",
																			"src": "3722:44:7"
																		},
																		"nativeSrc": "3722:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3722:51:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3710:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3710:6:7"
																},
																"nativeSrc": "3710:64:7",
																"nodeType": "YulFunctionCall",
																"src": "3710:64:7"
															},
															"nativeSrc": "3710:64:7",
															"nodeType": "YulExpressionStatement",
															"src": "3710:64:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack",
												"nativeSrc": "3621:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3688:5:7",
														"nodeType": "YulTypedName",
														"src": "3688:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3695:3:7",
														"nodeType": "YulTypedName",
														"src": "3695:3:7",
														"type": ""
													}
												],
												"src": "3621:159:7"
											},
											{
												"body": {
													"nativeSrc": "3898:138:7",
													"nodeType": "YulBlock",
													"src": "3898:138:7",
													"statements": [
														{
															"nativeSrc": "3908:26:7",
															"nodeType": "YulAssignment",
															"src": "3908:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3920:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3920:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3931:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3931:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3916:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3916:3:7"
																},
																"nativeSrc": "3916:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3916:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3908:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3908:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4002:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4002:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4015:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4015:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4026:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4026:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4011:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4011:3:7"
																		},
																		"nativeSrc": "4011:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4011:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack",
																	"nativeSrc": "3944:57:7",
																	"nodeType": "YulIdentifier",
																	"src": "3944:57:7"
																},
																"nativeSrc": "3944:85:7",
																"nodeType": "YulFunctionCall",
																"src": "3944:85:7"
															},
															"nativeSrc": "3944:85:7",
															"nodeType": "YulExpressionStatement",
															"src": "3944:85:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$167__to_t_address__fromStack_reversed",
												"nativeSrc": "3786:250:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3870:9:7",
														"nodeType": "YulTypedName",
														"src": "3870:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3882:6:7",
														"nodeType": "YulTypedName",
														"src": "3882:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3893:4:7",
														"nodeType": "YulTypedName",
														"src": "3893:4:7",
														"type": ""
													}
												],
												"src": "3786:250:7"
											},
											{
												"body": {
													"nativeSrc": "4107:53:7",
													"nodeType": "YulBlock",
													"src": "4107:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4124:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4124:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4147:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4147:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4129:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "4129:17:7"
																		},
																		"nativeSrc": "4129:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4129:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4117:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4117:6:7"
																},
																"nativeSrc": "4117:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4117:37:7"
															},
															"nativeSrc": "4117:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "4117:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4042:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4095:5:7",
														"nodeType": "YulTypedName",
														"src": "4095:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4102:3:7",
														"nodeType": "YulTypedName",
														"src": "4102:3:7",
														"type": ""
													}
												],
												"src": "4042:118:7"
											},
											{
												"body": {
													"nativeSrc": "4376:454:7",
													"nodeType": "YulBlock",
													"src": "4376:454:7",
													"statements": [
														{
															"nativeSrc": "4386:27:7",
															"nodeType": "YulAssignment",
															"src": "4386:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4398:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4398:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4409:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4409:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4394:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4394:3:7"
																},
																"nativeSrc": "4394:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4394:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4386:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4386:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4467:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4467:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4480:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4480:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4491:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4491:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4476:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4476:3:7"
																		},
																		"nativeSrc": "4476:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4476:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4423:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4423:43:7"
																},
																"nativeSrc": "4423:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4423:71:7"
															},
															"nativeSrc": "4423:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4423:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4548:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4548:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4561:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4561:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4572:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4572:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4557:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4557:3:7"
																		},
																		"nativeSrc": "4557:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4557:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4504:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4504:43:7"
																},
																"nativeSrc": "4504:72:7",
																"nodeType": "YulFunctionCall",
																"src": "4504:72:7"
															},
															"nativeSrc": "4504:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "4504:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4630:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4630:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4643:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4643:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4654:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4654:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4639:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4639:3:7"
																		},
																		"nativeSrc": "4639:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4639:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4586:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4586:43:7"
																},
																"nativeSrc": "4586:72:7",
																"nodeType": "YulFunctionCall",
																"src": "4586:72:7"
															},
															"nativeSrc": "4586:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "4586:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "4712:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4712:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4725:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4725:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4736:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4736:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4721:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4721:3:7"
																		},
																		"nativeSrc": "4721:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4721:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4668:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4668:43:7"
																},
																"nativeSrc": "4668:72:7",
																"nodeType": "YulFunctionCall",
																"src": "4668:72:7"
															},
															"nativeSrc": "4668:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "4668:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "4794:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4794:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4807:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4807:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4818:3:7",
																				"nodeType": "YulLiteral",
																				"src": "4818:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4803:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4803:3:7"
																		},
																		"nativeSrc": "4803:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4803:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4750:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4750:43:7"
																},
																"nativeSrc": "4750:73:7",
																"nodeType": "YulFunctionCall",
																"src": "4750:73:7"
															},
															"nativeSrc": "4750:73:7",
															"nodeType": "YulExpressionStatement",
															"src": "4750:73:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "4166:664:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4316:9:7",
														"nodeType": "YulTypedName",
														"src": "4316:9:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4328:6:7",
														"nodeType": "YulTypedName",
														"src": "4328:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4336:6:7",
														"nodeType": "YulTypedName",
														"src": "4336:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4344:6:7",
														"nodeType": "YulTypedName",
														"src": "4344:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4352:6:7",
														"nodeType": "YulTypedName",
														"src": "4352:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4360:6:7",
														"nodeType": "YulTypedName",
														"src": "4360:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4371:4:7",
														"nodeType": "YulTypedName",
														"src": "4371:4:7",
														"type": ""
													}
												],
												"src": "4166:664:7"
											},
											{
												"body": {
													"nativeSrc": "4934:124:7",
													"nodeType": "YulBlock",
													"src": "4934:124:7",
													"statements": [
														{
															"nativeSrc": "4944:26:7",
															"nodeType": "YulAssignment",
															"src": "4944:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4956:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4956:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4967:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4967:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4952:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4952:3:7"
																},
																"nativeSrc": "4952:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4952:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4944:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4944:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5024:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5024:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5037:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5037:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5048:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5048:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5033:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5033:3:7"
																		},
																		"nativeSrc": "5033:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5033:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4980:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4980:43:7"
																},
																"nativeSrc": "4980:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4980:71:7"
															},
															"nativeSrc": "4980:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4980:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4836:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4906:9:7",
														"nodeType": "YulTypedName",
														"src": "4906:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4918:6:7",
														"nodeType": "YulTypedName",
														"src": "4918:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4929:4:7",
														"nodeType": "YulTypedName",
														"src": "4929:4:7",
														"type": ""
													}
												],
												"src": "4836:222:7"
											},
											{
												"body": {
													"nativeSrc": "5160:73:7",
													"nodeType": "YulBlock",
													"src": "5160:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5177:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5177:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5182:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5182:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5170:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5170:6:7"
																},
																"nativeSrc": "5170:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5170:19:7"
															},
															"nativeSrc": "5170:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "5170:19:7"
														},
														{
															"nativeSrc": "5198:29:7",
															"nodeType": "YulAssignment",
															"src": "5198:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5217:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5217:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5222:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5222:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5213:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5213:3:7"
																},
																"nativeSrc": "5213:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5213:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5198:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "5198:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5064:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5132:3:7",
														"nodeType": "YulTypedName",
														"src": "5132:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5137:6:7",
														"nodeType": "YulTypedName",
														"src": "5137:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5148:11:7",
														"nodeType": "YulTypedName",
														"src": "5148:11:7",
														"type": ""
													}
												],
												"src": "5064:169:7"
											},
											{
												"body": {
													"nativeSrc": "5345:69:7",
													"nodeType": "YulBlock",
													"src": "5345:69:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5367:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5367:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5375:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5375:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5363:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5363:3:7"
																		},
																		"nativeSrc": "5363:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5363:14:7"
																	},
																	{
																		"hexValue": "5374616b6520616d6f756e74206f7574206f662072616e6765",
																		"kind": "string",
																		"nativeSrc": "5379:27:7",
																		"nodeType": "YulLiteral",
																		"src": "5379:27:7",
																		"type": "",
																		"value": "Stake amount out of range"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5356:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5356:6:7"
																},
																"nativeSrc": "5356:51:7",
																"nodeType": "YulFunctionCall",
																"src": "5356:51:7"
															},
															"nativeSrc": "5356:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "5356:51:7"
														}
													]
												},
												"name": "store_literal_in_memory_d994444ac13ecaeeccca9b7f3363f0d6c486526e60d1c7d157dfc6b1a19e01ad",
												"nativeSrc": "5239:175:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5337:6:7",
														"nodeType": "YulTypedName",
														"src": "5337:6:7",
														"type": ""
													}
												],
												"src": "5239:175:7"
											},
											{
												"body": {
													"nativeSrc": "5566:220:7",
													"nodeType": "YulBlock",
													"src": "5566:220:7",
													"statements": [
														{
															"nativeSrc": "5576:74:7",
															"nodeType": "YulAssignment",
															"src": "5576:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5642:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5642:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5647:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5647:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5583:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "5583:58:7"
																},
																"nativeSrc": "5583:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5583:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5576:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5576:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5748:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5748:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d994444ac13ecaeeccca9b7f3363f0d6c486526e60d1c7d157dfc6b1a19e01ad",
																	"nativeSrc": "5659:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "5659:88:7"
																},
																"nativeSrc": "5659:93:7",
																"nodeType": "YulFunctionCall",
																"src": "5659:93:7"
															},
															"nativeSrc": "5659:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "5659:93:7"
														},
														{
															"nativeSrc": "5761:19:7",
															"nodeType": "YulAssignment",
															"src": "5761:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5772:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5772:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5777:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5777:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5768:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5768:3:7"
																},
																"nativeSrc": "5768:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5768:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5761:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5761:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d994444ac13ecaeeccca9b7f3363f0d6c486526e60d1c7d157dfc6b1a19e01ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5420:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5554:3:7",
														"nodeType": "YulTypedName",
														"src": "5554:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5562:3:7",
														"nodeType": "YulTypedName",
														"src": "5562:3:7",
														"type": ""
													}
												],
												"src": "5420:366:7"
											},
											{
												"body": {
													"nativeSrc": "5963:248:7",
													"nodeType": "YulBlock",
													"src": "5963:248:7",
													"statements": [
														{
															"nativeSrc": "5973:26:7",
															"nodeType": "YulAssignment",
															"src": "5973:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5985:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5985:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5996:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5996:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5981:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5981:3:7"
																},
																"nativeSrc": "5981:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5981:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5973:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5973:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6020:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6020:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6031:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6031:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6016:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6016:3:7"
																		},
																		"nativeSrc": "6016:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6016:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6039:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6039:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6045:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6045:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6035:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6035:3:7"
																		},
																		"nativeSrc": "6035:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6035:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6009:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6009:6:7"
																},
																"nativeSrc": "6009:47:7",
																"nodeType": "YulFunctionCall",
																"src": "6009:47:7"
															},
															"nativeSrc": "6009:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "6009:47:7"
														},
														{
															"nativeSrc": "6065:139:7",
															"nodeType": "YulAssignment",
															"src": "6065:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6199:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6199:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d994444ac13ecaeeccca9b7f3363f0d6c486526e60d1c7d157dfc6b1a19e01ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6073:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "6073:124:7"
																},
																"nativeSrc": "6073:131:7",
																"nodeType": "YulFunctionCall",
																"src": "6073:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6065:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6065:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d994444ac13ecaeeccca9b7f3363f0d6c486526e60d1c7d157dfc6b1a19e01ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5792:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5943:9:7",
														"nodeType": "YulTypedName",
														"src": "5943:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5958:4:7",
														"nodeType": "YulTypedName",
														"src": "5958:4:7",
														"type": ""
													}
												],
												"src": "5792:419:7"
											},
											{
												"body": {
													"nativeSrc": "6323:69:7",
													"nodeType": "YulBlock",
													"src": "6323:69:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6345:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6345:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6353:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6353:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6341:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6341:3:7"
																		},
																		"nativeSrc": "6341:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6341:14:7"
																	},
																	{
																		"hexValue": "53656c6620726566657272616c206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "6357:27:7",
																		"nodeType": "YulLiteral",
																		"src": "6357:27:7",
																		"type": "",
																		"value": "Self referral not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6334:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6334:6:7"
																},
																"nativeSrc": "6334:51:7",
																"nodeType": "YulFunctionCall",
																"src": "6334:51:7"
															},
															"nativeSrc": "6334:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "6334:51:7"
														}
													]
												},
												"name": "store_literal_in_memory_2b4b5d23e1fe0bfa770424b0047417e5abbe574a8967435cd555c8f5bf89ab2f",
												"nativeSrc": "6217:175:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6315:6:7",
														"nodeType": "YulTypedName",
														"src": "6315:6:7",
														"type": ""
													}
												],
												"src": "6217:175:7"
											},
											{
												"body": {
													"nativeSrc": "6544:220:7",
													"nodeType": "YulBlock",
													"src": "6544:220:7",
													"statements": [
														{
															"nativeSrc": "6554:74:7",
															"nodeType": "YulAssignment",
															"src": "6554:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6620:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6620:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6625:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6625:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6561:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "6561:58:7"
																},
																"nativeSrc": "6561:67:7",
																"nodeType": "YulFunctionCall",
																"src": "6561:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6554:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6554:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6726:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6726:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2b4b5d23e1fe0bfa770424b0047417e5abbe574a8967435cd555c8f5bf89ab2f",
																	"nativeSrc": "6637:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "6637:88:7"
																},
																"nativeSrc": "6637:93:7",
																"nodeType": "YulFunctionCall",
																"src": "6637:93:7"
															},
															"nativeSrc": "6637:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "6637:93:7"
														},
														{
															"nativeSrc": "6739:19:7",
															"nodeType": "YulAssignment",
															"src": "6739:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6750:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6750:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6755:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6755:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6746:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6746:3:7"
																},
																"nativeSrc": "6746:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6746:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6739:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6739:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2b4b5d23e1fe0bfa770424b0047417e5abbe574a8967435cd555c8f5bf89ab2f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6398:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6532:3:7",
														"nodeType": "YulTypedName",
														"src": "6532:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6540:3:7",
														"nodeType": "YulTypedName",
														"src": "6540:3:7",
														"type": ""
													}
												],
												"src": "6398:366:7"
											},
											{
												"body": {
													"nativeSrc": "6941:248:7",
													"nodeType": "YulBlock",
													"src": "6941:248:7",
													"statements": [
														{
															"nativeSrc": "6951:26:7",
															"nodeType": "YulAssignment",
															"src": "6951:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6963:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6963:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6974:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6974:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6959:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6959:3:7"
																},
																"nativeSrc": "6959:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6959:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6951:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6951:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6998:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6998:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7009:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7009:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6994:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6994:3:7"
																		},
																		"nativeSrc": "6994:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6994:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7017:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7017:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7023:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7023:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7013:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7013:3:7"
																		},
																		"nativeSrc": "7013:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7013:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6987:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6987:6:7"
																},
																"nativeSrc": "6987:47:7",
																"nodeType": "YulFunctionCall",
																"src": "6987:47:7"
															},
															"nativeSrc": "6987:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "6987:47:7"
														},
														{
															"nativeSrc": "7043:139:7",
															"nodeType": "YulAssignment",
															"src": "7043:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7177:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7177:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2b4b5d23e1fe0bfa770424b0047417e5abbe574a8967435cd555c8f5bf89ab2f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7051:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "7051:124:7"
																},
																"nativeSrc": "7051:131:7",
																"nodeType": "YulFunctionCall",
																"src": "7051:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7043:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7043:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2b4b5d23e1fe0bfa770424b0047417e5abbe574a8967435cd555c8f5bf89ab2f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6770:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6921:9:7",
														"nodeType": "YulTypedName",
														"src": "6921:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6936:4:7",
														"nodeType": "YulTypedName",
														"src": "6936:4:7",
														"type": ""
													}
												],
												"src": "6770:419:7"
											},
											{
												"body": {
													"nativeSrc": "7223:152:7",
													"nodeType": "YulBlock",
													"src": "7223:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7240:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7240:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7243:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7243:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7233:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7233:6:7"
																},
																"nativeSrc": "7233:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7233:88:7"
															},
															"nativeSrc": "7233:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7233:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7337:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7337:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7340:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7340:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7330:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7330:6:7"
																},
																"nativeSrc": "7330:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7330:15:7"
															},
															"nativeSrc": "7330:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7330:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7361:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7361:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7364:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7364:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7354:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7354:6:7"
																},
																"nativeSrc": "7354:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7354:15:7"
															},
															"nativeSrc": "7354:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7354:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7195:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7195:180:7"
											},
											{
												"body": {
													"nativeSrc": "7429:362:7",
													"nodeType": "YulBlock",
													"src": "7429:362:7",
													"statements": [
														{
															"nativeSrc": "7439:25:7",
															"nodeType": "YulAssignment",
															"src": "7439:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7462:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7462:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7444:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7444:17:7"
																},
																"nativeSrc": "7444:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7444:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7439:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7439:1:7"
																}
															]
														},
														{
															"nativeSrc": "7473:25:7",
															"nodeType": "YulAssignment",
															"src": "7473:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7496:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7496:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7478:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7478:17:7"
																},
																"nativeSrc": "7478:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7478:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7473:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7473:1:7"
																}
															]
														},
														{
															"nativeSrc": "7507:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7507:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7530:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7530:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7533:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7533:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7526:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7526:3:7"
																},
																"nativeSrc": "7526:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7526:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7511:11:7",
																	"nodeType": "YulTypedName",
																	"src": "7511:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7544:41:7",
															"nodeType": "YulAssignment",
															"src": "7544:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7573:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "7573:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7555:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7555:17:7"
																},
																"nativeSrc": "7555:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7555:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7544:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "7544:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7762:22:7",
																"nodeType": "YulBlock",
																"src": "7762:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7764:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7764:16:7"
																			},
																			"nativeSrc": "7764:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7764:18:7"
																		},
																		"nativeSrc": "7764:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7764:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7695:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "7695:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7688:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7688:6:7"
																				},
																				"nativeSrc": "7688:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7688:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7718:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "7718:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7725:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "7725:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7734:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "7734:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7721:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7721:3:7"
																						},
																						"nativeSrc": "7721:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7721:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7715:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "7715:2:7"
																				},
																				"nativeSrc": "7715:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7715:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7668:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7668:2:7"
																		},
																		"nativeSrc": "7668:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7668:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7648:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7648:6:7"
																},
																"nativeSrc": "7648:113:7",
																"nodeType": "YulFunctionCall",
																"src": "7648:113:7"
															},
															"nativeSrc": "7645:139:7",
															"nodeType": "YulIf",
															"src": "7645:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7381:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7412:1:7",
														"nodeType": "YulTypedName",
														"src": "7412:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7415:1:7",
														"nodeType": "YulTypedName",
														"src": "7415:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7421:7:7",
														"nodeType": "YulTypedName",
														"src": "7421:7:7",
														"type": ""
													}
												],
												"src": "7381:410:7"
											},
											{
												"body": {
													"nativeSrc": "7825:152:7",
													"nodeType": "YulBlock",
													"src": "7825:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7842:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7842:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7845:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7845:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7835:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7835:6:7"
																},
																"nativeSrc": "7835:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7835:88:7"
															},
															"nativeSrc": "7835:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7835:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7939:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7939:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7942:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7942:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7932:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7932:6:7"
																},
																"nativeSrc": "7932:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7932:15:7"
															},
															"nativeSrc": "7932:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7932:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7963:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7963:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7966:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7966:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7956:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7956:6:7"
																},
																"nativeSrc": "7956:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7956:15:7"
															},
															"nativeSrc": "7956:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7956:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "7797:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7797:180:7"
											},
											{
												"body": {
													"nativeSrc": "8025:143:7",
													"nodeType": "YulBlock",
													"src": "8025:143:7",
													"statements": [
														{
															"nativeSrc": "8035:25:7",
															"nodeType": "YulAssignment",
															"src": "8035:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8058:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8058:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8040:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8040:17:7"
																},
																"nativeSrc": "8040:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8040:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8035:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8035:1:7"
																}
															]
														},
														{
															"nativeSrc": "8069:25:7",
															"nodeType": "YulAssignment",
															"src": "8069:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8092:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8092:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8074:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8074:17:7"
																},
																"nativeSrc": "8074:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8074:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8069:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8069:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8116:22:7",
																"nodeType": "YulBlock",
																"src": "8116:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8118:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8118:16:7"
																			},
																			"nativeSrc": "8118:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8118:18:7"
																		},
																		"nativeSrc": "8118:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8118:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8113:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8113:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8106:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8106:6:7"
																},
																"nativeSrc": "8106:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8106:9:7"
															},
															"nativeSrc": "8103:35:7",
															"nodeType": "YulIf",
															"src": "8103:35:7"
														},
														{
															"nativeSrc": "8148:14:7",
															"nodeType": "YulAssignment",
															"src": "8148:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8157:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8157:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8160:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8160:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8153:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8153:3:7"
																},
																"nativeSrc": "8153:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8153:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8148:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8148:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7983:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8014:1:7",
														"nodeType": "YulTypedName",
														"src": "8014:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8017:1:7",
														"nodeType": "YulTypedName",
														"src": "8017:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8023:1:7",
														"nodeType": "YulTypedName",
														"src": "8023:1:7",
														"type": ""
													}
												],
												"src": "7983:185:7"
											},
											{
												"body": {
													"nativeSrc": "8218:147:7",
													"nodeType": "YulBlock",
													"src": "8218:147:7",
													"statements": [
														{
															"nativeSrc": "8228:25:7",
															"nodeType": "YulAssignment",
															"src": "8228:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8251:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8251:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8233:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8233:17:7"
																},
																"nativeSrc": "8233:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8233:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8228:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8228:1:7"
																}
															]
														},
														{
															"nativeSrc": "8262:25:7",
															"nodeType": "YulAssignment",
															"src": "8262:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8285:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8285:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8267:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8267:17:7"
																},
																"nativeSrc": "8267:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8267:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8262:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8262:1:7"
																}
															]
														},
														{
															"nativeSrc": "8296:16:7",
															"nodeType": "YulAssignment",
															"src": "8296:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8307:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8307:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8310:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8310:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8303:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8303:3:7"
																},
																"nativeSrc": "8303:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8303:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8296:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8296:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8336:22:7",
																"nodeType": "YulBlock",
																"src": "8336:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8338:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8338:16:7"
																			},
																			"nativeSrc": "8338:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8338:18:7"
																		},
																		"nativeSrc": "8338:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8338:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8328:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8328:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8331:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8331:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8325:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8325:2:7"
																},
																"nativeSrc": "8325:10:7",
																"nodeType": "YulFunctionCall",
																"src": "8325:10:7"
															},
															"nativeSrc": "8322:36:7",
															"nodeType": "YulIf",
															"src": "8322:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8174:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8205:1:7",
														"nodeType": "YulTypedName",
														"src": "8205:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8208:1:7",
														"nodeType": "YulTypedName",
														"src": "8208:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8214:3:7",
														"nodeType": "YulTypedName",
														"src": "8214:3:7",
														"type": ""
													}
												],
												"src": "8174:191:7"
											},
											{
												"body": {
													"nativeSrc": "8399:152:7",
													"nodeType": "YulBlock",
													"src": "8399:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8416:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8416:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8419:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8419:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8409:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8409:6:7"
																},
																"nativeSrc": "8409:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8409:88:7"
															},
															"nativeSrc": "8409:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8409:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8513:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8513:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8516:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8516:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8506:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8506:6:7"
																},
																"nativeSrc": "8506:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8506:15:7"
															},
															"nativeSrc": "8506:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8506:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8537:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8537:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8540:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8540:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8530:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8530:6:7"
																},
																"nativeSrc": "8530:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8530:15:7"
															},
															"nativeSrc": "8530:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8530:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "8371:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8371:180:7"
											},
											{
												"body": {
													"nativeSrc": "8602:149:7",
													"nodeType": "YulBlock",
													"src": "8602:149:7",
													"statements": [
														{
															"nativeSrc": "8612:25:7",
															"nodeType": "YulAssignment",
															"src": "8612:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8635:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8635:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8617:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8617:17:7"
																},
																"nativeSrc": "8617:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8617:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8612:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8612:1:7"
																}
															]
														},
														{
															"nativeSrc": "8646:25:7",
															"nodeType": "YulAssignment",
															"src": "8646:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8669:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8669:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8651:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8651:17:7"
																},
																"nativeSrc": "8651:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8651:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8646:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8646:1:7"
																}
															]
														},
														{
															"nativeSrc": "8680:17:7",
															"nodeType": "YulAssignment",
															"src": "8680:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8692:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8692:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8695:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8695:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8688:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8688:3:7"
																},
																"nativeSrc": "8688:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8688:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8680:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8680:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8722:22:7",
																"nodeType": "YulBlock",
																"src": "8722:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8724:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8724:16:7"
																			},
																			"nativeSrc": "8724:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8724:18:7"
																		},
																		"nativeSrc": "8724:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8724:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8713:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8713:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8719:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8719:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8710:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8710:2:7"
																},
																"nativeSrc": "8710:11:7",
																"nodeType": "YulFunctionCall",
																"src": "8710:11:7"
															},
															"nativeSrc": "8707:37:7",
															"nodeType": "YulIf",
															"src": "8707:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8557:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8588:1:7",
														"nodeType": "YulTypedName",
														"src": "8588:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8591:1:7",
														"nodeType": "YulTypedName",
														"src": "8591:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8597:4:7",
														"nodeType": "YulTypedName",
														"src": "8597:4:7",
														"type": ""
													}
												],
												"src": "8557:194:7"
											},
											{
												"body": {
													"nativeSrc": "8863:72:7",
													"nodeType": "YulBlock",
													"src": "8863:72:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8885:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8885:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8893:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8893:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8881:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8881:3:7"
																		},
																		"nativeSrc": "8881:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8881:14:7"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320617661696c61626c6520746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "8897:30:7",
																		"nodeType": "YulLiteral",
																		"src": "8897:30:7",
																		"type": "",
																		"value": "No tokens available to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8874:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8874:6:7"
																},
																"nativeSrc": "8874:54:7",
																"nodeType": "YulFunctionCall",
																"src": "8874:54:7"
															},
															"nativeSrc": "8874:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "8874:54:7"
														}
													]
												},
												"name": "store_literal_in_memory_d3c7d8a55d308962a49d643398c1a7f771d32ab6a1c86998cd19cc63622632cf",
												"nativeSrc": "8757:178:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8855:6:7",
														"nodeType": "YulTypedName",
														"src": "8855:6:7",
														"type": ""
													}
												],
												"src": "8757:178:7"
											},
											{
												"body": {
													"nativeSrc": "9087:220:7",
													"nodeType": "YulBlock",
													"src": "9087:220:7",
													"statements": [
														{
															"nativeSrc": "9097:74:7",
															"nodeType": "YulAssignment",
															"src": "9097:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9163:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9163:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9168:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9168:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9104:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9104:58:7"
																},
																"nativeSrc": "9104:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9104:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9097:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9097:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9269:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9269:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3c7d8a55d308962a49d643398c1a7f771d32ab6a1c86998cd19cc63622632cf",
																	"nativeSrc": "9180:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9180:88:7"
																},
																"nativeSrc": "9180:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9180:93:7"
															},
															"nativeSrc": "9180:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9180:93:7"
														},
														{
															"nativeSrc": "9282:19:7",
															"nodeType": "YulAssignment",
															"src": "9282:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9293:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9293:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9298:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9298:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9289:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9289:3:7"
																},
																"nativeSrc": "9289:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9289:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9282:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9282:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3c7d8a55d308962a49d643398c1a7f771d32ab6a1c86998cd19cc63622632cf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8941:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9075:3:7",
														"nodeType": "YulTypedName",
														"src": "9075:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9083:3:7",
														"nodeType": "YulTypedName",
														"src": "9083:3:7",
														"type": ""
													}
												],
												"src": "8941:366:7"
											},
											{
												"body": {
													"nativeSrc": "9484:248:7",
													"nodeType": "YulBlock",
													"src": "9484:248:7",
													"statements": [
														{
															"nativeSrc": "9494:26:7",
															"nodeType": "YulAssignment",
															"src": "9494:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9506:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9506:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9517:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9517:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9502:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9502:3:7"
																},
																"nativeSrc": "9502:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9502:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9494:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9494:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9541:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9541:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9552:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9552:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9537:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9537:3:7"
																		},
																		"nativeSrc": "9537:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9537:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9560:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9560:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9566:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9566:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9556:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9556:3:7"
																		},
																		"nativeSrc": "9556:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9556:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9530:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9530:6:7"
																},
																"nativeSrc": "9530:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9530:47:7"
															},
															"nativeSrc": "9530:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9530:47:7"
														},
														{
															"nativeSrc": "9586:139:7",
															"nodeType": "YulAssignment",
															"src": "9586:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9720:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9720:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3c7d8a55d308962a49d643398c1a7f771d32ab6a1c86998cd19cc63622632cf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9594:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "9594:124:7"
																},
																"nativeSrc": "9594:131:7",
																"nodeType": "YulFunctionCall",
																"src": "9594:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9586:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9586:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3c7d8a55d308962a49d643398c1a7f771d32ab6a1c86998cd19cc63622632cf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9313:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9464:9:7",
														"nodeType": "YulTypedName",
														"src": "9464:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9479:4:7",
														"nodeType": "YulTypedName",
														"src": "9479:4:7",
														"type": ""
													}
												],
												"src": "9313:419:7"
											},
											{
												"body": {
													"nativeSrc": "9844:114:7",
													"nodeType": "YulBlock",
													"src": "9844:114:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9866:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9866:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9874:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9874:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9862:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9862:3:7"
																		},
																		"nativeSrc": "9862:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9862:14:7"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f",
																		"kind": "string",
																		"nativeSrc": "9878:34:7",
																		"nodeType": "YulLiteral",
																		"src": "9878:34:7",
																		"type": "",
																		"value": "Only admin can call this functio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9855:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9855:6:7"
																},
																"nativeSrc": "9855:58:7",
																"nodeType": "YulFunctionCall",
																"src": "9855:58:7"
															},
															"nativeSrc": "9855:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "9855:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9934:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9934:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9942:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9942:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9930:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9930:3:7"
																		},
																		"nativeSrc": "9930:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9930:15:7"
																	},
																	{
																		"hexValue": "6e",
																		"kind": "string",
																		"nativeSrc": "9947:3:7",
																		"nodeType": "YulLiteral",
																		"src": "9947:3:7",
																		"type": "",
																		"value": "n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9923:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9923:6:7"
																},
																"nativeSrc": "9923:28:7",
																"nodeType": "YulFunctionCall",
																"src": "9923:28:7"
															},
															"nativeSrc": "9923:28:7",
															"nodeType": "YulExpressionStatement",
															"src": "9923:28:7"
														}
													]
												},
												"name": "store_literal_in_memory_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b",
												"nativeSrc": "9738:220:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9836:6:7",
														"nodeType": "YulTypedName",
														"src": "9836:6:7",
														"type": ""
													}
												],
												"src": "9738:220:7"
											},
											{
												"body": {
													"nativeSrc": "10110:220:7",
													"nodeType": "YulBlock",
													"src": "10110:220:7",
													"statements": [
														{
															"nativeSrc": "10120:74:7",
															"nodeType": "YulAssignment",
															"src": "10120:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10186:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10186:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10191:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10191:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10127:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10127:58:7"
																},
																"nativeSrc": "10127:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10127:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10120:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10120:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10292:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10292:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b",
																	"nativeSrc": "10203:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10203:88:7"
																},
																"nativeSrc": "10203:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10203:93:7"
															},
															"nativeSrc": "10203:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10203:93:7"
														},
														{
															"nativeSrc": "10305:19:7",
															"nodeType": "YulAssignment",
															"src": "10305:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10316:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10316:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10321:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10321:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10312:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10312:3:7"
																},
																"nativeSrc": "10312:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10312:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10305:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10305:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9964:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10098:3:7",
														"nodeType": "YulTypedName",
														"src": "10098:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10106:3:7",
														"nodeType": "YulTypedName",
														"src": "10106:3:7",
														"type": ""
													}
												],
												"src": "9964:366:7"
											},
											{
												"body": {
													"nativeSrc": "10507:248:7",
													"nodeType": "YulBlock",
													"src": "10507:248:7",
													"statements": [
														{
															"nativeSrc": "10517:26:7",
															"nodeType": "YulAssignment",
															"src": "10517:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10529:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10529:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10540:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10540:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10525:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10525:3:7"
																},
																"nativeSrc": "10525:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10525:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10517:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10517:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10564:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10564:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10575:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10575:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10560:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10560:3:7"
																		},
																		"nativeSrc": "10560:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10560:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10583:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10583:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10589:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10589:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10579:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10579:3:7"
																		},
																		"nativeSrc": "10579:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10579:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10553:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10553:6:7"
																},
																"nativeSrc": "10553:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10553:47:7"
															},
															"nativeSrc": "10553:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10553:47:7"
														},
														{
															"nativeSrc": "10609:139:7",
															"nodeType": "YulAssignment",
															"src": "10609:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10743:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10743:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10617:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10617:124:7"
																},
																"nativeSrc": "10617:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10617:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10609:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10609:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10336:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10487:9:7",
														"nodeType": "YulTypedName",
														"src": "10487:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10502:4:7",
														"nodeType": "YulTypedName",
														"src": "10502:4:7",
														"type": ""
													}
												],
												"src": "10336:419:7"
											},
											{
												"body": {
													"nativeSrc": "10867:59:7",
													"nodeType": "YulBlock",
													"src": "10867:59:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10889:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10889:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10897:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10897:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10885:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10885:3:7"
																		},
																		"nativeSrc": "10885:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10885:14:7"
																	},
																	{
																		"hexValue": "4e6f207374616b657320666f756e64",
																		"kind": "string",
																		"nativeSrc": "10901:17:7",
																		"nodeType": "YulLiteral",
																		"src": "10901:17:7",
																		"type": "",
																		"value": "No stakes found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10878:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10878:6:7"
																},
																"nativeSrc": "10878:41:7",
																"nodeType": "YulFunctionCall",
																"src": "10878:41:7"
															},
															"nativeSrc": "10878:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "10878:41:7"
														}
													]
												},
												"name": "store_literal_in_memory_afc7218b32e114ec965464013d43e9fc4a998fd4f9b9fceb167763aa8c319785",
												"nativeSrc": "10761:165:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10859:6:7",
														"nodeType": "YulTypedName",
														"src": "10859:6:7",
														"type": ""
													}
												],
												"src": "10761:165:7"
											},
											{
												"body": {
													"nativeSrc": "11078:220:7",
													"nodeType": "YulBlock",
													"src": "11078:220:7",
													"statements": [
														{
															"nativeSrc": "11088:74:7",
															"nodeType": "YulAssignment",
															"src": "11088:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11154:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11154:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11159:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11159:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11095:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11095:58:7"
																},
																"nativeSrc": "11095:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11095:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11088:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11088:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11260:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11260:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_afc7218b32e114ec965464013d43e9fc4a998fd4f9b9fceb167763aa8c319785",
																	"nativeSrc": "11171:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11171:88:7"
																},
																"nativeSrc": "11171:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11171:93:7"
															},
															"nativeSrc": "11171:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11171:93:7"
														},
														{
															"nativeSrc": "11273:19:7",
															"nodeType": "YulAssignment",
															"src": "11273:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11284:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11284:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11289:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11289:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11280:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11280:3:7"
																},
																"nativeSrc": "11280:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11280:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11273:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11273:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_afc7218b32e114ec965464013d43e9fc4a998fd4f9b9fceb167763aa8c319785_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10932:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11066:3:7",
														"nodeType": "YulTypedName",
														"src": "11066:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11074:3:7",
														"nodeType": "YulTypedName",
														"src": "11074:3:7",
														"type": ""
													}
												],
												"src": "10932:366:7"
											},
											{
												"body": {
													"nativeSrc": "11475:248:7",
													"nodeType": "YulBlock",
													"src": "11475:248:7",
													"statements": [
														{
															"nativeSrc": "11485:26:7",
															"nodeType": "YulAssignment",
															"src": "11485:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11497:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11497:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11508:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11508:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11493:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11493:3:7"
																},
																"nativeSrc": "11493:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11493:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11485:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11485:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11532:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11532:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11543:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11543:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11528:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11528:3:7"
																		},
																		"nativeSrc": "11528:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11528:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11551:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11551:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11557:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11557:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11547:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11547:3:7"
																		},
																		"nativeSrc": "11547:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11547:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11521:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11521:6:7"
																},
																"nativeSrc": "11521:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11521:47:7"
															},
															"nativeSrc": "11521:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11521:47:7"
														},
														{
															"nativeSrc": "11577:139:7",
															"nodeType": "YulAssignment",
															"src": "11577:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11711:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11711:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_afc7218b32e114ec965464013d43e9fc4a998fd4f9b9fceb167763aa8c319785_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11585:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11585:124:7"
																},
																"nativeSrc": "11585:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11585:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11577:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11577:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_afc7218b32e114ec965464013d43e9fc4a998fd4f9b9fceb167763aa8c319785__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11304:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11455:9:7",
														"nodeType": "YulTypedName",
														"src": "11455:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11470:4:7",
														"nodeType": "YulTypedName",
														"src": "11470:4:7",
														"type": ""
													}
												],
												"src": "11304:419:7"
											},
											{
												"body": {
													"nativeSrc": "11835:68:7",
													"nodeType": "YulBlock",
													"src": "11835:68:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11857:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11857:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11865:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11865:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11853:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11853:3:7"
																		},
																		"nativeSrc": "11853:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11853:14:7"
																	},
																	{
																		"hexValue": "4e6f206c6576656c20696e636f6d6520746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "11869:26:7",
																		"nodeType": "YulLiteral",
																		"src": "11869:26:7",
																		"type": "",
																		"value": "No level income to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11846:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11846:6:7"
																},
																"nativeSrc": "11846:50:7",
																"nodeType": "YulFunctionCall",
																"src": "11846:50:7"
															},
															"nativeSrc": "11846:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "11846:50:7"
														}
													]
												},
												"name": "store_literal_in_memory_bd6e6be77339438fa1ce99e753eafbac0b165ee3cf81de39211cd1fa463c169e",
												"nativeSrc": "11729:174:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11827:6:7",
														"nodeType": "YulTypedName",
														"src": "11827:6:7",
														"type": ""
													}
												],
												"src": "11729:174:7"
											},
											{
												"body": {
													"nativeSrc": "12055:220:7",
													"nodeType": "YulBlock",
													"src": "12055:220:7",
													"statements": [
														{
															"nativeSrc": "12065:74:7",
															"nodeType": "YulAssignment",
															"src": "12065:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12131:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12131:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12136:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12136:2:7",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12072:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12072:58:7"
																},
																"nativeSrc": "12072:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12072:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12065:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12065:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12237:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12237:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bd6e6be77339438fa1ce99e753eafbac0b165ee3cf81de39211cd1fa463c169e",
																	"nativeSrc": "12148:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12148:88:7"
																},
																"nativeSrc": "12148:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12148:93:7"
															},
															"nativeSrc": "12148:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12148:93:7"
														},
														{
															"nativeSrc": "12250:19:7",
															"nodeType": "YulAssignment",
															"src": "12250:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12261:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12261:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12266:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12266:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12257:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12257:3:7"
																},
																"nativeSrc": "12257:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12257:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12250:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12250:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bd6e6be77339438fa1ce99e753eafbac0b165ee3cf81de39211cd1fa463c169e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11909:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12043:3:7",
														"nodeType": "YulTypedName",
														"src": "12043:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12051:3:7",
														"nodeType": "YulTypedName",
														"src": "12051:3:7",
														"type": ""
													}
												],
												"src": "11909:366:7"
											},
											{
												"body": {
													"nativeSrc": "12452:248:7",
													"nodeType": "YulBlock",
													"src": "12452:248:7",
													"statements": [
														{
															"nativeSrc": "12462:26:7",
															"nodeType": "YulAssignment",
															"src": "12462:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12474:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12474:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12485:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12485:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12470:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12470:3:7"
																},
																"nativeSrc": "12470:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12470:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12462:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12462:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12509:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12509:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12520:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12520:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12505:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12505:3:7"
																		},
																		"nativeSrc": "12505:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12505:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12528:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12528:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12534:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12534:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12524:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12524:3:7"
																		},
																		"nativeSrc": "12524:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12524:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12498:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12498:6:7"
																},
																"nativeSrc": "12498:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12498:47:7"
															},
															"nativeSrc": "12498:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12498:47:7"
														},
														{
															"nativeSrc": "12554:139:7",
															"nodeType": "YulAssignment",
															"src": "12554:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12688:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12688:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bd6e6be77339438fa1ce99e753eafbac0b165ee3cf81de39211cd1fa463c169e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12562:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12562:124:7"
																},
																"nativeSrc": "12562:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12562:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12554:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12554:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bd6e6be77339438fa1ce99e753eafbac0b165ee3cf81de39211cd1fa463c169e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12281:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12432:9:7",
														"nodeType": "YulTypedName",
														"src": "12432:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12447:4:7",
														"nodeType": "YulTypedName",
														"src": "12447:4:7",
														"type": ""
													}
												],
												"src": "12281:419:7"
											},
											{
												"body": {
													"nativeSrc": "12812:72:7",
													"nodeType": "YulBlock",
													"src": "12812:72:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12834:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12834:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12842:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12842:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12830:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12830:3:7"
																		},
																		"nativeSrc": "12830:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12830:14:7"
																	},
																	{
																		"hexValue": "4e6f20726566657272616c2072657761726420617661696c61626c65",
																		"kind": "string",
																		"nativeSrc": "12846:30:7",
																		"nodeType": "YulLiteral",
																		"src": "12846:30:7",
																		"type": "",
																		"value": "No referral reward available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12823:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12823:6:7"
																},
																"nativeSrc": "12823:54:7",
																"nodeType": "YulFunctionCall",
																"src": "12823:54:7"
															},
															"nativeSrc": "12823:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "12823:54:7"
														}
													]
												},
												"name": "store_literal_in_memory_a6986e5133152c912c18bdc61623271eec2e7f5b8b1ea755693ac6218ff7efb7",
												"nativeSrc": "12706:178:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12804:6:7",
														"nodeType": "YulTypedName",
														"src": "12804:6:7",
														"type": ""
													}
												],
												"src": "12706:178:7"
											},
											{
												"body": {
													"nativeSrc": "13036:220:7",
													"nodeType": "YulBlock",
													"src": "13036:220:7",
													"statements": [
														{
															"nativeSrc": "13046:74:7",
															"nodeType": "YulAssignment",
															"src": "13046:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13112:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13112:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13117:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13117:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13053:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13053:58:7"
																},
																"nativeSrc": "13053:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13053:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13046:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13046:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13218:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13218:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a6986e5133152c912c18bdc61623271eec2e7f5b8b1ea755693ac6218ff7efb7",
																	"nativeSrc": "13129:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13129:88:7"
																},
																"nativeSrc": "13129:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13129:93:7"
															},
															"nativeSrc": "13129:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13129:93:7"
														},
														{
															"nativeSrc": "13231:19:7",
															"nodeType": "YulAssignment",
															"src": "13231:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13242:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13242:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13247:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13247:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13238:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13238:3:7"
																},
																"nativeSrc": "13238:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13238:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13231:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13231:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a6986e5133152c912c18bdc61623271eec2e7f5b8b1ea755693ac6218ff7efb7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12890:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13024:3:7",
														"nodeType": "YulTypedName",
														"src": "13024:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13032:3:7",
														"nodeType": "YulTypedName",
														"src": "13032:3:7",
														"type": ""
													}
												],
												"src": "12890:366:7"
											},
											{
												"body": {
													"nativeSrc": "13433:248:7",
													"nodeType": "YulBlock",
													"src": "13433:248:7",
													"statements": [
														{
															"nativeSrc": "13443:26:7",
															"nodeType": "YulAssignment",
															"src": "13443:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13455:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13455:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13466:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13466:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13451:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13451:3:7"
																},
																"nativeSrc": "13451:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13451:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13443:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13443:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13490:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13490:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13501:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13501:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13486:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13486:3:7"
																		},
																		"nativeSrc": "13486:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13486:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13509:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13509:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13515:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13515:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13505:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13505:3:7"
																		},
																		"nativeSrc": "13505:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13505:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13479:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13479:6:7"
																},
																"nativeSrc": "13479:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13479:47:7"
															},
															"nativeSrc": "13479:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13479:47:7"
														},
														{
															"nativeSrc": "13535:139:7",
															"nodeType": "YulAssignment",
															"src": "13535:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13669:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13669:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a6986e5133152c912c18bdc61623271eec2e7f5b8b1ea755693ac6218ff7efb7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13543:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13543:124:7"
																},
																"nativeSrc": "13543:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13543:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13535:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13535:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6986e5133152c912c18bdc61623271eec2e7f5b8b1ea755693ac6218ff7efb7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13262:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13413:9:7",
														"nodeType": "YulTypedName",
														"src": "13413:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13428:4:7",
														"nodeType": "YulTypedName",
														"src": "13428:4:7",
														"type": ""
													}
												],
												"src": "13262:419:7"
											},
											{
												"body": {
													"nativeSrc": "13841:288:7",
													"nodeType": "YulBlock",
													"src": "13841:288:7",
													"statements": [
														{
															"nativeSrc": "13851:26:7",
															"nodeType": "YulAssignment",
															"src": "13851:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13863:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13863:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13874:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13874:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13859:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13859:3:7"
																},
																"nativeSrc": "13859:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13859:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13851:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13851:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13931:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13931:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13944:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13944:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13955:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13955:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13940:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13940:3:7"
																		},
																		"nativeSrc": "13940:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13940:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13887:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13887:43:7"
																},
																"nativeSrc": "13887:71:7",
																"nodeType": "YulFunctionCall",
																"src": "13887:71:7"
															},
															"nativeSrc": "13887:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "13887:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14012:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14012:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14025:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14025:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14036:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14036:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14021:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14021:3:7"
																		},
																		"nativeSrc": "14021:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14021:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13968:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13968:43:7"
																},
																"nativeSrc": "13968:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13968:72:7"
															},
															"nativeSrc": "13968:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13968:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14094:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14094:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14107:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14107:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14118:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14118:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14103:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14103:3:7"
																		},
																		"nativeSrc": "14103:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14103:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14050:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14050:43:7"
																},
																"nativeSrc": "14050:72:7",
																"nodeType": "YulFunctionCall",
																"src": "14050:72:7"
															},
															"nativeSrc": "14050:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "14050:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13687:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13797:9:7",
														"nodeType": "YulTypedName",
														"src": "13797:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13809:6:7",
														"nodeType": "YulTypedName",
														"src": "13809:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13817:6:7",
														"nodeType": "YulTypedName",
														"src": "13817:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13825:6:7",
														"nodeType": "YulTypedName",
														"src": "13825:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13836:4:7",
														"nodeType": "YulTypedName",
														"src": "13836:4:7",
														"type": ""
													}
												],
												"src": "13687:442:7"
											},
											{
												"body": {
													"nativeSrc": "14261:206:7",
													"nodeType": "YulBlock",
													"src": "14261:206:7",
													"statements": [
														{
															"nativeSrc": "14271:26:7",
															"nodeType": "YulAssignment",
															"src": "14271:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14283:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14283:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14294:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14294:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14279:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14279:3:7"
																},
																"nativeSrc": "14279:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14279:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14271:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14271:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14351:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14351:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14364:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14364:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14375:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14375:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14360:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14360:3:7"
																		},
																		"nativeSrc": "14360:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14360:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14307:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14307:43:7"
																},
																"nativeSrc": "14307:71:7",
																"nodeType": "YulFunctionCall",
																"src": "14307:71:7"
															},
															"nativeSrc": "14307:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "14307:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14432:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14432:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14445:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14445:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14456:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14456:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14441:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14441:3:7"
																		},
																		"nativeSrc": "14441:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14441:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14388:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14388:43:7"
																},
																"nativeSrc": "14388:72:7",
																"nodeType": "YulFunctionCall",
																"src": "14388:72:7"
															},
															"nativeSrc": "14388:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "14388:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14135:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14225:9:7",
														"nodeType": "YulTypedName",
														"src": "14225:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14237:6:7",
														"nodeType": "YulTypedName",
														"src": "14237:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14245:6:7",
														"nodeType": "YulTypedName",
														"src": "14245:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14256:4:7",
														"nodeType": "YulTypedName",
														"src": "14256:4:7",
														"type": ""
													}
												],
												"src": "14135:332:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$167_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$167_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$167__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d994444ac13ecaeeccca9b7f3363f0d6c486526e60d1c7d157dfc6b1a19e01ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stake amount out of range\")\n\n    }\n\n    function abi_encode_t_stringliteral_d994444ac13ecaeeccca9b7f3363f0d6c486526e60d1c7d157dfc6b1a19e01ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_d994444ac13ecaeeccca9b7f3363f0d6c486526e60d1c7d157dfc6b1a19e01ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d994444ac13ecaeeccca9b7f3363f0d6c486526e60d1c7d157dfc6b1a19e01ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d994444ac13ecaeeccca9b7f3363f0d6c486526e60d1c7d157dfc6b1a19e01ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2b4b5d23e1fe0bfa770424b0047417e5abbe574a8967435cd555c8f5bf89ab2f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Self referral not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_2b4b5d23e1fe0bfa770424b0047417e5abbe574a8967435cd555c8f5bf89ab2f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_2b4b5d23e1fe0bfa770424b0047417e5abbe574a8967435cd555c8f5bf89ab2f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2b4b5d23e1fe0bfa770424b0047417e5abbe574a8967435cd555c8f5bf89ab2f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2b4b5d23e1fe0bfa770424b0047417e5abbe574a8967435cd555c8f5bf89ab2f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_d3c7d8a55d308962a49d643398c1a7f771d32ab6a1c86998cd19cc63622632cf(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens available to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3c7d8a55d308962a49d643398c1a7f771d32ab6a1c86998cd19cc63622632cf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_d3c7d8a55d308962a49d643398c1a7f771d32ab6a1c86998cd19cc63622632cf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3c7d8a55d308962a49d643398c1a7f771d32ab6a1c86998cd19cc63622632cf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3c7d8a55d308962a49d643398c1a7f771d32ab6a1c86998cd19cc63622632cf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin can call this functio\")\n\n        mstore(add(memPtr, 32), \"n\")\n\n    }\n\n    function abi_encode_t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_afc7218b32e114ec965464013d43e9fc4a998fd4f9b9fceb167763aa8c319785(memPtr) {\n\n        mstore(add(memPtr, 0), \"No stakes found\")\n\n    }\n\n    function abi_encode_t_stringliteral_afc7218b32e114ec965464013d43e9fc4a998fd4f9b9fceb167763aa8c319785_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_afc7218b32e114ec965464013d43e9fc4a998fd4f9b9fceb167763aa8c319785(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_afc7218b32e114ec965464013d43e9fc4a998fd4f9b9fceb167763aa8c319785__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_afc7218b32e114ec965464013d43e9fc4a998fd4f9b9fceb167763aa8c319785_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bd6e6be77339438fa1ce99e753eafbac0b165ee3cf81de39211cd1fa463c169e(memPtr) {\n\n        mstore(add(memPtr, 0), \"No level income to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_bd6e6be77339438fa1ce99e753eafbac0b165ee3cf81de39211cd1fa463c169e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_bd6e6be77339438fa1ce99e753eafbac0b165ee3cf81de39211cd1fa463c169e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bd6e6be77339438fa1ce99e753eafbac0b165ee3cf81de39211cd1fa463c169e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bd6e6be77339438fa1ce99e753eafbac0b165ee3cf81de39211cd1fa463c169e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a6986e5133152c912c18bdc61623271eec2e7f5b8b1ea755693ac6218ff7efb7(memPtr) {\n\n        mstore(add(memPtr, 0), \"No referral reward available\")\n\n    }\n\n    function abi_encode_t_stringliteral_a6986e5133152c912c18bdc61623271eec2e7f5b8b1ea755693ac6218ff7efb7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_a6986e5133152c912c18bdc61623271eec2e7f5b8b1ea755693ac6218ff7efb7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a6986e5133152c912c18bdc61623271eec2e7f5b8b1ea755693ac6218ff7efb7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a6986e5133152c912c18bdc61623271eec2e7f5b8b1ea755693ac6218ff7efb7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100f3575f3560e01c806360f43fd2116100955780639b4b2c9c116100645780639b4b2c9c14610227578063aa03875e14610231578063e1ba51fb1461024f578063f851a44014610283576100f3565b806360f43fd2146101c35780637e2bc224146101cd5780638af6c259146101eb5780639b2cb5d814610209576100f3565b80635312ea8e116100d15780635312ea8e1461013b57806353aaa63b146101575780635e9d2f90146101875780635f48f393146101a5576100f3565b806313d033c0146100f757806317be3fa51461011557806348c54b9d14610131575b5f80fd5b6100ff6102a1565b60405161010c9190611115565b60405180910390f35b61012f600480360381019061012a91906111b6565b6102a8565b005b610139610606565b005b610155600480360381019061015091906111f4565b610877565b005b610171600480360381019061016c919061121f565b6109e3565b60405161017e9190611115565b60405180910390f35b61018f6109f8565b60405161019c9190611265565b60405180910390f35b6101ad6109fd565b6040516101ba9190611115565b60405180910390f35b6101cb610a03565b005b6101d5610bb4565b6040516101e29190611115565b60405180910390f35b6101f3610bb9565b6040516102009190611115565b60405180910390f35b610211610bc1565b60405161021e9190611115565b60405180910390f35b61022f610bc6565b005b610239610d26565b60405161024691906112d9565b60405180910390f35b610269600480360381019061026491906111b6565b610d49565b60405161027a959493929190611301565b60405180910390f35b61028b610db4565b6040516102989190611352565b60405180910390f35b624f1a0081565b606481101580156102bb57506127108111155b6102fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f1906113c5565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035f9061142d565b60405180910390fd5b6103b43330835f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610dd9909392919063ffffffff16565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146104a6575f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f818054905011156104a4575f60646005846104439190611478565b61044d91906114e6565b90508060035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461049b9190611516565b92505081905550505b505b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060a001604052808381526020014281526020015f81526020015f81526020018473ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050503373ffffffffffffffffffffffffffffffffffffffff167ff9626bca62c59d77fa45a204dc096874ee066a5c5e124aa9ce6c438dbdf7387a826040516105fa9190611115565b60405180910390a25050565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f805f90505b8280549050811015610798575f83828154811061066c5761066b611549565b5b905f5260205f2090600502019050624f1a00816001015461068d9190611516565b42101561069a575061078b565b5f8160010154426106ab9190611576565b90506301e133808111156106c1576301e1338090505b5f624f1a00826106d19190611576565b90505f62278d00826106e391906114e6565b90505f606482600a875f01546106f99190611478565b6107039190611478565b61070d91906114e6565b90508460020154811115610785575f85600201548261072c9190611576565b905080866002015f8282546107419190611516565b9250508190555080886107549190611516565b9750610783866004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682610e5b565b505b50505050505b808060010191505061064c565b505f81116107db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d2906115f3565b60405180910390fd5b61082533825f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fe39092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e4308260405161086b9190611115565b60405180910390a25050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd90611681565b60405180910390fd5b61097160015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16825f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fe39092919063ffffffff16565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695826040516109d89190611115565b60405180910390a250565b6003602052805f5260405f205f915090505481565b600381565b61271081565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f818054905011610a89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a80906116e9565b60405180910390fd5b5f815f81548110610a9d57610a9c611549565b5b905f5260205f2090600502016003015490505f8111610af1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae890611751565b60405180910390fd5b5f825f81548110610b0557610b04611549565b5b905f5260205f20906005020160030181905550610b6233825f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fe39092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f8830fd27a530b5f90e62adf0b2d34e36b25aa4f956359df6db4bcdec067f75b182604051610ba89190611115565b60405180910390a25050565b600581565b6301e1338081565b606481565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610c49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c40906117b9565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610cd533825f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fe39092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f5be4d22009fea85381595ed91090bc5c0bc92a93fe07ed7472c5888eb1993f8382604051610d1b9190611115565b60405180910390a250565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052815f5260405f208181548110610d62575f80fd5b905f5260205f2090600502015f9150915050805f015490806001015490806002015490806003015490806004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e55848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610e0e939291906117d7565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611062565b50505050565b5f6040518060600160405280600f60ff168152602001600a60ff168152602001600560ff1681525090505f8390505f5b600360ff16811015610fdc575f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160315610fdc575f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f818054905003610f1c5750610fdc565b5f6064858460038110610f3257610f31611549565b5b602002015160ff1687610f459190611478565b610f4f91906114e6565b905080825f81548110610f6557610f64611549565b5b905f5260205f2090600502016003015f828254610f829190611516565b92505081905550815f81548110610f9c57610f9b611549565b5b905f5260205f2090600502016004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16935050508080600101915050610e8b565b5050505050565b61105d838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161101692919061180c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611062565b505050565b5f8060205f8451602086015f885af180611081576040513d5f823e3d81fd5b3d92505f519150505f821461109a5760018114156110b5565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156110f757836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016110ee9190611352565b60405180910390fd5b50505050565b5f819050919050565b61110f816110fd565b82525050565b5f6020820190506111285f830184611106565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61115b82611132565b9050919050565b61116b81611151565b8114611175575f80fd5b50565b5f8135905061118681611162565b92915050565b611195816110fd565b811461119f575f80fd5b50565b5f813590506111b08161118c565b92915050565b5f80604083850312156111cc576111cb61112e565b5b5f6111d985828601611178565b92505060206111ea858286016111a2565b9150509250929050565b5f602082840312156112095761120861112e565b5b5f611216848285016111a2565b91505092915050565b5f602082840312156112345761123361112e565b5b5f61124184828501611178565b91505092915050565b5f60ff82169050919050565b61125f8161124a565b82525050565b5f6020820190506112785f830184611256565b92915050565b5f819050919050565b5f6112a161129c61129784611132565b61127e565b611132565b9050919050565b5f6112b282611287565b9050919050565b5f6112c3826112a8565b9050919050565b6112d3816112b9565b82525050565b5f6020820190506112ec5f8301846112ca565b92915050565b6112fb81611151565b82525050565b5f60a0820190506113145f830188611106565b6113216020830187611106565b61132e6040830186611106565b61133b6060830185611106565b61134860808301846112f2565b9695505050505050565b5f6020820190506113655f8301846112f2565b92915050565b5f82825260208201905092915050565b7f5374616b6520616d6f756e74206f7574206f662072616e6765000000000000005f82015250565b5f6113af60198361136b565b91506113ba8261137b565b602082019050919050565b5f6020820190508181035f8301526113dc816113a3565b9050919050565b7f53656c6620726566657272616c206e6f7420616c6c6f776564000000000000005f82015250565b5f61141760198361136b565b9150611422826113e3565b602082019050919050565b5f6020820190508181035f8301526114448161140b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611482826110fd565b915061148d836110fd565b925082820261149b816110fd565b915082820484148315176114b2576114b161144b565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6114f0826110fd565b91506114fb836110fd565b92508261150b5761150a6114b9565b5b828204905092915050565b5f611520826110fd565b915061152b836110fd565b92508282019050808211156115435761154261144b565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611580826110fd565b915061158b836110fd565b92508282039050818111156115a3576115a261144b565b5b92915050565b7f4e6f20746f6b656e7320617661696c61626c6520746f20636c61696d000000005f82015250565b5f6115dd601c8361136b565b91506115e8826115a9565b602082019050919050565b5f6020820190508181035f83015261160a816115d1565b9050919050565b7f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f61166b60218361136b565b915061167682611611565b604082019050919050565b5f6020820190508181035f8301526116988161165f565b9050919050565b7f4e6f207374616b657320666f756e6400000000000000000000000000000000005f82015250565b5f6116d3600f8361136b565b91506116de8261169f565b602082019050919050565b5f6020820190508181035f830152611700816116c7565b9050919050565b7f4e6f206c6576656c20696e636f6d6520746f20636c61696d00000000000000005f82015250565b5f61173b60188361136b565b915061174682611707565b602082019050919050565b5f6020820190508181035f8301526117688161172f565b9050919050565b7f4e6f20726566657272616c2072657761726420617661696c61626c65000000005f82015250565b5f6117a3601c8361136b565b91506117ae8261176f565b602082019050919050565b5f6020820190508181035f8301526117d081611797565b9050919050565b5f6060820190506117ea5f8301866112f2565b6117f760208301856112f2565b6118046040830184611106565b949350505050565b5f60408201905061181f5f8301856112f2565b61182c6020830184611106565b939250505056fea26469706673582212204b412252bdf208e52d79d66c28d09ac283da7130a0753fd725ebdd08ef642bed64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60F43FD2 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x9B4B2C9C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9B4B2C9C EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xAA03875E EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xE1BA51FB EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x283 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x60F43FD2 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x7E2BC224 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x8AF6C259 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x9B2CB5D8 EQ PUSH2 0x209 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x5312EA8E GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x53AAA63B EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x5E9D2F90 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x5F48F393 EQ PUSH2 0x1A5 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x13D033C0 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x17BE3FA5 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x48C54B9D EQ PUSH2 0x131 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH2 0x606 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0x877 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH2 0xA03 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH2 0xBC6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH2 0xD26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x12D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x4F1A00 DUP2 JUMP JUMPDEST PUSH1 0x64 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x2BB JUMPI POP PUSH2 0x2710 DUP2 GT ISZERO JUMPDEST PUSH2 0x2FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F1 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x368 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3B4 CALLER ADDRESS DUP4 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDD9 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A6 JUMPI PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 DUP1 SLOAD SWAP1 POP GT ISZERO PUSH2 0x4A4 JUMPI PUSH0 PUSH1 0x64 PUSH1 0x5 DUP5 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x14E6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF9626BCA62C59D77FA45A204DC096874EE066A5C5E124AA9CE6C438DBDF7387A DUP3 PUSH1 0x40 MLOAD PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST DUP3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x798 JUMPI PUSH0 DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x66C JUMPI PUSH2 0x66B PUSH2 0x1549 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH3 0x4F1A00 DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0x68D SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x69A JUMPI POP PUSH2 0x78B JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST SWAP1 POP PUSH4 0x1E13380 DUP2 GT ISZERO PUSH2 0x6C1 JUMPI PUSH4 0x1E13380 SWAP1 POP JUMPDEST PUSH0 PUSH3 0x4F1A00 DUP3 PUSH2 0x6D1 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH3 0x278D00 DUP3 PUSH2 0x6E3 SWAP2 SWAP1 PUSH2 0x14E6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 DUP3 PUSH1 0xA DUP8 PUSH0 ADD SLOAD PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x703 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0x70D SWAP2 SWAP1 PUSH2 0x14E6 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x2 ADD SLOAD DUP2 GT ISZERO PUSH2 0x785 JUMPI PUSH0 DUP6 PUSH1 0x2 ADD SLOAD DUP3 PUSH2 0x72C SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP9 PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST SWAP8 POP PUSH2 0x783 DUP7 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0xE5B JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x64C JUMP JUMPDEST POP PUSH0 DUP2 GT PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x825 CALLER DUP3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFE3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 DUP3 PUSH1 0x40 MLOAD PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x906 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x1681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x971 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFE3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695 DUP3 PUSH1 0x40 MLOAD PUSH2 0x9D8 SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 DUP1 SLOAD SWAP1 POP GT PUSH2 0xA89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA80 SWAP1 PUSH2 0x16E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH0 DUP2 SLOAD DUP2 LT PUSH2 0xA9D JUMPI PUSH2 0xA9C PUSH2 0x1549 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xAF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE8 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH0 DUP2 SLOAD DUP2 LT PUSH2 0xB05 JUMPI PUSH2 0xB04 PUSH2 0x1549 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xB62 CALLER DUP3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFE3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8830FD27A530B5F90E62ADF0B2D34E36B25AA4F956359DF6DB4BCDEC067F75B1 DUP3 PUSH1 0x40 MLOAD PUSH2 0xBA8 SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xC49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC40 SWAP1 PUSH2 0x17B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCD5 CALLER DUP3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFE3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5BE4D22009FEA85381595ED91090BC5C0BC92A93FE07ED7472C5888EB1993F83 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD1B SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD62 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE55 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE0E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1062 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 DUP4 SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0xFDC JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB ISZERO PUSH2 0xFDC JUMPI PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 DUP1 SLOAD SWAP1 POP SUB PUSH2 0xF1C JUMPI POP PUSH2 0xFDC JUMP JUMPDEST PUSH0 PUSH1 0x64 DUP6 DUP5 PUSH1 0x3 DUP2 LT PUSH2 0xF32 JUMPI PUSH2 0xF31 PUSH2 0x1549 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0xFF AND DUP8 PUSH2 0xF45 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH2 0xF4F SWAP2 SWAP1 PUSH2 0x14E6 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH0 DUP2 SLOAD DUP2 LT PUSH2 0xF65 JUMPI PUSH2 0xF64 PUSH2 0x1549 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF82 SWAP2 SWAP1 PUSH2 0x1516 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH0 DUP2 SLOAD DUP2 LT PUSH2 0xF9C JUMPI PUSH2 0xF9B PUSH2 0x1549 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE8B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x105D DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1016 SWAP3 SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1062 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1081 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x109A JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x10B5 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x10F7 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EE SWAP2 SWAP1 PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x110F DUP2 PUSH2 0x10FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1128 PUSH0 DUP4 ADD DUP5 PUSH2 0x1106 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x115B DUP3 PUSH2 0x1132 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x116B DUP2 PUSH2 0x1151 JUMP JUMPDEST DUP2 EQ PUSH2 0x1175 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1186 DUP2 PUSH2 0x1162 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1195 DUP2 PUSH2 0x10FD JUMP JUMPDEST DUP2 EQ PUSH2 0x119F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11B0 DUP2 PUSH2 0x118C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11CC JUMPI PUSH2 0x11CB PUSH2 0x112E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11D9 DUP6 DUP3 DUP7 ADD PUSH2 0x1178 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11EA DUP6 DUP3 DUP7 ADD PUSH2 0x11A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1209 JUMPI PUSH2 0x1208 PUSH2 0x112E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1216 DUP5 DUP3 DUP6 ADD PUSH2 0x11A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1234 JUMPI PUSH2 0x1233 PUSH2 0x112E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1241 DUP5 DUP3 DUP6 ADD PUSH2 0x1178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x125F DUP2 PUSH2 0x124A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1278 PUSH0 DUP4 ADD DUP5 PUSH2 0x1256 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12A1 PUSH2 0x129C PUSH2 0x1297 DUP5 PUSH2 0x1132 JUMP JUMPDEST PUSH2 0x127E JUMP JUMPDEST PUSH2 0x1132 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12B2 DUP3 PUSH2 0x1287 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12C3 DUP3 PUSH2 0x12A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D3 DUP2 PUSH2 0x12B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12EC PUSH0 DUP4 ADD DUP5 PUSH2 0x12CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12FB DUP2 PUSH2 0x1151 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1314 PUSH0 DUP4 ADD DUP9 PUSH2 0x1106 JUMP JUMPDEST PUSH2 0x1321 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1106 JUMP JUMPDEST PUSH2 0x132E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1106 JUMP JUMPDEST PUSH2 0x133B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1106 JUMP JUMPDEST PUSH2 0x1348 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x12F2 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1365 PUSH0 DUP4 ADD DUP5 PUSH2 0x12F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B6520616D6F756E74206F7574206F662072616E676500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13AF PUSH1 0x19 DUP4 PUSH2 0x136B JUMP JUMPDEST SWAP2 POP PUSH2 0x13BA DUP3 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13DC DUP2 PUSH2 0x13A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656C6620726566657272616C206E6F7420616C6C6F77656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1417 PUSH1 0x19 DUP4 PUSH2 0x136B JUMP JUMPDEST SWAP2 POP PUSH2 0x1422 DUP3 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1444 DUP2 PUSH2 0x140B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1482 DUP3 PUSH2 0x10FD JUMP JUMPDEST SWAP2 POP PUSH2 0x148D DUP4 PUSH2 0x10FD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x149B DUP2 PUSH2 0x10FD JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x14B2 JUMPI PUSH2 0x14B1 PUSH2 0x144B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x14F0 DUP3 PUSH2 0x10FD JUMP JUMPDEST SWAP2 POP PUSH2 0x14FB DUP4 PUSH2 0x10FD JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x150B JUMPI PUSH2 0x150A PUSH2 0x14B9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1520 DUP3 PUSH2 0x10FD JUMP JUMPDEST SWAP2 POP PUSH2 0x152B DUP4 PUSH2 0x10FD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1543 JUMPI PUSH2 0x1542 PUSH2 0x144B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1580 DUP3 PUSH2 0x10FD JUMP JUMPDEST SWAP2 POP PUSH2 0x158B DUP4 PUSH2 0x10FD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x15A3 JUMPI PUSH2 0x15A2 PUSH2 0x144B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320617661696C61626C6520746F20636C61696D00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15DD PUSH1 0x1C DUP4 PUSH2 0x136B JUMP JUMPDEST SWAP2 POP PUSH2 0x15E8 DUP3 PUSH2 0x15A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x160A DUP2 PUSH2 0x15D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x166B PUSH1 0x21 DUP4 PUSH2 0x136B JUMP JUMPDEST SWAP2 POP PUSH2 0x1676 DUP3 PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1698 DUP2 PUSH2 0x165F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207374616B657320666F756E640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16D3 PUSH1 0xF DUP4 PUSH2 0x136B JUMP JUMPDEST SWAP2 POP PUSH2 0x16DE DUP3 PUSH2 0x169F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1700 DUP2 PUSH2 0x16C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206C6576656C20696E636F6D6520746F20636C61696D0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x173B PUSH1 0x18 DUP4 PUSH2 0x136B JUMP JUMPDEST SWAP2 POP PUSH2 0x1746 DUP3 PUSH2 0x1707 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1768 DUP2 PUSH2 0x172F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20726566657272616C2072657761726420617661696C61626C6500000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17A3 PUSH1 0x1C DUP4 PUSH2 0x136B JUMP JUMPDEST SWAP2 POP PUSH2 0x17AE DUP3 PUSH2 0x176F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17D0 DUP2 PUSH2 0x1797 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17EA PUSH0 DUP4 ADD DUP7 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x17F7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x1804 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1106 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x181F PUSH0 DUP4 ADD DUP6 PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x182C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1106 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B COINBASE 0x22 MSTORE 0xBD CALLCODE ADDMOD 0xE5 0x2D PUSH26 0xD66C28D09AC283DA7130A0753FD725EBDD08EF642BED64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "199:4864:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;312:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1624:1007;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2639:1093;;;:::i;:::-;;1455:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1168:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;560:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;413:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4652:408;;;:::i;:::-;;507:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;358:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;461:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:312;;;:::i;:::-;;258:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1112:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;283:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;312:39;344:7;312:39;:::o;1624:1007::-;497:3;1713:11;:24;;:52;;;;;449:5;1741:11;:24;;1713:52;1705:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;1829:10;1814:25;;:11;:25;;;1806:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1919:61;1941:10;1961:4;1968:11;1919:4;;;;;;;;;;:21;;;;:61;;;;;;:::i;:::-;2048:1;2025:25;;:11;:25;;;2021:316;;2067:23;2093:15;:28;2109:11;2093:28;;;;;;;;;;;;;;;2067:54;;2158:1;2140:8;:15;;;;:19;2136:190;;;2180:22;2242:3;552:1;2206:11;:32;;;;:::i;:::-;2205:40;;;;:::i;:::-;2180:65;;2296:14;2264:15;:28;2280:11;2264:28;;;;;;;;;;;;;;;;:46;;;;;;;:::i;:::-;;;;;;;;2161:165;2136:190;2052:285;2021:316;2349:15;:27;2365:10;2349:27;;;;;;;;;;;;;;;2382:186;;;;;;;;2414:11;2382:186;;;;2447:15;2382:186;;;;2490:1;2382:186;;;;2519:1;2382:186;;;;2545:11;2382:186;;;;;2349:220;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2599:10;2587:36;;;2611:11;2587:36;;;;;;:::i;:::-;;;;;;;;1624:1007;;:::o;2639:1093::-;2682:20;2705:15;:27;2721:10;2705:27;;;;;;;;;;;;;;;2682:50;;2743:22;2783:6;2792:1;2783:10;;2778:762;2799:5;:12;;;;2795:1;:16;2778:762;;;2833:14;2850:5;2856:1;2850:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2833:25;;344:7;2895:1;:7;;;:15;;;;:::i;:::-;2877;:33;2873:47;;;2912:8;;;2873:47;2937:18;2976:1;:7;;;2958:15;:25;;;;:::i;:::-;2937:46;;398:8;3002:10;:26;2998:58;;;398:8;3030:26;;2998:58;3073:19;344:7;3095:10;:18;;;;:::i;:::-;3073:40;;3128:19;3164:7;3150:11;:21;;;;:::i;:::-;3128:43;;3186:19;3244:3;3229:11;3224:2;3209:1;:12;;;:17;;;;:::i;:::-;:31;;;;:::i;:::-;3208:39;;;;:::i;:::-;3186:61;;3282:1;:13;;;3268:11;:27;3264:265;;;3316:17;3350:1;:13;;;3336:11;:27;;;;:::i;:::-;3316:47;;3399:9;3382:1;:13;;;:26;;;;;;;:::i;:::-;;;;;;;;3445:9;3427:27;;;;;:::i;:::-;;;3475:38;3491:1;:10;;;;;;;;;;;;3503:9;3475:15;:38::i;:::-;3297:232;3264:265;2818:722;;;;;2778:762;2813:3;;;;;;;2778:762;;;;3577:1;3560:14;:18;3552:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3622:45;3640:10;3652:14;3622:4;;;;;;;;;;:17;;;;:45;;;;;:::i;:::-;3697:10;3683:41;;;3709:14;3683:41;;;;;;:::i;:::-;;;;;;;;2671:1061;;2639:1093::o;1455:161::-;1384:5;;;;;;;;;;;1370:19;;:10;:19;;;1362:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1528:32:::1;1546:5;;;;;;;;;;;1553:6;1528:4;::::0;::::1;;;;;;;;:17;;;;:32;;;;;:::i;:::-;1594:5;;;;;;;;;;;1576:32;;;1601:6;1576:32;;;;;;:::i;:::-;;;;;;;;1455:161:::0;:::o;1168:50::-;;;;;;;;;;;;;;;;;:::o;560:37::-;596:1;560:37;:::o;413:41::-;449:5;413:41;:::o;4652:408::-;4700:20;4723:15;:27;4739:10;4723:27;;;;;;;;;;;;;;;4700:50;;4784:1;4769:5;:12;;;;:16;4761:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;4818:14;4835:5;4841:1;4835:8;;;;;;;;:::i;:::-;;;;;;;;;;;;:20;;;4818:37;;4883:1;4874:6;:10;4866:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;4949:1;4926:5;4932:1;4926:8;;;;;;;;:::i;:::-;;;;;;;;;;;;:20;;:24;;;;4961:37;4979:10;4991:6;4961:4;;;;;;;;;;:17;;;;:37;;;;;:::i;:::-;5033:10;5014:38;;;5045:6;5014:38;;;;;;:::i;:::-;;;;;;;;4689:371;;4652:408::o;507:46::-;552:1;507:46;:::o;358:48::-;398:8;358:48;:::o;461:39::-;497:3;461:39;:::o;3740:312::-;3791:14;3808:15;:27;3824:10;3808:27;;;;;;;;;;;;;;;;3791:44;;3863:1;3854:6;:10;3846:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;3938:1;3908:15;:27;3924:10;3908:27;;;;;;;;;;;;;;;:31;;;;3950:37;3968:10;3980:6;3950:4;;;;;;;;;;:17;;;;:37;;;;;:::i;:::-;4025:10;4003:41;;;4037:6;4003:41;;;;;;:::i;:::-;;;;;;;;3780:272;3740:312::o;258:18::-;;;;;;;;;;;;:::o;1112:49::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;283:20::-;;;;;;;;;;;;;:::o;1618:188:4:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;4060:584:6:-;4148:31;:45;;;;;;;;4183:2;4148:45;;;;;;4187:2;4148:45;;;;;;4191:1;4148:45;;;;;;;4204:18;4225:11;4204:32;;4254:6;4249:388;596:1;4266:15;;:1;:15;4249:388;;;4329:1;4307:24;;:10;:24;;;4303:35;4333:5;4303:35;4355:23;4381:15;:27;4397:10;4381:27;;;;;;;;;;;;;;;4355:53;;4446:1;4427:8;:15;;;;:20;4423:31;;4449:5;;;4423:31;4471:14;4526:3;4504:15;4520:1;4504:18;;;;;;;:::i;:::-;;;;;;4489:33;;:12;:33;;;;:::i;:::-;4488:41;;;;:::i;:::-;4471:58;;4571:6;4544:8;4553:1;4544:11;;;;;;;;:::i;:::-;;;;;;;;;;;;:23;;;:33;;;;;;;:::i;:::-;;;;;;;;4605:8;4614:1;4605:11;;;;;;;;:::i;:::-;;;;;;;;;;;;:20;;;;;;;;;;;;4592:33;;4288:349;;4283:3;;;;;;;4249:388;;;;4137:507;;4060:584;;:::o;1219:160:4:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;7:77:7:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:474::-;1617:6;1625;1674:2;1662:9;1653:7;1649:23;1645:32;1642:119;;;1680:79;;:::i;:::-;1642:119;1800:1;1825:53;1870:7;1861:6;1850:9;1846:22;1825:53;:::i;:::-;1815:63;;1771:117;1927:2;1953:53;1998:7;1989:6;1978:9;1974:22;1953:53;:::i;:::-;1943:63;;1898:118;1549:474;;;;;:::o;2029:329::-;2088:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:119;;;2143:79;;:::i;:::-;2105:119;2263:1;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2234:117;2029:329;;;;:::o;2364:::-;2423:6;2472:2;2460:9;2451:7;2447:23;2443:32;2440:119;;;2478:79;;:::i;:::-;2440:119;2598:1;2623:53;2668:7;2659:6;2648:9;2644:22;2623:53;:::i;:::-;2613:63;;2569:117;2364:329;;;;:::o;2699:86::-;2734:7;2774:4;2767:5;2763:16;2752:27;;2699:86;;;:::o;2791:112::-;2874:22;2890:5;2874:22;:::i;:::-;2869:3;2862:35;2791:112;;:::o;2909:214::-;2998:4;3036:2;3025:9;3021:18;3013:26;;3049:67;3113:1;3102:9;3098:17;3089:6;3049:67;:::i;:::-;2909:214;;;;:::o;3129:60::-;3157:3;3178:5;3171:12;;3129:60;;;:::o;3195:142::-;3245:9;3278:53;3296:34;3305:24;3323:5;3305:24;:::i;:::-;3296:34;:::i;:::-;3278:53;:::i;:::-;3265:66;;3195:142;;;:::o;3343:126::-;3393:9;3426:37;3457:5;3426:37;:::i;:::-;3413:50;;3343:126;;;:::o;3475:140::-;3539:9;3572:37;3603:5;3572:37;:::i;:::-;3559:50;;3475:140;;;:::o;3621:159::-;3722:51;3767:5;3722:51;:::i;:::-;3717:3;3710:64;3621:159;;:::o;3786:250::-;3893:4;3931:2;3920:9;3916:18;3908:26;;3944:85;4026:1;4015:9;4011:17;4002:6;3944:85;:::i;:::-;3786:250;;;;:::o;4042:118::-;4129:24;4147:5;4129:24;:::i;:::-;4124:3;4117:37;4042:118;;:::o;4166:664::-;4371:4;4409:3;4398:9;4394:19;4386:27;;4423:71;4491:1;4480:9;4476:17;4467:6;4423:71;:::i;:::-;4504:72;4572:2;4561:9;4557:18;4548:6;4504:72;:::i;:::-;4586;4654:2;4643:9;4639:18;4630:6;4586:72;:::i;:::-;4668;4736:2;4725:9;4721:18;4712:6;4668:72;:::i;:::-;4750:73;4818:3;4807:9;4803:19;4794:6;4750:73;:::i;:::-;4166:664;;;;;;;;:::o;4836:222::-;4929:4;4967:2;4956:9;4952:18;4944:26;;4980:71;5048:1;5037:9;5033:17;5024:6;4980:71;:::i;:::-;4836:222;;;;:::o;5064:169::-;5148:11;5182:6;5177:3;5170:19;5222:4;5217:3;5213:14;5198:29;;5064:169;;;;:::o;5239:175::-;5379:27;5375:1;5367:6;5363:14;5356:51;5239:175;:::o;5420:366::-;5562:3;5583:67;5647:2;5642:3;5583:67;:::i;:::-;5576:74;;5659:93;5748:3;5659:93;:::i;:::-;5777:2;5772:3;5768:12;5761:19;;5420:366;;;:::o;5792:419::-;5958:4;5996:2;5985:9;5981:18;5973:26;;6045:9;6039:4;6035:20;6031:1;6020:9;6016:17;6009:47;6073:131;6199:4;6073:131;:::i;:::-;6065:139;;5792:419;;;:::o;6217:175::-;6357:27;6353:1;6345:6;6341:14;6334:51;6217:175;:::o;6398:366::-;6540:3;6561:67;6625:2;6620:3;6561:67;:::i;:::-;6554:74;;6637:93;6726:3;6637:93;:::i;:::-;6755:2;6750:3;6746:12;6739:19;;6398:366;;;:::o;6770:419::-;6936:4;6974:2;6963:9;6959:18;6951:26;;7023:9;7017:4;7013:20;7009:1;6998:9;6994:17;6987:47;7051:131;7177:4;7051:131;:::i;:::-;7043:139;;6770:419;;;:::o;7195:180::-;7243:77;7240:1;7233:88;7340:4;7337:1;7330:15;7364:4;7361:1;7354:15;7381:410;7421:7;7444:20;7462:1;7444:20;:::i;:::-;7439:25;;7478:20;7496:1;7478:20;:::i;:::-;7473:25;;7533:1;7530;7526:9;7555:30;7573:11;7555:30;:::i;:::-;7544:41;;7734:1;7725:7;7721:15;7718:1;7715:22;7695:1;7688:9;7668:83;7645:139;;7764:18;;:::i;:::-;7645:139;7429:362;7381:410;;;;:::o;7797:180::-;7845:77;7842:1;7835:88;7942:4;7939:1;7932:15;7966:4;7963:1;7956:15;7983:185;8023:1;8040:20;8058:1;8040:20;:::i;:::-;8035:25;;8074:20;8092:1;8074:20;:::i;:::-;8069:25;;8113:1;8103:35;;8118:18;;:::i;:::-;8103:35;8160:1;8157;8153:9;8148:14;;7983:185;;;;:::o;8174:191::-;8214:3;8233:20;8251:1;8233:20;:::i;:::-;8228:25;;8267:20;8285:1;8267:20;:::i;:::-;8262:25;;8310:1;8307;8303:9;8296:16;;8331:3;8328:1;8325:10;8322:36;;;8338:18;;:::i;:::-;8322:36;8174:191;;;;:::o;8371:180::-;8419:77;8416:1;8409:88;8516:4;8513:1;8506:15;8540:4;8537:1;8530:15;8557:194;8597:4;8617:20;8635:1;8617:20;:::i;:::-;8612:25;;8651:20;8669:1;8651:20;:::i;:::-;8646:25;;8695:1;8692;8688:9;8680:17;;8719:1;8713:4;8710:11;8707:37;;;8724:18;;:::i;:::-;8707:37;8557:194;;;;:::o;8757:178::-;8897:30;8893:1;8885:6;8881:14;8874:54;8757:178;:::o;8941:366::-;9083:3;9104:67;9168:2;9163:3;9104:67;:::i;:::-;9097:74;;9180:93;9269:3;9180:93;:::i;:::-;9298:2;9293:3;9289:12;9282:19;;8941:366;;;:::o;9313:419::-;9479:4;9517:2;9506:9;9502:18;9494:26;;9566:9;9560:4;9556:20;9552:1;9541:9;9537:17;9530:47;9594:131;9720:4;9594:131;:::i;:::-;9586:139;;9313:419;;;:::o;9738:220::-;9878:34;9874:1;9866:6;9862:14;9855:58;9947:3;9942:2;9934:6;9930:15;9923:28;9738:220;:::o;9964:366::-;10106:3;10127:67;10191:2;10186:3;10127:67;:::i;:::-;10120:74;;10203:93;10292:3;10203:93;:::i;:::-;10321:2;10316:3;10312:12;10305:19;;9964:366;;;:::o;10336:419::-;10502:4;10540:2;10529:9;10525:18;10517:26;;10589:9;10583:4;10579:20;10575:1;10564:9;10560:17;10553:47;10617:131;10743:4;10617:131;:::i;:::-;10609:139;;10336:419;;;:::o;10761:165::-;10901:17;10897:1;10889:6;10885:14;10878:41;10761:165;:::o;10932:366::-;11074:3;11095:67;11159:2;11154:3;11095:67;:::i;:::-;11088:74;;11171:93;11260:3;11171:93;:::i;:::-;11289:2;11284:3;11280:12;11273:19;;10932:366;;;:::o;11304:419::-;11470:4;11508:2;11497:9;11493:18;11485:26;;11557:9;11551:4;11547:20;11543:1;11532:9;11528:17;11521:47;11585:131;11711:4;11585:131;:::i;:::-;11577:139;;11304:419;;;:::o;11729:174::-;11869:26;11865:1;11857:6;11853:14;11846:50;11729:174;:::o;11909:366::-;12051:3;12072:67;12136:2;12131:3;12072:67;:::i;:::-;12065:74;;12148:93;12237:3;12148:93;:::i;:::-;12266:2;12261:3;12257:12;12250:19;;11909:366;;;:::o;12281:419::-;12447:4;12485:2;12474:9;12470:18;12462:26;;12534:9;12528:4;12524:20;12520:1;12509:9;12505:17;12498:47;12562:131;12688:4;12562:131;:::i;:::-;12554:139;;12281:419;;;:::o;12706:178::-;12846:30;12842:1;12834:6;12830:14;12823:54;12706:178;:::o;12890:366::-;13032:3;13053:67;13117:2;13112:3;13053:67;:::i;:::-;13046:74;;13129:93;13218:3;13129:93;:::i;:::-;13247:2;13242:3;13238:12;13231:19;;12890:366;;;:::o;13262:419::-;13428:4;13466:2;13455:9;13451:18;13443:26;;13515:9;13509:4;13505:20;13501:1;13490:9;13486:17;13479:47;13543:131;13669:4;13543:131;:::i;:::-;13535:139;;13262:419;;;:::o;13687:442::-;13836:4;13874:2;13863:9;13859:18;13851:26;;13887:71;13955:1;13944:9;13940:17;13931:6;13887:71;:::i;:::-;13968:72;14036:2;14025:9;14021:18;14012:6;13968:72;:::i;:::-;14050;14118:2;14107:9;14103:18;14094:6;14050:72;:::i;:::-;13687:442;;;;;;:::o;14135:332::-;14256:4;14294:2;14283:9;14279:18;14271:26;;14307:71;14375:1;14364:9;14360:17;14351:6;14307:71;:::i;:::-;14388:72;14456:2;14445:9;14441:18;14432:6;14388:72;:::i;:::-;14135:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1249800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ReferralPercentage()": "370",
								"admin()": "2596",
								"allStakeDetails(address,uint256)": "infinite",
								"claimLevelIncome()": "infinite",
								"claimReferralReward()": "infinite",
								"claimTokens()": "infinite",
								"cliff()": "349",
								"emergencyWithdraw(uint256)": "infinite",
								"globalLevel()": "398",
								"lockToken(address,uint256)": "infinite",
								"maxAmount()": "414",
								"minAmount()": "414",
								"nlnt()": "infinite",
								"referralRewards(address)": "2847",
								"totalDuration()": "392"
							},
							"internal": {
								"distributeLevel(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 199,
									"end": 5063,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 199,
									"end": 5063,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 199,
									"end": 5063,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1227,
									"end": 1322,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1279,
									"end": 1284,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1265,
									"end": 1269,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 1269,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1265,
									"end": 1285,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1265,
									"end": 1285,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1265,
									"end": 1285,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1265,
									"end": 1285,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1265,
									"end": 1285,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1265,
									"end": 1285,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1265,
									"end": 1285,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1265,
									"end": 1285,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1265,
									"end": 1285,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1265,
									"end": 1285,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1265,
									"end": 1285,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1265,
									"end": 1285,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1265,
									"end": 1285,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1265,
									"end": 1285,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1265,
									"end": 1285,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1265,
									"end": 1285,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1265,
									"end": 1285,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1265,
									"end": 1285,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1304,
									"end": 1314,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1301,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1296,
									"end": 1301,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1296,
									"end": 1314,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1296,
									"end": 1314,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1314,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1314,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1314,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1314,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1296,
									"end": 1314,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1314,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1314,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1314,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1314,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1314,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1296,
									"end": 1314,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1314,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1314,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1314,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1314,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1314,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1322,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 199,
									"end": 5063,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 199,
									"end": 5063,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 199,
									"end": 5063,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 199,
									"end": 5063,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 199,
									"end": 5063,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 5063,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 199,
									"end": 5063,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 5063,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 5063,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 199,
									"end": 5063,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 5063,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204b412252bdf208e52d79d66c28d09ac283da7130a0753fd725ebdd08ef642bed64736f6c634300081a0033",
									".code": [
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "60F43FD2"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "9B4B2C9C"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "9B4B2C9C"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "AA03875E"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "E1BA51FB"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "F851A440"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "60F43FD2"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "7E2BC224"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "8AF6C259"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "9B2CB5D8"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "5312EA8E"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "5312EA8E"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "53AAA63B"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "5E9D2F90"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "5F48F393"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "13D033C0"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "17BE3FA5"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "48C54B9D"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 199,
											"end": 5063,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 312,
											"end": 351,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 312,
											"end": 351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 312,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 312,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 312,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 312,
											"end": 351,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 312,
											"end": 351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 312,
											"end": 351,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 351,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 312,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 312,
											"end": 351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 312,
											"end": 351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 312,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 312,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 312,
											"end": 351,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 312,
											"end": 351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 312,
											"end": 351,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 351,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 312,
											"end": 351,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 312,
											"end": 351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 312,
											"end": 351,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 312,
											"end": 351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 312,
											"end": 351,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1624,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1624,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 3732,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2639,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2639,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2639,
											"end": 3732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 3732,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2639,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 3732,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1455,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1455,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1168,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1168,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1168,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 560,
											"end": 597,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 560,
											"end": 597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 560,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 560,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 560,
											"end": 597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 560,
											"end": 597,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 560,
											"end": 597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 560,
											"end": 597,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 560,
											"end": 597,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 560,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 560,
											"end": 597,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 560,
											"end": 597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 560,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 560,
											"end": 597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 560,
											"end": 597,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 560,
											"end": 597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 560,
											"end": 597,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 560,
											"end": 597,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 560,
											"end": 597,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 560,
											"end": 597,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 560,
											"end": 597,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 560,
											"end": 597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 560,
											"end": 597,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 413,
											"end": 454,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 413,
											"end": 454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 413,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 413,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 413,
											"end": 454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 413,
											"end": 454,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 413,
											"end": 454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 413,
											"end": 454,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 454,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 413,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 413,
											"end": 454,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 413,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 413,
											"end": 454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 413,
											"end": 454,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 413,
											"end": 454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 413,
											"end": 454,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 454,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 413,
											"end": 454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 454,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 413,
											"end": 454,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 413,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 413,
											"end": 454,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4652,
											"end": 5060,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 4652,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4652,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 4652,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4652,
											"end": 5060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4652,
											"end": 5060,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 4652,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4652,
											"end": 5060,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 553,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 507,
											"end": 553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 507,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 507,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 553,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 507,
											"end": 553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 553,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 553,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 507,
											"end": 553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 507,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 553,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 507,
											"end": 553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 507,
											"end": 553,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 553,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 507,
											"end": 553,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 553,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 507,
											"end": 553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 507,
											"end": 553,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 358,
											"end": 406,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 358,
											"end": 406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 358,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 358,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 358,
											"end": 406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 406,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 358,
											"end": 406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 358,
											"end": 406,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 406,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 358,
											"end": 406,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 358,
											"end": 406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 406,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 358,
											"end": 406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 358,
											"end": 406,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 406,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 406,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 406,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 406,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 358,
											"end": 406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 406,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 461,
											"end": 500,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 461,
											"end": 500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 461,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 461,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 461,
											"end": 500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 461,
											"end": 500,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 461,
											"end": 500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 461,
											"end": 500,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 461,
											"end": 500,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 461,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 461,
											"end": 500,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 461,
											"end": 500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 461,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 461,
											"end": 500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 461,
											"end": 500,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 461,
											"end": 500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 461,
											"end": 500,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 461,
											"end": 500,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 461,
											"end": 500,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 461,
											"end": 500,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 461,
											"end": 500,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 461,
											"end": 500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 461,
											"end": 500,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 4052,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3740,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 3740,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3740,
											"end": 4052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 4052,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 3740,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 4052,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 258,
											"end": 276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 258,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 258,
											"end": 276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 258,
											"end": 276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 276,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 258,
											"end": 276,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 258,
											"end": 276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 258,
											"end": 276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 276,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1112,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1112,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1112,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 283,
											"end": 303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 283,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 283,
											"end": 303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 283,
											"end": 303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 303,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 283,
											"end": 303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 283,
											"end": 303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 283,
											"end": 303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 303,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 312,
											"end": 351,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 312,
											"end": 351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 344,
											"end": 351,
											"name": "PUSH",
											"source": 6,
											"value": "4F1A00"
										},
										{
											"begin": 312,
											"end": 351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 312,
											"end": 351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 497,
											"end": 500,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1713,
											"end": 1724,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1737,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1765,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1765,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1713,
											"end": 1765,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1765,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 449,
											"end": 454,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 1741,
											"end": 1752,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1741,
											"end": 1765,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1741,
											"end": 1765,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1765,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1713,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1705,
											"end": 1795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1705,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1839,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1814,
											"end": 1839,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1825,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1839,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1814,
											"end": 1839,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1839,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1806,
											"end": 1869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1806,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1941,
											"end": 1951,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1961,
											"end": 1965,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 1979,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1923,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1923,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1923,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1919,
											"end": 1923,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1923,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1923,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1919,
											"end": 1923,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1940,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1919,
											"end": 1940,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1919,
											"end": 1940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1980,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1980,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1980,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1980,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1980,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1919,
											"end": 1980,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1980,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1919,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2049,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2050,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2025,
											"end": 2050,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2050,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2025,
											"end": 2050,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2050,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2021,
											"end": 2337,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2090,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2108,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2093,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2120,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2093,
											"end": 2121,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2093,
											"end": 2121,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2093,
											"end": 2121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2121,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2093,
											"end": 2121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2093,
											"end": 2121,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2121,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2158,
											"end": 2159,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2159,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2136,
											"end": 2326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2202,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2245,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 552,
											"end": 553,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2206,
											"end": 2217,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2206,
											"end": 2238,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2206,
											"end": 2238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2206,
											"end": 2238,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2206,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2205,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2245,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2245,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2310,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2279,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2291,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2292,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2264,
											"end": 2310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2136,
											"end": 2326,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2136,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2337,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2021,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2364,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2349,
											"end": 2376,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2375,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2376,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2349,
											"end": 2376,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2376,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2349,
											"end": 2376,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2376,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2376,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2376,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2376,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2376,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2376,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2376,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2376,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2376,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2376,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2414,
											"end": 2425,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2447,
											"end": 2462,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2491,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2556,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2382,
											"end": 2568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2609,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH",
											"source": 6,
											"value": "F9626BCA62C59D77FA45A204DC096874EE066A5C5E124AA9CE6C438DBDF7387A"
										},
										{
											"begin": 2611,
											"end": 2622,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2587,
											"end": 2623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 2631,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 2631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 3732,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2639,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2682,
											"end": 2702,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2705,
											"end": 2732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2721,
											"end": 2731,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2732,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2705,
											"end": 2732,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2732,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2705,
											"end": 2732,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2732,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2732,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2732,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2705,
											"end": 2732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2732,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2732,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2732,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2705,
											"end": 2732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2732,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2682,
											"end": 2732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2682,
											"end": 2732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2765,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2789,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2793,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3540,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2778,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2804,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2811,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2811,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2811,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2796,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2811,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3540,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2778,
											"end": 3540,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 2857,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2850,
											"end": 2858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2858,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 344,
											"end": 351,
											"name": "PUSH",
											"source": 6,
											"value": "4F1A00"
										},
										{
											"begin": 2895,
											"end": 2896,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2895,
											"end": 2902,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2895,
											"end": 2902,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2895,
											"end": 2902,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2895,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2895,
											"end": 2910,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2895,
											"end": 2910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2895,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2895,
											"end": 2910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2895,
											"end": 2910,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2895,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 2892,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 2910,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2873,
											"end": 2920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 2920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2912,
											"end": 2920,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2920,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2873,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 2977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2976,
											"end": 2983,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2976,
											"end": 2983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2976,
											"end": 2983,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2958,
											"end": 2983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2958,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 398,
											"end": 406,
											"name": "PUSH",
											"source": 6,
											"value": "1E13380"
										},
										{
											"begin": 3002,
											"end": 3012,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3028,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3056,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2998,
											"end": 3056,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 398,
											"end": 406,
											"name": "PUSH",
											"source": 6,
											"value": "1E13380"
										},
										{
											"begin": 3030,
											"end": 3056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3030,
											"end": 3056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3056,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2998,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 351,
											"name": "PUSH",
											"source": 6,
											"value": "4F1A00"
										},
										{
											"begin": 3095,
											"end": 3105,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3095,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3128,
											"end": 3147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3171,
											"name": "PUSH",
											"source": 6,
											"value": "278D00"
										},
										{
											"begin": 3150,
											"end": 3161,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3150,
											"end": 3171,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3150,
											"end": 3171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3171,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3150,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3128,
											"end": 3171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3128,
											"end": 3171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3186,
											"end": 3205,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3247,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3229,
											"end": 3240,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3224,
											"end": 3226,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3209,
											"end": 3210,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3221,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3221,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3221,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3209,
											"end": 3226,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3209,
											"end": 3226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3226,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3209,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3209,
											"end": 3240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3209,
											"end": 3240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3240,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3209,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3208,
											"end": 3247,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3208,
											"end": 3247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3247,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3208,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3186,
											"end": 3247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3186,
											"end": 3247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3283,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3295,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3282,
											"end": 3295,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3295,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3279,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3268,
											"end": 3295,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3529,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3264,
											"end": 3529,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3316,
											"end": 3333,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3350,
											"end": 3351,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3363,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3350,
											"end": 3363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3363,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3347,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3336,
											"end": 3363,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3336,
											"end": 3363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3363,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3336,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3316,
											"end": 3363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3316,
											"end": 3363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3383,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3395,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3382,
											"end": 3395,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3408,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3408,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3408,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3382,
											"end": 3408,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3382,
											"end": 3408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3408,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3382,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3408,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3408,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3408,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3408,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3408,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3408,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3427,
											"end": 3454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3491,
											"end": 3492,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3475,
											"end": 3513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3513,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3475,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3297,
											"end": 3529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3529,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3264,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 3540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 3540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 3540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 3540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 3540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3540,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2778,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2816,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2813,
											"end": 2816,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2816,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2778,
											"end": 3540,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3540,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2778,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3560,
											"end": 3574,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3560,
											"end": 3578,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3552,
											"end": 3611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3640,
											"end": 3650,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3652,
											"end": 3666,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3626,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3622,
											"end": 3626,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3626,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3622,
											"end": 3626,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3639,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3622,
											"end": 3639,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3622,
											"end": 3639,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3667,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3667,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3667,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3622,
											"end": 3667,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3667,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3622,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3697,
											"end": 3707,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3724,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3683,
											"end": 3724,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3724,
											"name": "PUSH",
											"source": 6,
											"value": "896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430"
										},
										{
											"begin": 3709,
											"end": 3723,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3724,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3683,
											"end": 3724,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3683,
											"end": 3724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3683,
											"end": 3724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3724,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3683,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3724,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3683,
											"end": 3724,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3724,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3724,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3724,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 3732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 3732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 3732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1389,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1370,
											"end": 1389,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1380,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1389,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1370,
											"end": 1389,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1389,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1362,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1362,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1546,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1546,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1551,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1546,
											"end": 1551,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1551,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1546,
											"end": 1551,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1559,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1532,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1532,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1532,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1528,
											"end": 1532,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1532,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1532,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1528,
											"end": 1532,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1528,
											"end": 1545,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1528,
											"end": 1545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1560,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1560,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1528,
											"end": 1560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1560,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1560,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1528,
											"end": 1560,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1594,
											"end": 1599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1594,
											"end": 1599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1599,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1594,
											"end": 1599,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1594,
											"end": 1599,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1594,
											"end": 1599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1594,
											"end": 1599,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1594,
											"end": 1599,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1594,
											"end": 1599,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1594,
											"end": 1599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1594,
											"end": 1599,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5FAFA99D0643513820BE26656B45130B01E1C03062E1266BF36F88CBD3BD9695"
										},
										{
											"begin": 1601,
											"end": 1607,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1576,
											"end": 1608,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1608,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 560,
											"end": 597,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 560,
											"end": 597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 560,
											"end": 597,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 560,
											"end": 597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 413,
											"end": 454,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 413,
											"end": 454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 449,
											"end": 454,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 413,
											"end": 454,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 413,
											"end": 454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4652,
											"end": 5060,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4652,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4700,
											"end": 4720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4723,
											"end": 4738,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4723,
											"end": 4750,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4749,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4750,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4723,
											"end": 4750,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4750,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4723,
											"end": 4750,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4750,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4750,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4750,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4723,
											"end": 4750,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4750,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4750,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4750,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4750,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4723,
											"end": 4750,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4723,
											"end": 4750,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4723,
											"end": 4750,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4700,
											"end": 4750,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4700,
											"end": 4750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4784,
											"end": 4785,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4769,
											"end": 4774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4769,
											"end": 4785,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4761,
											"end": 4805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4761,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4835,
											"end": 4840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4841,
											"end": 4842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4835,
											"end": 4843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4855,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4835,
											"end": 4855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4855,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4883,
											"end": 4884,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4874,
											"end": 4884,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4866,
											"end": 4913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4866,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4926,
											"end": 4931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4932,
											"end": 4933,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4926,
											"end": 4934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4946,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4926,
											"end": 4946,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4950,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4950,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4979,
											"end": 4989,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 4997,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4965,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4965,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4965,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4961,
											"end": 4965,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4965,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4965,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4961,
											"end": 4965,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4978,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4961,
											"end": 4978,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4961,
											"end": 4978,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4998,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4998,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4961,
											"end": 4998,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 4998,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4961,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5043,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5052,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5014,
											"end": 5052,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5052,
											"name": "PUSH",
											"source": 6,
											"value": "8830FD27A530B5F90E62ADF0B2D34E36B25AA4F956359DF6DB4BCDEC067F75B1"
										},
										{
											"begin": 5045,
											"end": 5051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5052,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5014,
											"end": 5052,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5014,
											"end": 5052,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5052,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5014,
											"end": 5052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5052,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5014,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5052,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5014,
											"end": 5052,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5052,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5052,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5052,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5052,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5052,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 5060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 5060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4652,
											"end": 5060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 553,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 507,
											"end": 553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 552,
											"end": 553,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 507,
											"end": 553,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 507,
											"end": 553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 406,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 358,
											"end": 406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 398,
											"end": 406,
											"name": "PUSH",
											"source": 6,
											"value": "1E13380"
										},
										{
											"begin": 358,
											"end": 406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 461,
											"end": 500,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 461,
											"end": 500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 497,
											"end": 500,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 461,
											"end": 500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 461,
											"end": 500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 4052,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3740,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3805,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3823,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3808,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3834,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3808,
											"end": 3835,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3808,
											"end": 3835,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3808,
											"end": 3835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3808,
											"end": 3835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3835,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3835,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3864,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3854,
											"end": 3860,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3854,
											"end": 3864,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3846,
											"end": 3897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3846,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3923,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3908,
											"end": 3935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3934,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3935,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3908,
											"end": 3935,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3935,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3908,
											"end": 3935,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3935,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3935,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3935,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3908,
											"end": 3935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3935,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3935,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3935,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3935,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3908,
											"end": 3935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3935,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3939,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3939,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3968,
											"end": 3978,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3980,
											"end": 3986,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3954,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3954,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3950,
											"end": 3954,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3954,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3950,
											"end": 3954,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3967,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3950,
											"end": 3967,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3950,
											"end": 3967,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3987,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3987,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3987,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3987,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3950,
											"end": 3987,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3987,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3950,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4035,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4044,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4003,
											"end": 4044,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4044,
											"name": "PUSH",
											"source": 6,
											"value": "5BE4D22009FEA85381595ED91090BC5C0BC92A93FE07ED7472C5888EB1993F83"
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4044,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4003,
											"end": 4044,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4003,
											"end": 4044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4003,
											"end": 4044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4044,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4003,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4044,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4003,
											"end": 4044,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4044,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4044,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 4052,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 4052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 258,
											"end": 276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 276,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 258,
											"end": 276,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 258,
											"end": 276,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 258,
											"end": 276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 283,
											"end": 303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 283,
											"end": 303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 283,
											"end": 303,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 283,
											"end": 303,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 283,
											"end": 303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4060,
											"end": 4644,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4060,
											"end": 4644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4179,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4183,
											"end": 4185,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4187,
											"end": 4189,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4191,
											"end": 4192,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4222,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4236,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4236,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4254,
											"end": 4260,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 4637,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4249,
											"end": 4637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4266,
											"end": 4281,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4266,
											"end": 4281,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4266,
											"end": 4267,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4266,
											"end": 4281,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4637,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4249,
											"end": 4637,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4329,
											"end": 4330,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4307,
											"end": 4331,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4307,
											"end": 4331,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4307,
											"end": 4317,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4307,
											"end": 4331,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4307,
											"end": 4331,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4307,
											"end": 4331,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4303,
											"end": 4338,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4303,
											"end": 4338,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4355,
											"end": 4378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4381,
											"end": 4396,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4381,
											"end": 4408,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4407,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4381,
											"end": 4408,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4381,
											"end": 4408,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4381,
											"end": 4408,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4381,
											"end": 4408,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4381,
											"end": 4408,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4381,
											"end": 4408,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4381,
											"end": 4408,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4381,
											"end": 4408,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4381,
											"end": 4408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4381,
											"end": 4408,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4381,
											"end": 4408,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4381,
											"end": 4408,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4381,
											"end": 4408,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4381,
											"end": 4408,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4381,
											"end": 4408,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4355,
											"end": 4408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4355,
											"end": 4408,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4427,
											"end": 4442,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4427,
											"end": 4442,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4427,
											"end": 4442,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4427,
											"end": 4442,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4427,
											"end": 4447,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4423,
											"end": 4454,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4449,
											"end": 4454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4449,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4449,
											"end": 4454,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4454,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4423,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4485,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4526,
											"end": 4529,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4504,
											"end": 4519,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4521,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4504,
											"end": 4522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4522,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4501,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 4489,
											"end": 4522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 4489,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4488,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 4488,
											"end": 4529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4488,
											"end": 4529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4488,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 4488,
											"end": 4529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4488,
											"end": 4529,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 4488,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4577,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4553,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4544,
											"end": 4555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4555,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4567,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4544,
											"end": 4567,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4567,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 4544,
											"end": 4577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4613,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4615,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4605,
											"end": 4616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4616,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4625,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4605,
											"end": 4625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4625,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4605,
											"end": 4625,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4625,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4625,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4625,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4605,
											"end": 4625,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4625,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4625,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4625,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4605,
											"end": 4625,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4625,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4625,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4637,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4637,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4286,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4283,
											"end": 4286,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4286,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4249,
											"end": 4637,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4637,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4249,
											"end": 4637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4637,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4060,
											"end": 4644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4060,
											"end": 4644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4060,
											"end": 4644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1349,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1347,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 1504,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1617,
											"end": 1623,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1631,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1676,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1677,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 1680,
											"end": 1759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1800,
											"end": 1801,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 1870,
											"end": 1877,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1846,
											"end": 1868,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 1825,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1888,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1996,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1953,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 2016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1549,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2143,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2451,
											"end": 2458,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2470,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2443,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2478,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 2668,
											"end": 2675,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2623,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2686,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2699,
											"end": 2785,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 2699,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2734,
											"end": 2741,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2778,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 2779,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2752,
											"end": 2779,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2699,
											"end": 2785,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2699,
											"end": 2785,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2699,
											"end": 2785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2699,
											"end": 2785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2903,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2791,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2890,
											"end": 2895,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 2874,
											"end": 2896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 2872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2862,
											"end": 2897,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2903,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2903,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3123,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2909,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2998,
											"end": 3002,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3036,
											"end": 3038,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3034,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3013,
											"end": 3039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3113,
											"end": 3114,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3111,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3095,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3049,
											"end": 3116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3116,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3049,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3123,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3123,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 3123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3189,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3129,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3157,
											"end": 3160,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3171,
											"end": 3183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3171,
											"end": 3183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3337,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3195,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3245,
											"end": 3254,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 3296,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 3323,
											"end": 3328,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3305,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3296,
											"end": 3330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3296,
											"end": 3330,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3296,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3278,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3278,
											"end": 3331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3278,
											"end": 3331,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 3278,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3265,
											"end": 3331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3265,
											"end": 3331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3337,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3337,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3195,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3469,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3343,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 3457,
											"end": 3462,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 3426,
											"end": 3463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3463,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 3426,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3463,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3463,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3615,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3475,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3603,
											"end": 3608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3572,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3609,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3572,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3559,
											"end": 3609,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3559,
											"end": 3609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3615,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3615,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3615,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3722,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3773,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 3722,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3717,
											"end": 3720,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3710,
											"end": 3774,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3621,
											"end": 3780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3621,
											"end": 3780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3786,
											"end": 4036,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 3786,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3893,
											"end": 3897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3933,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3920,
											"end": 3929,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3916,
											"end": 3934,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 4026,
											"end": 4027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4015,
											"end": 4024,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4002,
											"end": 4008,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3944,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3944,
											"end": 4029,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 3944,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3786,
											"end": 4036,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3786,
											"end": 4036,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3786,
											"end": 4036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3786,
											"end": 4036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3786,
											"end": 4036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4160,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4042,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 4147,
											"end": 4152,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 4129,
											"end": 4153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4153,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 4129,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4124,
											"end": 4127,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4117,
											"end": 4154,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4042,
											"end": 4160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4830,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 4166,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4371,
											"end": 4375,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4409,
											"end": 4412,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 4398,
											"end": 4407,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4413,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4413,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 4491,
											"end": 4492,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4480,
											"end": 4489,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 4493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4467,
											"end": 4473,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 4423,
											"end": 4494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4494,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 4423,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 4572,
											"end": 4574,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4561,
											"end": 4570,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4548,
											"end": 4554,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 4504,
											"end": 4576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4576,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 4504,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4586,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 4654,
											"end": 4656,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4643,
											"end": 4652,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4639,
											"end": 4657,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4636,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4586,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 4586,
											"end": 4658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4586,
											"end": 4658,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 4586,
											"end": 4658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 4736,
											"end": 4738,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4725,
											"end": 4734,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4739,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4712,
											"end": 4718,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 4668,
											"end": 4740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4740,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 4668,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 4818,
											"end": 4821,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4807,
											"end": 4816,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4803,
											"end": 4822,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4800,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4750,
											"end": 4823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4823,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 4750,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4830,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4830,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4836,
											"end": 5058,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 4836,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 4933,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4969,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4956,
											"end": 4965,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4952,
											"end": 4970,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4944,
											"end": 4970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4944,
											"end": 4970,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4980,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 5048,
											"end": 5049,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5037,
											"end": 5046,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5024,
											"end": 5030,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4980,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4980,
											"end": 5051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4980,
											"end": 5051,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 4980,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4836,
											"end": 5058,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4836,
											"end": 5058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4836,
											"end": 5058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4836,
											"end": 5058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4836,
											"end": 5058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5064,
											"end": 5233,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 5064,
											"end": 5233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5159,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5182,
											"end": 5188,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5177,
											"end": 5180,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5170,
											"end": 5189,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5226,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5217,
											"end": 5220,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5227,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5198,
											"end": 5227,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5198,
											"end": 5227,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5064,
											"end": 5233,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5064,
											"end": 5233,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5064,
											"end": 5233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5064,
											"end": 5233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5064,
											"end": 5233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5239,
											"end": 5414,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 5239,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5379,
											"end": 5406,
											"name": "PUSH",
											"source": 7,
											"value": "5374616B6520616D6F756E74206F7574206F662072616E676500000000000000"
										},
										{
											"begin": 5375,
											"end": 5376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5367,
											"end": 5373,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5363,
											"end": 5377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5356,
											"end": 5407,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5239,
											"end": 5414,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5239,
											"end": 5414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5786,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 5420,
											"end": 5786,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5562,
											"end": 5565,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 5647,
											"end": 5649,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 5642,
											"end": 5645,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5583,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 5583,
											"end": 5650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5583,
											"end": 5650,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 5583,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5576,
											"end": 5650,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5576,
											"end": 5650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 5748,
											"end": 5751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 5659,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5752,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 5659,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5777,
											"end": 5779,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5772,
											"end": 5775,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 5780,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5761,
											"end": 5780,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5761,
											"end": 5780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5786,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5786,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5786,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5792,
											"end": 6211,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 5792,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5958,
											"end": 5962,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5996,
											"end": 5998,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5985,
											"end": 5994,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5981,
											"end": 5999,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5973,
											"end": 5999,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5973,
											"end": 5999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6054,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6039,
											"end": 6043,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6055,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6020,
											"end": 6029,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6016,
											"end": 6033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6009,
											"end": 6056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6073,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 6199,
											"end": 6203,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6073,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 6073,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6073,
											"end": 6204,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 6073,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6065,
											"end": 6204,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6065,
											"end": 6204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5792,
											"end": 6211,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5792,
											"end": 6211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5792,
											"end": 6211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5792,
											"end": 6211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6217,
											"end": 6392,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 6217,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6357,
											"end": 6384,
											"name": "PUSH",
											"source": 7,
											"value": "53656C6620726566657272616C206E6F7420616C6C6F77656400000000000000"
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6345,
											"end": 6351,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6385,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6217,
											"end": 6392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6217,
											"end": 6392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6764,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 6398,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6540,
											"end": 6543,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6561,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 6625,
											"end": 6627,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 6620,
											"end": 6623,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 6561,
											"end": 6628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6628,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 6561,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6554,
											"end": 6628,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6554,
											"end": 6628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6637,
											"end": 6730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 6726,
											"end": 6729,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6637,
											"end": 6730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 6637,
											"end": 6730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6637,
											"end": 6730,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 6637,
											"end": 6730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6757,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6746,
											"end": 6758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6739,
											"end": 6758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6739,
											"end": 6758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6764,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6770,
											"end": 7189,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6770,
											"end": 7189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 6976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6963,
											"end": 6972,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6959,
											"end": 6977,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7023,
											"end": 7032,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7017,
											"end": 7021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7013,
											"end": 7033,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7009,
											"end": 7010,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6998,
											"end": 7007,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6994,
											"end": 7011,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7034,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7051,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 7177,
											"end": 7181,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7051,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 7051,
											"end": 7182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7051,
											"end": 7182,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 7051,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7182,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7043,
											"end": 7182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6770,
											"end": 7189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6770,
											"end": 7189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6770,
											"end": 7189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6770,
											"end": 7189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7375,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 7195,
											"end": 7375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7320,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7240,
											"end": 7241,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7233,
											"end": 7321,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7340,
											"end": 7344,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7337,
											"end": 7338,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7330,
											"end": 7345,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7364,
											"end": 7368,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7361,
											"end": 7362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7369,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7381,
											"end": 7791,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 7381,
											"end": 7791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7421,
											"end": 7428,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7444,
											"end": 7464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 7462,
											"end": 7463,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7444,
											"end": 7464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 7444,
											"end": 7464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7444,
											"end": 7464,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 7444,
											"end": 7464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7439,
											"end": 7464,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7439,
											"end": 7464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 7496,
											"end": 7497,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 7478,
											"end": 7498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7498,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 7478,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7473,
											"end": 7498,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7473,
											"end": 7498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7533,
											"end": 7534,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7526,
											"end": 7535,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7555,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 7573,
											"end": 7584,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7555,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 7555,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7555,
											"end": 7585,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 7555,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7585,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7734,
											"end": 7735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7725,
											"end": 7732,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7721,
											"end": 7736,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7718,
											"end": 7719,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7715,
											"end": 7737,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7695,
											"end": 7696,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7688,
											"end": 7697,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7668,
											"end": 7751,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 7645,
											"end": 7784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 7645,
											"end": 7784,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7764,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 7764,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 7764,
											"end": 7782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7764,
											"end": 7782,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 7764,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7645,
											"end": 7784,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 7645,
											"end": 7784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7429,
											"end": 7791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7381,
											"end": 7791,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7381,
											"end": 7791,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7381,
											"end": 7791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7381,
											"end": 7791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7381,
											"end": 7791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7797,
											"end": 7977,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 7797,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7845,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7842,
											"end": 7843,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7923,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7942,
											"end": 7946,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 7939,
											"end": 7940,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7932,
											"end": 7947,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7966,
											"end": 7970,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7963,
											"end": 7964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7956,
											"end": 7971,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7983,
											"end": 8168,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 7983,
											"end": 8168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8023,
											"end": 8024,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8040,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 8058,
											"end": 8059,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8040,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 8040,
											"end": 8060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8040,
											"end": 8060,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 8040,
											"end": 8060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8035,
											"end": 8060,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8035,
											"end": 8060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8074,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 8092,
											"end": 8093,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8074,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 8074,
											"end": 8094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8074,
											"end": 8094,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 8074,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8069,
											"end": 8094,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8069,
											"end": 8094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8114,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 8103,
											"end": 8138,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 8118,
											"end": 8136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 8118,
											"end": 8136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8138,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 8103,
											"end": 8138,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8160,
											"end": 8161,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8157,
											"end": 8158,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8153,
											"end": 8162,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8148,
											"end": 8162,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8148,
											"end": 8162,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7983,
											"end": 8168,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7983,
											"end": 8168,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7983,
											"end": 8168,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7983,
											"end": 8168,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7983,
											"end": 8168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8174,
											"end": 8365,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 8174,
											"end": 8365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8214,
											"end": 8217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 8251,
											"end": 8252,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8233,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 8233,
											"end": 8253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8233,
											"end": 8253,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 8233,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8228,
											"end": 8253,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8228,
											"end": 8253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8267,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 8285,
											"end": 8286,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8267,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 8267,
											"end": 8287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8267,
											"end": 8287,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 8267,
											"end": 8287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8311,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8308,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8303,
											"end": 8312,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8296,
											"end": 8312,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8296,
											"end": 8312,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8331,
											"end": 8334,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8328,
											"end": 8329,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8335,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8322,
											"end": 8358,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8322,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 8322,
											"end": 8358,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 8338,
											"end": 8356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8322,
											"end": 8358,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 8322,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8174,
											"end": 8365,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8174,
											"end": 8365,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8174,
											"end": 8365,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8174,
											"end": 8365,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8174,
											"end": 8365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8371,
											"end": 8551,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 8371,
											"end": 8551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8419,
											"end": 8496,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8416,
											"end": 8417,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8409,
											"end": 8497,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8516,
											"end": 8520,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 8513,
											"end": 8514,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8506,
											"end": 8521,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8544,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8537,
											"end": 8538,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8530,
											"end": 8545,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8751,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 8557,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8597,
											"end": 8601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8617,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 8635,
											"end": 8636,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8617,
											"end": 8637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 8617,
											"end": 8637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8617,
											"end": 8637,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 8617,
											"end": 8637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8612,
											"end": 8637,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8612,
											"end": 8637,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8651,
											"end": 8671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 8669,
											"end": 8670,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8651,
											"end": 8671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 8651,
											"end": 8671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8651,
											"end": 8671,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 8651,
											"end": 8671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8646,
											"end": 8671,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8646,
											"end": 8671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8695,
											"end": 8696,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8692,
											"end": 8693,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8688,
											"end": 8697,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8680,
											"end": 8697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8680,
											"end": 8697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8719,
											"end": 8720,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8713,
											"end": 8717,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8710,
											"end": 8721,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8707,
											"end": 8744,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8707,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 8707,
											"end": 8744,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 8724,
											"end": 8742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 8724,
											"end": 8742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8742,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 8724,
											"end": 8742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8707,
											"end": 8744,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 8707,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8751,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8751,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8757,
											"end": 8935,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 8757,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8897,
											"end": 8927,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F20746F6B656E7320617661696C61626C6520746F20636C61696D00000000"
										},
										{
											"begin": 8893,
											"end": 8894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8885,
											"end": 8891,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8881,
											"end": 8895,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8874,
											"end": 8928,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8757,
											"end": 8935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8757,
											"end": 8935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 9307,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 8941,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9083,
											"end": 9086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9104,
											"end": 9171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 9168,
											"end": 9170,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 9163,
											"end": 9166,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9104,
											"end": 9171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 9104,
											"end": 9171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9104,
											"end": 9171,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 9104,
											"end": 9171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9097,
											"end": 9171,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9097,
											"end": 9171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9180,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 9269,
											"end": 9272,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9180,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 9180,
											"end": 9273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9180,
											"end": 9273,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 9180,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9300,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9293,
											"end": 9296,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9289,
											"end": 9301,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9282,
											"end": 9301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9282,
											"end": 9301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 9307,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 9307,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 9307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 9307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9313,
											"end": 9732,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 9313,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9479,
											"end": 9483,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9517,
											"end": 9519,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9506,
											"end": 9515,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9502,
											"end": 9520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9494,
											"end": 9520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9494,
											"end": 9520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9566,
											"end": 9575,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9560,
											"end": 9564,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9556,
											"end": 9576,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9552,
											"end": 9553,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9541,
											"end": 9550,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9537,
											"end": 9554,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9530,
											"end": 9577,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9594,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 9720,
											"end": 9724,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9594,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 9594,
											"end": 9725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9594,
											"end": 9725,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 9594,
											"end": 9725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9586,
											"end": 9725,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9586,
											"end": 9725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9313,
											"end": 9732,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9313,
											"end": 9732,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9313,
											"end": 9732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9313,
											"end": 9732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9738,
											"end": 9958,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 9738,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9878,
											"end": 9912,
											"name": "PUSH",
											"source": 7,
											"value": "4F6E6C792061646D696E2063616E2063616C6C20746869732066756E6374696F"
										},
										{
											"begin": 9874,
											"end": 9875,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9866,
											"end": 9872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9862,
											"end": 9876,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9913,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9947,
											"end": 9950,
											"name": "PUSH",
											"source": 7,
											"value": "6E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9942,
											"end": 9944,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9934,
											"end": 9940,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9930,
											"end": 9945,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9923,
											"end": 9951,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9738,
											"end": 9958,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9738,
											"end": 9958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9964,
											"end": 10330,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 9964,
											"end": 10330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10106,
											"end": 10109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10127,
											"end": 10194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 10191,
											"end": 10193,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 10186,
											"end": 10189,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10127,
											"end": 10194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 10127,
											"end": 10194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10127,
											"end": 10194,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 10127,
											"end": 10194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10120,
											"end": 10194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10120,
											"end": 10194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10203,
											"end": 10296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 10292,
											"end": 10295,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10203,
											"end": 10296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 10203,
											"end": 10296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10203,
											"end": 10296,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 10203,
											"end": 10296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10321,
											"end": 10323,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10316,
											"end": 10319,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10312,
											"end": 10324,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10305,
											"end": 10324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10305,
											"end": 10324,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9964,
											"end": 10330,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9964,
											"end": 10330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9964,
											"end": 10330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9964,
											"end": 10330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10336,
											"end": 10755,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 10336,
											"end": 10755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10540,
											"end": 10542,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10529,
											"end": 10538,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10525,
											"end": 10543,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10517,
											"end": 10543,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10517,
											"end": 10543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10589,
											"end": 10598,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10583,
											"end": 10587,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10579,
											"end": 10599,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10575,
											"end": 10576,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10564,
											"end": 10573,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10560,
											"end": 10577,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10553,
											"end": 10600,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10617,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 10743,
											"end": 10747,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10617,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 10617,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10617,
											"end": 10748,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 10617,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10609,
											"end": 10748,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10609,
											"end": 10748,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10336,
											"end": 10755,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10336,
											"end": 10755,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10336,
											"end": 10755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10336,
											"end": 10755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10761,
											"end": 10926,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 10761,
											"end": 10926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10901,
											"end": 10918,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F207374616B657320666F756E640000000000000000000000000000000000"
										},
										{
											"begin": 10897,
											"end": 10898,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10889,
											"end": 10895,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10885,
											"end": 10899,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10878,
											"end": 10919,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10761,
											"end": 10926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10761,
											"end": 10926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10932,
											"end": 11298,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 10932,
											"end": 11298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11074,
											"end": 11077,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11095,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 11159,
											"end": 11161,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 11154,
											"end": 11157,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11095,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 11095,
											"end": 11162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11095,
											"end": 11162,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 11095,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11162,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11088,
											"end": 11162,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11171,
											"end": 11264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 11260,
											"end": 11263,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11171,
											"end": 11264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 11171,
											"end": 11264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11171,
											"end": 11264,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 11171,
											"end": 11264,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11289,
											"end": 11291,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11284,
											"end": 11287,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11280,
											"end": 11292,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11273,
											"end": 11292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11273,
											"end": 11292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10932,
											"end": 11298,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10932,
											"end": 11298,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10932,
											"end": 11298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10932,
											"end": 11298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11304,
											"end": 11723,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 11304,
											"end": 11723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11470,
											"end": 11474,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11508,
											"end": 11510,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11497,
											"end": 11506,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11493,
											"end": 11511,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11485,
											"end": 11511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11485,
											"end": 11511,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11557,
											"end": 11566,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11551,
											"end": 11555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11547,
											"end": 11567,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11543,
											"end": 11544,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11532,
											"end": 11541,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11528,
											"end": 11545,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11521,
											"end": 11568,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11585,
											"end": 11716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 11711,
											"end": 11715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11585,
											"end": 11716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 11585,
											"end": 11716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11585,
											"end": 11716,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 11585,
											"end": 11716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11577,
											"end": 11716,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11577,
											"end": 11716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11304,
											"end": 11723,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11304,
											"end": 11723,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11304,
											"end": 11723,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11304,
											"end": 11723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11729,
											"end": 11903,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 11729,
											"end": 11903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11869,
											"end": 11895,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F206C6576656C20696E636F6D6520746F20636C61696D0000000000000000"
										},
										{
											"begin": 11865,
											"end": 11866,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11857,
											"end": 11863,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11853,
											"end": 11867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11846,
											"end": 11896,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11729,
											"end": 11903,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11729,
											"end": 11903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11909,
											"end": 12275,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 11909,
											"end": 12275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12051,
											"end": 12054,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12072,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 12136,
											"end": 12138,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 12131,
											"end": 12134,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12072,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 12072,
											"end": 12139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12072,
											"end": 12139,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 12072,
											"end": 12139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12065,
											"end": 12139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12065,
											"end": 12139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12148,
											"end": 12241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 12237,
											"end": 12240,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12148,
											"end": 12241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 12148,
											"end": 12241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12148,
											"end": 12241,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 12148,
											"end": 12241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12266,
											"end": 12268,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12261,
											"end": 12264,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12257,
											"end": 12269,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12250,
											"end": 12269,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12250,
											"end": 12269,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11909,
											"end": 12275,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11909,
											"end": 12275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11909,
											"end": 12275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11909,
											"end": 12275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12281,
											"end": 12700,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 12281,
											"end": 12700,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12447,
											"end": 12451,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12485,
											"end": 12487,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12474,
											"end": 12483,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12470,
											"end": 12488,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12462,
											"end": 12488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12462,
											"end": 12488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12534,
											"end": 12543,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12528,
											"end": 12532,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12524,
											"end": 12544,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12520,
											"end": 12521,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12509,
											"end": 12518,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12505,
											"end": 12522,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12498,
											"end": 12545,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12562,
											"end": 12693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 12688,
											"end": 12692,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12562,
											"end": 12693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 12562,
											"end": 12693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12562,
											"end": 12693,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 12562,
											"end": 12693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12554,
											"end": 12693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12554,
											"end": 12693,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12281,
											"end": 12700,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12281,
											"end": 12700,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12281,
											"end": 12700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12281,
											"end": 12700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12706,
											"end": 12884,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 12706,
											"end": 12884,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12846,
											"end": 12876,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F20726566657272616C2072657761726420617661696C61626C6500000000"
										},
										{
											"begin": 12842,
											"end": 12843,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12834,
											"end": 12840,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12830,
											"end": 12844,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12823,
											"end": 12877,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12706,
											"end": 12884,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12706,
											"end": 12884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12890,
											"end": 13256,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 12890,
											"end": 13256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13032,
											"end": 13035,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13053,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 13117,
											"end": 13119,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 13112,
											"end": 13115,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13053,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 13053,
											"end": 13120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13053,
											"end": 13120,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 13053,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13046,
											"end": 13120,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13046,
											"end": 13120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13129,
											"end": 13222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 13218,
											"end": 13221,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13129,
											"end": 13222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 13129,
											"end": 13222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13129,
											"end": 13222,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 13129,
											"end": 13222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13247,
											"end": 13249,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13242,
											"end": 13245,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13238,
											"end": 13250,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13231,
											"end": 13250,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13231,
											"end": 13250,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12890,
											"end": 13256,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12890,
											"end": 13256,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12890,
											"end": 13256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12890,
											"end": 13256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13262,
											"end": 13681,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 13262,
											"end": 13681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13428,
											"end": 13432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13466,
											"end": 13468,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13455,
											"end": 13464,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13451,
											"end": 13469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13443,
											"end": 13469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13443,
											"end": 13469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13515,
											"end": 13524,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13509,
											"end": 13513,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13525,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13501,
											"end": 13502,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13490,
											"end": 13499,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13486,
											"end": 13503,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13479,
											"end": 13526,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13543,
											"end": 13674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 13669,
											"end": 13673,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13543,
											"end": 13674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 13543,
											"end": 13674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13543,
											"end": 13674,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 13543,
											"end": 13674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13535,
											"end": 13674,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13535,
											"end": 13674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13262,
											"end": 13681,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13262,
											"end": 13681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13262,
											"end": 13681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13262,
											"end": 13681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13687,
											"end": 14129,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 13687,
											"end": 14129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13836,
											"end": 13840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13874,
											"end": 13876,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 13863,
											"end": 13872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13859,
											"end": 13877,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13851,
											"end": 13877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13851,
											"end": 13877,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13887,
											"end": 13958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 13955,
											"end": 13956,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13944,
											"end": 13953,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13940,
											"end": 13957,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13931,
											"end": 13937,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13887,
											"end": 13958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 13887,
											"end": 13958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13887,
											"end": 13958,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 13887,
											"end": 13958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13968,
											"end": 14040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 14036,
											"end": 14038,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14025,
											"end": 14034,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14021,
											"end": 14039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14012,
											"end": 14018,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13968,
											"end": 14040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 13968,
											"end": 14040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13968,
											"end": 14040,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 13968,
											"end": 14040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14050,
											"end": 14122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 14118,
											"end": 14120,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14107,
											"end": 14116,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14103,
											"end": 14121,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14094,
											"end": 14100,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14050,
											"end": 14122,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 14050,
											"end": 14122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14050,
											"end": 14122,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 14050,
											"end": 14122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13687,
											"end": 14129,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 13687,
											"end": 14129,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13687,
											"end": 14129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13687,
											"end": 14129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13687,
											"end": 14129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13687,
											"end": 14129,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13687,
											"end": 14129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14135,
											"end": 14467,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 14135,
											"end": 14467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14256,
											"end": 14260,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14294,
											"end": 14296,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14283,
											"end": 14292,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14279,
											"end": 14297,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14271,
											"end": 14297,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14271,
											"end": 14297,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14307,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 14375,
											"end": 14376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14364,
											"end": 14373,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14360,
											"end": 14377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14351,
											"end": 14357,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14307,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 14307,
											"end": 14378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14307,
											"end": 14378,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 14307,
											"end": 14378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14388,
											"end": 14460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 14456,
											"end": 14458,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14445,
											"end": 14454,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14441,
											"end": 14459,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14432,
											"end": 14438,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14388,
											"end": 14460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 14388,
											"end": 14460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14388,
											"end": 14460,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 14388,
											"end": 14460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14135,
											"end": 14467,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14135,
											"end": 14467,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14135,
											"end": 14467,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14135,
											"end": 14467,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14135,
											"end": 14467,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14135,
											"end": 14467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ReferralPercentage()": "7e2bc224",
							"admin()": "f851a440",
							"allStakeDetails(address,uint256)": "e1ba51fb",
							"claimLevelIncome()": "60f43fd2",
							"claimReferralReward()": "9b4b2c9c",
							"claimTokens()": "48c54b9d",
							"cliff()": "13d033c0",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"globalLevel()": "5e9d2f90",
							"lockToken(address,uint256)": "17be3fa5",
							"maxAmount()": "5f48f393",
							"minAmount()": "9b2cb5d8",
							"nlnt()": "aa03875e",
							"referralRewards(address)": "53aaa63b",
							"totalDuration()": "8af6c259"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nlnt\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LevelIncomeClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReferralRewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ReferralPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allStakeDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nlntAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"levelIncome\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimLevelIncome\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReferralReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cliff\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_refAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nlntAmount\",\"type\":\"uint256\"}],\"name\":\"lockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nlnt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referralRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Staking.sol\":\"Staking\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"Staking.sol\":{\"keccak256\":\"0x4504dab110261df966ddee271e6fd1be090afa4a6d5db302227135d16c6e5f2d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6178f1bfaf11aa8ea5c6939ce1256baa1152774affdd1456008cbaaffe1db26d\",\"dweb:/ipfs/QmVsCM7RVgn6kYZi8Li1zYbrZiuUCgByQsK4oRcwEL6rVW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 654,
								"contract": "Staking.sol:Staking",
								"label": "nlnt",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)167"
							},
							{
								"astId": 656,
								"contract": "Staking.sol:Staking",
								"label": "admin",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 721,
								"contract": "Staking.sol:Staking",
								"label": "allStakeDetails",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_array(t_struct(Lock)715_storage)dyn_storage)"
							},
							{
								"astId": 725,
								"contract": "Staking.sol:Staking",
								"label": "referralRewards",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Lock)715_storage)dyn_storage": {
								"base": "t_struct(Lock)715_storage",
								"encoding": "dynamic_array",
								"label": "struct Staking.Lock[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)167": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(Lock)715_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Staking.Lock[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Lock)715_storage)dyn_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Lock)715_storage": {
								"encoding": "inplace",
								"label": "struct Staking.Lock",
								"members": [
									{
										"astId": 706,
										"contract": "Staking.sol:Staking",
										"label": "nlntAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 708,
										"contract": "Staking.sol:Staking",
										"label": "start",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 710,
										"contract": "Staking.sol:Staking",
										"label": "claimAmount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 712,
										"contract": "Staking.sol:Staking",
										"label": "levelIncome",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 714,
										"contract": "Staking.sol:Staking",
										"label": "referral",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							643
						],
						"IERC20": [
							167
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 643,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 167,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 643,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								643,
								167
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							643
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 644,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 643,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 168,
							"src": "131:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 168,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 167,
							"linearizedBaseContracts": [
								167
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 101,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 110,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 167,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 167,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 167,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 167,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 167,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 167,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 168,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"SafeERC20": [
							631
						]
					},
					"id": 632,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 169,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 632,
							"sourceUnit": 168,
							"src": "141:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 170,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "149:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 632,
							"sourceUnit": 82,
							"src": "179:58:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 172,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 174,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 631,
							"linearizedBaseContracts": [
								631
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:4",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 179,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "823:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:4"
									},
									"src": "792:46:4"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:4",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 188,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "959:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "976:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1002:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:4"
									},
									"src": "920:109:4"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1291:88:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "1321:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 203,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "1343:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 134,
																	"src": "1343:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 205,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 194,
																			"src": "1360:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 206,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 196,
																			"src": "1364:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 207,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 201,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 199,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "1301:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:4"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1241:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 190,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1241:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1241:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1255:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1267:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:4"
									},
									"scope": 631,
									"src": "1219:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1708:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "1738:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 229,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "1760:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "1760:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 231,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "1781:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 232,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "1787:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 233,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "1791:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 234,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 227,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 225,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "1718:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:4"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1644:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 214,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1644:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1644:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1658:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1672:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:4"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:4"
									},
									"scope": 631,
									"src": "1618:188:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2033:99:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2074:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 256,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 243,
																		"src": "2096:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 134,
																	"src": "2096:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 258,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 245,
																			"src": "2113:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 259,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "2117:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 260,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 254,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 252,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2050:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 251,
												"id": 263,
												"nodeType": "Return",
												"src": "2043:82:4"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:4",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1968:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 242,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 241,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1968:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1968:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1982:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1994:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:4"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2027:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:4"
									},
									"scope": 631,
									"src": "1943:189:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "2381:109:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 281,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "2422:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 284,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "2444:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "2444:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 286,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 271,
																			"src": "2465:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 287,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 273,
																			"src": "2471:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 288,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 275,
																			"src": "2475:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 289,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 282,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 280,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "2398:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 279,
												"id": 292,
												"nodeType": "Return",
												"src": "2391:92:4"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:4",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2302:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 268,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 267,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "2302:6:4"
													},
													"referencedDeclaration": 167,
													"src": "2302:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2316:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2330:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:4"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 631,
									"src": "2273:217:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3232:139:4",
										"statements": [
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 324,
														"src": "3242:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 311,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$631",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$631",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 309,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 313,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "3296:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 307,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3265:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 144,
														"src": "3265:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 317,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3327:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 318,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "3334:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 319,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "3343:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 320,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "3358:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 316,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3314:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:4"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3177:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 297,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 296,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "3177:6:4"
													},
													"referencedDeclaration": 167,
													"src": "3177:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3191:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3208:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:4"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:4"
									},
									"scope": 631,
									"src": "3146:225:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "4137:370:4",
										"statements": [
											{
												"id": 366,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:4",
												"statements": [
													{
														"assignments": [
															337
														],
														"declarations": [
															{
																"constant": false,
																"id": 337,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:4",
																"nodeType": "VariableDeclaration",
																"scope": 366,
																"src": "4171:24:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 336,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 346,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 342,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$631",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$631",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 340,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 344,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4229:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 338,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "4198:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 144,
																"src": "4198:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 347,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "4255:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 348,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "4274:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 357,
														"nodeType": "IfStatement",
														"src": "4251:160:4",
														"trueBody": {
															"id": 356,
															"nodeType": "Block",
															"src": "4293:118:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 351,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 331,
																				"src": "4351:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 352,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 337,
																				"src": "4360:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 353,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 333,
																				"src": "4378:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 350,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 188,
																			"src": "4318:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 355,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 359,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "4437:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 360,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4444:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 361,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 337,
																		"src": "4453:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 362,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "4472:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 358,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "4424:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 365,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4070:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 328,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 327,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "4070:6:4"
													},
													"referencedDeclaration": 167,
													"src": "4070:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4084:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4101:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:4"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:4"
									},
									"scope": 631,
									"src": "4039:468:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "5161:303:4",
										"statements": [
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 414,
														"src": "5171:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 389,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 383,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "5214:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:4",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "5214:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 385,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "5230:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 386,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "5239:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 387,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 381,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:4",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:4"
											},
											{
												"condition": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 391,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "5286:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 392,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "5293:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 390,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5262:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 413,
												"nodeType": "IfStatement",
												"src": "5257:201:4",
												"trueBody": {
													"id": 412,
													"nodeType": "Block",
													"src": "5308:150:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 396,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "5342:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 399,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 372,
																					"src": "5364:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$167",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 154,
																				"src": "5364:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 401,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 374,
																						"src": "5380:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 402,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 403,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 397,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:4",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 395,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5322:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 406,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 408,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "5427:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 409,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 380,
																		"src": "5434:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 407,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5407:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 411,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5106:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 371,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 370,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "5106:6:4"
													},
													"referencedDeclaration": 167,
													"src": "5106:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5120:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "5137:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:4"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:4"
									},
									"scope": 631,
									"src": "5084:380:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "5911:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 428,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "5925:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 442,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "6034:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 443,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "6038:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 444,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "6045:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6012:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:4",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "6012:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 455,
													"nodeType": "IfStatement",
													"src": "6007:117:4",
													"trueBody": {
														"id": 454,
														"nodeType": "Block",
														"src": "6052:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 450,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 419,
																					"src": "6106:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 448,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 447,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "6073:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 453,
																"nodeType": "RevertStatement",
																"src": "6066:47:4"
															}
														]
													}
												},
												"id": 456,
												"nodeType": "IfStatement",
												"src": "5921:203:4",
												"trueBody": {
													"id": 439,
													"nodeType": "Block",
													"src": "5946:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 434,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "5973:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 435,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "5980:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 436,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "5984:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 433,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "5960:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 438,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:4",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5840:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 417,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5840:8:4"
													},
													"referencedDeclaration": 81,
													"src": "5840:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5856:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5883:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 424,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:4"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:4"
									},
									"scope": 631,
									"src": "5808:322:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "6649:239:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 473,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "6663:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 488,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "6786:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 489,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "6792:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 490,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "6796:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 491,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "6803:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "6760:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:4",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6760:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 502,
													"nodeType": "IfStatement",
													"src": "6755:127:4",
													"trueBody": {
														"id": 501,
														"nodeType": "Block",
														"src": "6810:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 497,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 462,
																					"src": "6864:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 495,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 494,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "6831:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 500,
																"nodeType": "RevertStatement",
																"src": "6824:47:4"
															}
														]
													}
												},
												"id": 503,
												"nodeType": "IfStatement",
												"src": "6659:223:4",
												"trueBody": {
													"id": 485,
													"nodeType": "Block",
													"src": "6684:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 479,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "6715:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 480,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "6722:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 481,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "6728:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 482,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "6732:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 478,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6698:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 484,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:4",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6527:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 461,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 460,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6527:8:4"
													},
													"referencedDeclaration": 81,
													"src": "6527:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6551:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6573:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6593:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "6616:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:4"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:4"
									},
									"scope": 631,
									"src": "6482:406:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "7655:218:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 518,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "7669:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 532,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "7777:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 533,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 513,
																	"src": "7781:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 534,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "7788:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 530,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "7756:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:4",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7756:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 545,
													"nodeType": "IfStatement",
													"src": "7751:116:4",
													"trueBody": {
														"id": 544,
														"nodeType": "Block",
														"src": "7795:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 540,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 509,
																					"src": "7849:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 538,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 537,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "7816:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 543,
																"nodeType": "RevertStatement",
																"src": "7809:47:4"
															}
														]
													}
												},
												"id": 546,
												"nodeType": "IfStatement",
												"src": "7665:202:4",
												"trueBody": {
													"id": 529,
													"nodeType": "Block",
													"src": "7690:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 524,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 509,
																		"src": "7717:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 525,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "7724:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 526,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "7728:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 523,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "7704:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 528,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:4",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7584:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 507,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "7584:8:4"
													},
													"referencedDeclaration": 81,
													"src": "7584:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7600:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7612:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "7627:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:4"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:4"
									},
									"scope": 631,
									"src": "7553:320:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "8440:650:4",
										"statements": [
											{
												"assignments": [
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "8450:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 557,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 559,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:4"
											},
											{
												"assignments": [
													561
												],
												"declarations": [
													{
														"constant": false,
														"id": 561,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "8478:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 560,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 562,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:4"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:4",
													"nodeType": "YulBlock",
													"src": "8532:396:4",
													"statements": [
														{
															"nativeSrc": "8546:75:4",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:4"
																		},
																		"nativeSrc": "8566:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:4",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:4"
																		},
																		"nativeSrc": "8583:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:4"
																		},
																		"nativeSrc": "8600:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:4",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:4"
																},
																"nativeSrc": "8561:60:4",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:4"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:4",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:4",
																"nodeType": "YulBlock",
																"src": "8682:157:4",
																"statements": [
																	{
																		"nativeSrc": "8700:22:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:4",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:4",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:4",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:4"
																			},
																			"nativeSrc": "8711:11:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:4"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:4",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:4",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:4"
																					},
																					"nativeSrc": "8762:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:4",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:4"
																			},
																			"nativeSrc": "8739:40:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:4"
																		},
																		"nativeSrc": "8739:40:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:4"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:4"
																					},
																					"nativeSrc": "8808:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:4"
																			},
																			"nativeSrc": "8796:29:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:4"
																		},
																		"nativeSrc": "8796:29:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:4"
																},
																"nativeSrc": "8666:15:4",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:4"
															},
															"nativeSrc": "8663:176:4",
															"nodeType": "YulIf",
															"src": "8663:176:4"
														},
														{
															"nativeSrc": "8852:30:4",
															"nodeType": "YulAssignment",
															"src": "8852:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:4"
																},
																"nativeSrc": "8866:16:4",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:4"
																}
															]
														},
														{
															"nativeSrc": "8895:23:4",
															"nodeType": "YulAssignment",
															"src": "8895:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:4"
																},
																"nativeSrc": "8910:8:4",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 554,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:4",
														"valueSize": 1
													},
													{
														"declaration": 554,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:4",
														"valueSize": 1
													},
													{
														"declaration": 558,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:4",
														"valueSize": 1
													},
													{
														"declaration": 561,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:4",
														"valueSize": 1
													},
													{
														"declaration": 552,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 563,
												"nodeType": "InlineAssembly",
												"src": "8507:421:4"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 564,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "8942:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 575,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "8994:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:4",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 569,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 552,
																			"src": "8968:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 567,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "8938:146:4",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "9012:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 582,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 552,
																				"src": "9066:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 580,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 579,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "9033:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 585,
															"nodeType": "RevertStatement",
															"src": "9026:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8399:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 551,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 550,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "8399:6:4"
													},
													"referencedDeclaration": 167,
													"src": "8399:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8413:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:4"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:4"
									},
									"scope": 631,
									"src": "8370:720:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "9681:391:4",
										"statements": [
											{
												"assignments": [
													601
												],
												"declarations": [
													{
														"constant": false,
														"id": 601,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9691:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 600,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:4"
											},
											{
												"assignments": [
													604
												],
												"declarations": [
													{
														"constant": false,
														"id": 604,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9713:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 603,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 605,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:4"
											},
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "9741:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 606,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 608,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:4"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:4",
													"nodeType": "YulBlock",
													"src": "9795:174:4",
													"statements": [
														{
															"nativeSrc": "9809:71:4",
															"nodeType": "YulAssignment",
															"src": "9809:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:4"
																		},
																		"nativeSrc": "9825:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:4",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:4"
																		},
																		"nativeSrc": "9842:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:4"
																		},
																		"nativeSrc": "9859:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:4"
																},
																"nativeSrc": "9820:60:4",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:4"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:4"
																}
															]
														},
														{
															"nativeSrc": "9893:30:4",
															"nodeType": "YulAssignment",
															"src": "9893:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:4"
																},
																"nativeSrc": "9907:16:4",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:4"
																}
															]
														},
														{
															"nativeSrc": "9936:23:4",
															"nodeType": "YulAssignment",
															"src": "9936:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:4"
																},
																"nativeSrc": "9951:8:4",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 595,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:4",
														"valueSize": 1
													},
													{
														"declaration": 595,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:4",
														"valueSize": 1
													},
													{
														"declaration": 604,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:4",
														"valueSize": 1
													},
													{
														"declaration": 607,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:4",
														"valueSize": 1
													},
													{
														"declaration": 601,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:4",
														"valueSize": 1
													},
													{
														"declaration": 593,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 609,
												"nodeType": "InlineAssembly",
												"src": "9770:199:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 610,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "9985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 611,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "9997:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 622,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "10048:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:4",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 616,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 593,
																						"src": "10023:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 615,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 614,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 617,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 626,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 599,
												"id": 628,
												"nodeType": "Return",
												"src": "9978:87:4"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9625:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 591,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "9625:6:4"
													},
													"referencedDeclaration": 167,
													"src": "9625:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9639:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:4"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "9675:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:4"
									},
									"scope": 631,
									"src": "9592:480:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 632,
							"src": "698:9376:4",
							"usedErrors": [
								179,
								188
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							643
						]
					},
					"id": 644,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 633,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 634,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:5",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 643,
							"linearizedBaseContracts": [
								643
							],
							"name": "IERC165",
							"nameLocation": "432:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "818:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 636,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:5"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "861:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:5"
									},
									"scope": 643,
									"src": "791:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 644,
							"src": "422:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:5"
				},
				"id": 5
			},
			"Staking.sol": {
				"ast": {
					"absolutePath": "Staking.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"SafeERC20": [
							631
						],
						"Staking": [
							1188
						]
					},
					"id": 1189,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 645,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 646,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1189,
							"sourceUnit": 168,
							"src": "72:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 647,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1189,
							"sourceUnit": 632,
							"src": "130:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1188,
							"linearizedBaseContracts": [
								1188
							],
							"name": "Staking",
							"nameLocation": "208:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 651,
									"libraryName": {
										"id": 648,
										"name": "SafeERC20",
										"nameLocations": [
											"229:9:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 631,
										"src": "229:9:6"
									},
									"nodeType": "UsingForDirective",
									"src": "223:27:6",
									"typeName": {
										"id": 650,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 649,
											"name": "IERC20",
											"nameLocations": [
												"243:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 167,
											"src": "243:6:6"
										},
										"referencedDeclaration": 167,
										"src": "243:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$167",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "aa03875e",
									"id": 654,
									"mutability": "mutable",
									"name": "nlnt",
									"nameLocation": "272:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "258:18:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$167",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 653,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 652,
											"name": "IERC20",
											"nameLocations": [
												"258:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 167,
											"src": "258:6:6"
										},
										"referencedDeclaration": 167,
										"src": "258:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$167",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 656,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "298:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "283:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 655,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "283:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "13d033c0",
									"id": 659,
									"mutability": "constant",
									"name": "cliff",
									"nameLocation": "336:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "312:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 657,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "312:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3630",
										"id": 658,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "344:7:6",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5184000_by_1",
											"typeString": "int_const 5184000"
										},
										"value": "60"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8af6c259",
									"id": 662,
									"mutability": "constant",
									"name": "totalDuration",
									"nameLocation": "382:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "358:48:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 660,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "358:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 661,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "398:8:6",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5f48f393",
									"id": 665,
									"mutability": "constant",
									"name": "maxAmount",
									"nameLocation": "437:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "413:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 663,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "413:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 664,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "449:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "9b2cb5d8",
									"id": 668,
									"mutability": "constant",
									"name": "minAmount",
									"nameLocation": "485:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "461:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 666,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "461:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 667,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "497:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "7e2bc224",
									"id": 671,
									"mutability": "constant",
									"name": "ReferralPercentage",
									"nameLocation": "531:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "507:46:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 669,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "507:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 670,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "552:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5e9d2f90",
									"id": 674,
									"mutability": "constant",
									"name": "globalLevel",
									"nameLocation": "582:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "560:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 672,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "560:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 673,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "596:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "f9626bca62c59d77fa45a204dc096874ee066a5c5e124aa9ce6c438dbdf7387a",
									"id": 680,
									"name": "TokenLocked",
									"nameLocation": "612:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "624:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "654:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "646:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:38:6"
									},
									"src": "606:56:6"
								},
								{
									"anonymous": false,
									"eventSelector": "896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430",
									"id": 686,
									"name": "TokensClaimed",
									"nameLocation": "674:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "704:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "688:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "688:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "718:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "710:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "687:38:6"
									},
									"src": "668:58:6"
								},
								{
									"anonymous": false,
									"eventSelector": "5be4d22009fea85381595ed91090bc5c0bc92a93fe07ed7472c5888eb1993f83",
									"id": 692,
									"name": "ReferralRewardClaimed",
									"nameLocation": "738:21:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "776:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "760:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "790:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "782:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:38:6"
									},
									"src": "732:66:6"
								},
								{
									"anonymous": false,
									"eventSelector": "8830fd27a530b5f90e62adf0b2d34e36b25aa4f956359df6db4bcdec067f75b1",
									"id": 698,
									"name": "LevelIncomeClaimed",
									"nameLocation": "810:18:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "845:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "829:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "859:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "851:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:38:6"
									},
									"src": "804:63:6"
								},
								{
									"anonymous": false,
									"eventSelector": "5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695",
									"id": 704,
									"name": "EmergencyWithdraw",
									"nameLocation": "879:17:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"indexed": true,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "913:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "897:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "928:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "920:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "896:39:6"
									},
									"src": "873:63:6"
								},
								{
									"canonicalName": "Staking.Lock",
									"id": 715,
									"members": [
										{
											"constant": false,
											"id": 706,
											"mutability": "mutable",
											"name": "nlntAmount",
											"nameLocation": "975:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 715,
											"src": "967:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 705,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "967:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 708,
											"mutability": "mutable",
											"name": "start",
											"nameLocation": "1004:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 715,
											"src": "996:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 707,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "996:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 710,
											"mutability": "mutable",
											"name": "claimAmount",
											"nameLocation": "1028:11:6",
											"nodeType": "VariableDeclaration",
											"scope": 715,
											"src": "1020:19:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 709,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1020:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 712,
											"mutability": "mutable",
											"name": "levelIncome",
											"nameLocation": "1058:11:6",
											"nodeType": "VariableDeclaration",
											"scope": 715,
											"src": "1050:19:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 711,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1050:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 714,
											"mutability": "mutable",
											"name": "referral",
											"nameLocation": "1088:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 715,
											"src": "1080:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 713,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1080:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Lock",
									"nameLocation": "951:4:6",
									"nodeType": "StructDefinition",
									"scope": 1188,
									"src": "944:160:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e1ba51fb",
									"id": 721,
									"mutability": "mutable",
									"name": "allStakeDetails",
									"nameLocation": "1146:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "1112:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Lock_$715_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct Staking.Lock[])"
									},
									"typeName": {
										"id": 720,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 716,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1120:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1112:26:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Lock_$715_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct Staking.Lock[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 718,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 717,
													"name": "Lock",
													"nameLocations": [
														"1131:4:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 715,
													"src": "1131:4:6"
												},
												"referencedDeclaration": 715,
												"src": "1131:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Lock_$715_storage_ptr",
													"typeString": "struct Staking.Lock"
												}
											},
											"id": 719,
											"nodeType": "ArrayTypeName",
											"src": "1131:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr",
												"typeString": "struct Staking.Lock[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "53aaa63b",
									"id": 725,
									"mutability": "mutable",
									"name": "referralRewards",
									"nameLocation": "1203:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "1168:50:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 724,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 722,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1176:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1168:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 723,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1187:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "1254:68:6",
										"statements": [
											{
												"expression": {
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 730,
														"name": "nlnt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1265:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$167",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 732,
																"name": "_nlnt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "1279:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 731,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1272:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1272:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$167",
															"typeString": "contract IERC20"
														}
													},
													"src": "1265:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "1265:20:6"
											},
											{
												"expression": {
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 736,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "1296:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 737,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1304:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1308:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1304:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1296:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "1296:18:6"
											}
										]
									},
									"id": 742,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "_nlnt",
												"nameLocation": "1247:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "1239:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1238:15:6"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1254:0:6"
									},
									"scope": 1188,
									"src": "1227:95:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "1351:96:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 745,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1370:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1374:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1370:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 747,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "1384:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1370:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6e",
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1391:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b",
																"typeString": "literal_string \"Only admin can call this function\""
															},
															"value": "Only admin can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b",
																"typeString": "literal_string \"Only admin can call this function\""
															}
														],
														"id": 744,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1362:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1362:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "1362:65:6"
											},
											{
												"id": 752,
												"nodeType": "PlaceholderStatement",
												"src": "1438:1:6"
											}
										]
									},
									"id": 754,
									"name": "onlyAdmin",
									"nameLocation": "1339:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1348:2:6"
									},
									"src": "1330:117:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "1517:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 764,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "1546:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 765,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "1553:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 761,
															"name": "nlnt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "1528:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1533:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "1528:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "1528:32:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 769,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "1594:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "1601:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 768,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "1576:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1576:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "EmitStatement",
												"src": "1571:37:6"
											}
										]
									},
									"functionSelector": "5312ea8e",
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 759,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 758,
												"name": "onlyAdmin",
												"nameLocations": [
													"1507:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 754,
												"src": "1507:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1507:9:6"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "1464:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1490:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "1482:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1482:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:16:6"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1517:0:6"
									},
									"scope": 1188,
									"src": "1455:161:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "1694:937:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 782,
																	"name": "_nlntAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "1713:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 783,
																	"name": "minAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "1728:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1713:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 785,
																	"name": "_nlntAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "1741:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 786,
																	"name": "maxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "1756:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1741:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1713:52:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b6520616d6f756e74206f7574206f662072616e6765",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1767:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d994444ac13ecaeeccca9b7f3363f0d6c486526e60d1c7d157dfc6b1a19e01ad",
																"typeString": "literal_string \"Stake amount out of range\""
															},
															"value": "Stake amount out of range"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d994444ac13ecaeeccca9b7f3363f0d6c486526e60d1c7d157dfc6b1a19e01ad",
																"typeString": "literal_string \"Stake amount out of range\""
															}
														],
														"id": 781,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1705:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1705:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "1705:90:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 793,
																"name": "_refAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "1814:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 794,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1829:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1833:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1829:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1814:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656c6620726566657272616c206e6f7420616c6c6f776564",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1841:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2b4b5d23e1fe0bfa770424b0047417e5abbe574a8967435cd555c8f5bf89ab2f",
																"typeString": "literal_string \"Self referral not allowed\""
															},
															"value": "Self referral not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2b4b5d23e1fe0bfa770424b0047417e5abbe574a8967435cd555c8f5bf89ab2f",
																"typeString": "literal_string \"Self referral not allowed\""
															}
														],
														"id": 792,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1806:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1806:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "1806:63:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 803,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1941:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1945:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1941:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 807,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1961:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$1188",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$1188",
																		"typeString": "contract Staking"
																	}
																],
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1953:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 805,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1953:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1953:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 809,
															"name": "_nlntAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "1968:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 800,
															"name": "nlnt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "1919:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1924:16:6",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 239,
														"src": "1919:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "1919:61:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 812,
														"name": "_refAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "2025:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2048:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2040:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 813,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2040:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2040:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2025:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 849,
												"nodeType": "IfStatement",
												"src": "2021:316:6",
												"trueBody": {
													"id": 848,
													"nodeType": "Block",
													"src": "2052:285:6",
													"statements": [
														{
															"assignments": [
																822
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 822,
																	"mutability": "mutable",
																	"name": "refLocks",
																	"nameLocation": "2082:8:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 848,
																	"src": "2067:23:6",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr",
																		"typeString": "struct Staking.Lock[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 820,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 819,
																				"name": "Lock",
																				"nameLocations": [
																					"2067:4:6"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 715,
																				"src": "2067:4:6"
																			},
																			"referencedDeclaration": 715,
																			"src": "2067:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Lock_$715_storage_ptr",
																				"typeString": "struct Staking.Lock"
																			}
																		},
																		"id": 821,
																		"nodeType": "ArrayTypeName",
																		"src": "2067:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr",
																			"typeString": "struct Staking.Lock[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 826,
															"initialValue": {
																"baseExpression": {
																	"id": 823,
																	"name": "allStakeDetails",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "2093:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Lock_$715_storage_$dyn_storage_$",
																		"typeString": "mapping(address => struct Staking.Lock storage ref[] storage ref)"
																	}
																},
																"id": 825,
																"indexExpression": {
																	"id": 824,
																	"name": "_refAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "2109:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2093:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage",
																	"typeString": "struct Staking.Lock storage ref[] storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2067:54:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 827,
																		"name": "refLocks",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 822,
																		"src": "2140:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr",
																			"typeString": "struct Staking.Lock storage ref[] storage pointer"
																		}
																	},
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2149:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2140:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2158:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2140:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 847,
															"nodeType": "IfStatement",
															"src": "2136:190:6",
															"trueBody": {
																"id": 846,
																"nodeType": "Block",
																"src": "2161:165:6",
																"statements": [
																	{
																		"assignments": [
																			832
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 832,
																				"mutability": "mutable",
																				"name": "referralReward",
																				"nameLocation": "2188:14:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 846,
																				"src": "2180:22:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 831,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2180:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 839,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 835,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 833,
																							"name": "_nlntAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 778,
																							"src": "2206:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 834,
																							"name": "ReferralPercentage",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 671,
																							"src": "2220:18:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2206:32:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 836,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2205:34:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2242:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "2205:40:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2180:65:6"
																	},
																	{
																		"expression": {
																			"id": 844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 840,
																					"name": "referralRewards",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 725,
																					"src": "2264:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 842,
																				"indexExpression": {
																					"id": 841,
																					"name": "_refAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 776,
																					"src": "2280:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2264:28:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 843,
																				"name": "referralReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 832,
																				"src": "2296:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2264:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 845,
																		"nodeType": "ExpressionStatement",
																		"src": "2264:46:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 856,
																	"name": "_nlntAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "2414:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 857,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2447:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2453:9:6",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2447:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2490:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "30",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2519:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"id": 861,
																	"name": "_refAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "2545:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 855,
																"name": "Lock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 715,
																"src": "2382:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Lock_$715_storage_ptr_$",
																	"typeString": "type(struct Staking.Lock storage pointer)"
																}
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"2402:10:6",
																"2440:5:6",
																"2477:11:6",
																"2506:11:6",
																"2535:8:6"
															],
															"names": [
																"nlntAmount",
																"start",
																"claimAmount",
																"levelIncome",
																"referral"
															],
															"nodeType": "FunctionCall",
															"src": "2382:186:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Lock_$715_memory_ptr",
																"typeString": "struct Staking.Lock memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Lock_$715_memory_ptr",
																"typeString": "struct Staking.Lock memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 850,
																"name": "allStakeDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "2349:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Lock_$715_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct Staking.Lock storage ref[] storage ref)"
																}
															},
															"id": 853,
															"indexExpression": {
																"expression": {
																	"id": 851,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2365:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2369:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2365:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2349:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage",
																"typeString": "struct Staking.Lock storage ref[] storage ref"
															}
														},
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2377:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2349:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr_$_t_struct$_Lock_$715_storage_$returns$__$attached_to$_t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Staking.Lock storage ref[] storage pointer,struct Staking.Lock storage ref)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2349:220:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "2349:220:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 866,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2599:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2603:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2599:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 868,
															"name": "_nlntAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "2611:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 865,
														"name": "TokenLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "2587:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2587:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "EmitStatement",
												"src": "2582:41:6"
											}
										]
									},
									"functionSelector": "17be3fa5",
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lockToken",
									"nameLocation": "1633:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "_refAddress",
												"nameLocation": "1651:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "1643:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1643:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "_nlntAmount",
												"nameLocation": "1672:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "1664:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1642:42:6"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:0:6"
									},
									"scope": 1188,
									"src": "1624:1007:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "2671:1061:6",
										"statements": [
											{
												"assignments": [
													879
												],
												"declarations": [
													{
														"constant": false,
														"id": 879,
														"mutability": "mutable",
														"name": "locks",
														"nameLocation": "2697:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1007,
														"src": "2682:20:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr",
															"typeString": "struct Staking.Lock[]"
														},
														"typeName": {
															"baseType": {
																"id": 877,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 876,
																	"name": "Lock",
																	"nameLocations": [
																		"2682:4:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 715,
																	"src": "2682:4:6"
																},
																"referencedDeclaration": 715,
																"src": "2682:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Lock_$715_storage_ptr",
																	"typeString": "struct Staking.Lock"
																}
															},
															"id": 878,
															"nodeType": "ArrayTypeName",
															"src": "2682:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr",
																"typeString": "struct Staking.Lock[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 884,
												"initialValue": {
													"baseExpression": {
														"id": 880,
														"name": "allStakeDetails",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "2705:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Lock_$715_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct Staking.Lock storage ref[] storage ref)"
														}
													},
													"id": 883,
													"indexExpression": {
														"expression": {
															"id": 881,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2721:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2725:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2721:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2705:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage",
														"typeString": "struct Staking.Lock storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2682:50:6"
											},
											{
												"assignments": [
													886
												],
												"declarations": [
													{
														"constant": false,
														"id": 886,
														"mutability": "mutable",
														"name": "totalClaimable",
														"nameLocation": "2751:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1007,
														"src": "2743:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 885,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2743:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 887,
												"nodeType": "VariableDeclarationStatement",
												"src": "2743:22:6"
											},
											{
												"body": {
													"id": 984,
													"nodeType": "Block",
													"src": "2818:722:6",
													"statements": [
														{
															"assignments": [
																901
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 901,
																	"mutability": "mutable",
																	"name": "l",
																	"nameLocation": "2846:1:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 984,
																	"src": "2833:14:6",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Lock_$715_storage_ptr",
																		"typeString": "struct Staking.Lock"
																	},
																	"typeName": {
																		"id": 900,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 899,
																			"name": "Lock",
																			"nameLocations": [
																				"2833:4:6"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 715,
																			"src": "2833:4:6"
																		},
																		"referencedDeclaration": 715,
																		"src": "2833:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Lock_$715_storage_ptr",
																			"typeString": "struct Staking.Lock"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 905,
															"initialValue": {
																"baseExpression": {
																	"id": 902,
																	"name": "locks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "2850:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr",
																		"typeString": "struct Staking.Lock storage ref[] storage pointer"
																	}
																},
																"id": 904,
																"indexExpression": {
																	"id": 903,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "2856:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2850:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Lock_$715_storage",
																	"typeString": "struct Staking.Lock storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2833:25:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 906,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2877:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2883:9:6",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2877:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 908,
																			"name": "l",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 901,
																			"src": "2895:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Lock_$715_storage_ptr",
																				"typeString": "struct Staking.Lock storage pointer"
																			}
																		},
																		"id": 909,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2897:5:6",
																		"memberName": "start",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 708,
																		"src": "2895:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 910,
																		"name": "cliff",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "2905:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2895:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2877:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 914,
															"nodeType": "IfStatement",
															"src": "2873:47:6",
															"trueBody": {
																"id": 913,
																"nodeType": "Continue",
																"src": "2912:8:6"
															}
														},
														{
															"assignments": [
																916
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 916,
																	"mutability": "mutable",
																	"name": "timePassed",
																	"nameLocation": "2945:10:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 984,
																	"src": "2937:18:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 915,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2937:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 922,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 917,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2958:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2964:9:6",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2958:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 919,
																		"name": "l",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 901,
																		"src": "2976:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Lock_$715_storage_ptr",
																			"typeString": "struct Staking.Lock storage pointer"
																		}
																	},
																	"id": 920,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2978:5:6",
																	"memberName": "start",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 708,
																	"src": "2976:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2958:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2937:46:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 923,
																	"name": "timePassed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "3002:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 924,
																	"name": "totalDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "3015:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3002:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 930,
															"nodeType": "IfStatement",
															"src": "2998:58:6",
															"trueBody": {
																"expression": {
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 926,
																		"name": "timePassed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "3030:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 927,
																		"name": "totalDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "3043:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3030:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 929,
																"nodeType": "ExpressionStatement",
																"src": "3030:26:6"
															}
														},
														{
															"assignments": [
																932
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 932,
																	"mutability": "mutable",
																	"name": "vestingTime",
																	"nameLocation": "3081:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 984,
																	"src": "3073:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 931,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3073:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 936,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 933,
																	"name": "timePassed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "3095:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 934,
																	"name": "cliff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "3108:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3095:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3073:40:6"
														},
														{
															"assignments": [
																938
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 938,
																	"mutability": "mutable",
																	"name": "monthPassed",
																	"nameLocation": "3136:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 984,
																	"src": "3128:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 937,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3128:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 942,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 939,
																	"name": "vestingTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 932,
																	"src": "3150:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3330",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3164:7:6",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2592000_by_1",
																		"typeString": "int_const 2592000"
																	},
																	"value": "30"
																},
																"src": "3150:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3128:43:6"
														},
														{
															"assignments": [
																944
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 944,
																	"mutability": "mutable",
																	"name": "totalVested",
																	"nameLocation": "3194:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 984,
																	"src": "3186:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 943,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3186:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 954,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 950,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 948,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 945,
																						"name": "l",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 901,
																						"src": "3209:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Lock_$715_storage_ptr",
																							"typeString": "struct Staking.Lock storage pointer"
																						}
																					},
																					"id": 946,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3211:10:6",
																					"memberName": "nlntAmount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 706,
																					"src": "3209:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "3130",
																					"id": 947,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3224:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"src": "3209:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 949,
																				"name": "monthPassed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 938,
																				"src": "3229:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3209:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 951,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3208:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3244:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "3208:39:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3186:61:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 955,
																	"name": "totalVested",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "3268:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 956,
																		"name": "l",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 901,
																		"src": "3282:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Lock_$715_storage_ptr",
																			"typeString": "struct Staking.Lock storage pointer"
																		}
																	},
																	"id": 957,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3284:11:6",
																	"memberName": "claimAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 710,
																	"src": "3282:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3268:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 983,
															"nodeType": "IfStatement",
															"src": "3264:265:6",
															"trueBody": {
																"id": 982,
																"nodeType": "Block",
																"src": "3297:232:6",
																"statements": [
																	{
																		"assignments": [
																			960
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 960,
																				"mutability": "mutable",
																				"name": "claimable",
																				"nameLocation": "3324:9:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 982,
																				"src": "3316:17:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 959,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3316:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 965,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 961,
																				"name": "totalVested",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "3336:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"expression": {
																					"id": 962,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 901,
																					"src": "3350:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Lock_$715_storage_ptr",
																						"typeString": "struct Staking.Lock storage pointer"
																					}
																				},
																				"id": 963,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3352:11:6",
																				"memberName": "claimAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 710,
																				"src": "3350:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3336:27:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3316:47:6"
																	},
																	{
																		"expression": {
																			"id": 970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 966,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 901,
																					"src": "3382:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Lock_$715_storage_ptr",
																						"typeString": "struct Staking.Lock storage pointer"
																					}
																				},
																				"id": 968,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "3384:11:6",
																				"memberName": "claimAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 710,
																				"src": "3382:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 969,
																				"name": "claimable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 960,
																				"src": "3399:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3382:26:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 971,
																		"nodeType": "ExpressionStatement",
																		"src": "3382:26:6"
																	},
																	{
																		"expression": {
																			"id": 974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 972,
																				"name": "totalClaimable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 886,
																				"src": "3427:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 973,
																				"name": "claimable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 960,
																				"src": "3445:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3427:27:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 975,
																		"nodeType": "ExpressionStatement",
																		"src": "3427:27:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 977,
																						"name": "l",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 901,
																						"src": "3491:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Lock_$715_storage_ptr",
																							"typeString": "struct Staking.Lock storage pointer"
																						}
																					},
																					"id": 978,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3493:8:6",
																					"memberName": "referral",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 714,
																					"src": "3491:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 979,
																					"name": "claimable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 960,
																					"src": "3503:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 976,
																				"name": "distributeLevel",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1130,
																				"src": "3475:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3475:38:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 981,
																		"nodeType": "ExpressionStatement",
																		"src": "3475:38:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 892,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "2795:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 893,
															"name": "locks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "2799:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr",
																"typeString": "struct Staking.Lock storage ref[] storage pointer"
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2805:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2799:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2795:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 985,
												"initializationExpression": {
													"assignments": [
														889
													],
													"declarations": [
														{
															"constant": false,
															"id": 889,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2788:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 985,
															"src": "2783:6:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 888,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2783:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 891,
													"initialValue": {
														"hexValue": "30",
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2792:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2783:10:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2813:3:6",
														"subExpression": {
															"id": 896,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "2813:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 898,
													"nodeType": "ExpressionStatement",
													"src": "2813:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2778:762:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 987,
																"name": "totalClaimable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "3560:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3577:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3560:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320617661696c61626c6520746f20636c61696d",
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3580:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3c7d8a55d308962a49d643398c1a7f771d32ab6a1c86998cd19cc63622632cf",
																"typeString": "literal_string \"No tokens available to claim\""
															},
															"value": "No tokens available to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3c7d8a55d308962a49d643398c1a7f771d32ab6a1c86998cd19cc63622632cf",
																"typeString": "literal_string \"No tokens available to claim\""
															}
														],
														"id": 986,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3552:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3552:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "3552:59:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 996,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3640:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3644:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3640:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 998,
															"name": "totalClaimable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "3652:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 993,
															"name": "nlnt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "3622:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3627:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "3622:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3622:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "3622:45:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1002,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3697:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3701:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3697:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "totalClaimable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "3709:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1001,
														"name": "TokensClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "3683:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3683:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "EmitStatement",
												"src": "3678:46:6"
											}
										]
									},
									"functionSelector": "48c54b9d",
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimTokens",
									"nameLocation": "2648:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2659:2:6"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2671:0:6"
									},
									"scope": 1188,
									"src": "2639:1093:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "3780:272:6",
										"statements": [
											{
												"assignments": [
													1012
												],
												"declarations": [
													{
														"constant": false,
														"id": 1012,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3799:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1046,
														"src": "3791:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1011,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3791:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1017,
												"initialValue": {
													"baseExpression": {
														"id": 1013,
														"name": "referralRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "3808:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1016,
													"indexExpression": {
														"expression": {
															"id": 1014,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3824:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3828:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3824:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3808:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3791:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1019,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "3854:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3863:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3854:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20726566657272616c2072657761726420617661696c61626c65",
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3866:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6986e5133152c912c18bdc61623271eec2e7f5b8b1ea755693ac6218ff7efb7",
																"typeString": "literal_string \"No referral reward available\""
															},
															"value": "No referral reward available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6986e5133152c912c18bdc61623271eec2e7f5b8b1ea755693ac6218ff7efb7",
																"typeString": "literal_string \"No referral reward available\""
															}
														],
														"id": 1018,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3846:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3846:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "3846:51:6"
											},
											{
												"expression": {
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1025,
															"name": "referralRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "3908:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1028,
														"indexExpression": {
															"expression": {
																"id": 1026,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3924:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3928:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3924:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3908:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3938:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3908:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "3908:31:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1035,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3968:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3972:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3968:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1037,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "3980:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1032,
															"name": "nlnt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "3950:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3955:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "3950:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3950:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "3950:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1041,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4025:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4029:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4025:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1043,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "4037:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1040,
														"name": "ReferralRewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "4003:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4003:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "EmitStatement",
												"src": "3998:46:6"
											}
										]
									},
									"functionSelector": "9b4b2c9c",
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimReferralReward",
									"nameLocation": "3749:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3768:2:6"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3780:0:6"
									},
									"scope": 1188,
									"src": "3740:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "4137:507:6",
										"statements": [
											{
												"assignments": [
													1059
												],
												"declarations": [
													{
														"constant": false,
														"id": 1059,
														"mutability": "mutable",
														"name": "levelPercentage",
														"nameLocation": "4164:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1129,
														"src": "4148:31:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
															"typeString": "uint8[3]"
														},
														"typeName": {
															"baseType": {
																"id": 1057,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "4148:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1058,
															"length": {
																"hexValue": "33",
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4154:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"nodeType": "ArrayTypeName",
															"src": "4148:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$3_storage_ptr",
																"typeString": "uint8[3]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": {
													"components": [
														{
															"hexValue": "3135",
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4183:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15_by_1",
																"typeString": "int_const 15"
															},
															"value": "15"
														},
														{
															"hexValue": "3130",
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4187:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														{
															"hexValue": "35",
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4191:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														}
													],
													"id": 1063,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4182:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
														"typeString": "uint8[3] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4148:45:6"
											},
											{
												"assignments": [
													1066
												],
												"declarations": [
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "currentRef",
														"nameLocation": "4212:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1129,
														"src": "4204:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1065,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4204:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1068,
												"initialValue": {
													"id": 1067,
													"name": "_refAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1049,
													"src": "4225:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4204:32:6"
											},
											{
												"body": {
													"id": 1127,
													"nodeType": "Block",
													"src": "4288:349:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1079,
																	"name": "currentRef",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "4307:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4329:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4321:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1080,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4321:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4321:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4307:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1086,
															"nodeType": "IfStatement",
															"src": "4303:35:6",
															"trueBody": {
																"id": 1085,
																"nodeType": "Break",
																"src": "4333:5:6"
															}
														},
														{
															"assignments": [
																1091
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1091,
																	"mutability": "mutable",
																	"name": "refLocks",
																	"nameLocation": "4370:8:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1127,
																	"src": "4355:23:6",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr",
																		"typeString": "struct Staking.Lock[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1089,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1088,
																				"name": "Lock",
																				"nameLocations": [
																					"4355:4:6"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 715,
																				"src": "4355:4:6"
																			},
																			"referencedDeclaration": 715,
																			"src": "4355:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Lock_$715_storage_ptr",
																				"typeString": "struct Staking.Lock"
																			}
																		},
																		"id": 1090,
																		"nodeType": "ArrayTypeName",
																		"src": "4355:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr",
																			"typeString": "struct Staking.Lock[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1095,
															"initialValue": {
																"baseExpression": {
																	"id": 1092,
																	"name": "allStakeDetails",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "4381:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Lock_$715_storage_$dyn_storage_$",
																		"typeString": "mapping(address => struct Staking.Lock storage ref[] storage ref)"
																	}
																},
																"id": 1094,
																"indexExpression": {
																	"id": 1093,
																	"name": "currentRef",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "4397:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4381:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage",
																	"typeString": "struct Staking.Lock storage ref[] storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4355:53:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1096,
																		"name": "refLocks",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "4427:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr",
																			"typeString": "struct Staking.Lock storage ref[] storage pointer"
																		}
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4436:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4427:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4446:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4427:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1101,
															"nodeType": "IfStatement",
															"src": "4423:31:6",
															"trueBody": {
																"id": 1100,
																"nodeType": "Break",
																"src": "4449:5:6"
															}
														},
														{
															"assignments": [
																1103
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1103,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "4479:6:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1127,
																	"src": "4471:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1102,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4471:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1112,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1104,
																				"name": "rewardAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1051,
																				"src": "4489:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 1105,
																					"name": "levelPercentage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1059,
																					"src": "4504:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
																						"typeString": "uint8[3] memory"
																					}
																				},
																				"id": 1107,
																				"indexExpression": {
																					"id": 1106,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1070,
																					"src": "4520:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4504:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "4489:33:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1109,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4488:35:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4526:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "4488:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4471:58:6"
														},
														{
															"expression": {
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1113,
																			"name": "refLocks",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "4544:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr",
																				"typeString": "struct Staking.Lock storage ref[] storage pointer"
																			}
																		},
																		"id": 1115,
																		"indexExpression": {
																			"hexValue": "30",
																			"id": 1114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4553:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4544:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Lock_$715_storage",
																			"typeString": "struct Staking.Lock storage ref"
																		}
																	},
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4556:11:6",
																	"memberName": "levelIncome",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 712,
																	"src": "4544:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1117,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "4571:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4544:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1119,
															"nodeType": "ExpressionStatement",
															"src": "4544:33:6"
														},
														{
															"expression": {
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1120,
																	"name": "currentRef",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "4592:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1121,
																			"name": "refLocks",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "4605:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr",
																				"typeString": "struct Staking.Lock storage ref[] storage pointer"
																			}
																		},
																		"id": 1123,
																		"indexExpression": {
																			"hexValue": "30",
																			"id": 1122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4614:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4605:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Lock_$715_storage",
																			"typeString": "struct Staking.Lock storage ref"
																		}
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4617:8:6",
																	"memberName": "referral",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 714,
																	"src": "4605:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4592:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1126,
															"nodeType": "ExpressionStatement",
															"src": "4592:33:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1073,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "4266:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1074,
														"name": "globalLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "4270:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4266:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1128,
												"initializationExpression": {
													"assignments": [
														1070
													],
													"declarations": [
														{
															"constant": false,
															"id": 1070,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4259:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1128,
															"src": "4254:6:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1069,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4254:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1072,
													"initialValue": {
														"hexValue": "30",
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4263:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4254:10:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4283:3:6",
														"subExpression": {
															"id": 1076,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "4283:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1078,
													"nodeType": "ExpressionStatement",
													"src": "4283:3:6"
												},
												"nodeType": "ForStatement",
												"src": "4249:388:6"
											}
										]
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "distributeLevel",
									"nameLocation": "4069:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "_refAddress",
												"nameLocation": "4093:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "4085:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4085:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "4114:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "4106:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4106:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4084:43:6"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 1188,
									"src": "4060:584:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "4689:371:6",
										"statements": [
											{
												"assignments": [
													1137
												],
												"declarations": [
													{
														"constant": false,
														"id": 1137,
														"mutability": "mutable",
														"name": "locks",
														"nameLocation": "4715:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1186,
														"src": "4700:20:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr",
															"typeString": "struct Staking.Lock[]"
														},
														"typeName": {
															"baseType": {
																"id": 1135,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1134,
																	"name": "Lock",
																	"nameLocations": [
																		"4700:4:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 715,
																	"src": "4700:4:6"
																},
																"referencedDeclaration": 715,
																"src": "4700:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Lock_$715_storage_ptr",
																	"typeString": "struct Staking.Lock"
																}
															},
															"id": 1136,
															"nodeType": "ArrayTypeName",
															"src": "4700:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr",
																"typeString": "struct Staking.Lock[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1142,
												"initialValue": {
													"baseExpression": {
														"id": 1138,
														"name": "allStakeDetails",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "4723:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Lock_$715_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct Staking.Lock storage ref[] storage ref)"
														}
													},
													"id": 1141,
													"indexExpression": {
														"expression": {
															"id": 1139,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4739:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4743:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4739:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4723:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage",
														"typeString": "struct Staking.Lock storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4700:50:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1144,
																	"name": "locks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1137,
																	"src": "4769:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr",
																		"typeString": "struct Staking.Lock storage ref[] storage pointer"
																	}
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4775:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4769:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4784:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4769:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207374616b657320666f756e64",
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4787:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_afc7218b32e114ec965464013d43e9fc4a998fd4f9b9fceb167763aa8c319785",
																"typeString": "literal_string \"No stakes found\""
															},
															"value": "No stakes found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_afc7218b32e114ec965464013d43e9fc4a998fd4f9b9fceb167763aa8c319785",
																"typeString": "literal_string \"No stakes found\""
															}
														],
														"id": 1143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4761:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4761:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "4761:44:6"
											},
											{
												"assignments": [
													1152
												],
												"declarations": [
													{
														"constant": false,
														"id": 1152,
														"mutability": "mutable",
														"name": "income",
														"nameLocation": "4826:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1186,
														"src": "4818:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1151,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4818:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1157,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1153,
															"name": "locks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "4835:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr",
																"typeString": "struct Staking.Lock storage ref[] storage pointer"
															}
														},
														"id": 1155,
														"indexExpression": {
															"hexValue": "30",
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4841:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4835:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Lock_$715_storage",
															"typeString": "struct Staking.Lock storage ref"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4844:11:6",
													"memberName": "levelIncome",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 712,
													"src": "4835:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4818:37:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1159,
																"name": "income",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "4874:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4883:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4874:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206c6576656c20696e636f6d6520746f20636c61696d",
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4886:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd6e6be77339438fa1ce99e753eafbac0b165ee3cf81de39211cd1fa463c169e",
																"typeString": "literal_string \"No level income to claim\""
															},
															"value": "No level income to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd6e6be77339438fa1ce99e753eafbac0b165ee3cf81de39211cd1fa463c169e",
																"typeString": "literal_string \"No level income to claim\""
															}
														],
														"id": 1158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4866:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4866:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "4866:47:6"
											},
											{
												"expression": {
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1165,
																"name": "locks",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "4926:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Lock_$715_storage_$dyn_storage_ptr",
																	"typeString": "struct Staking.Lock storage ref[] storage pointer"
																}
															},
															"id": 1167,
															"indexExpression": {
																"hexValue": "30",
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4932:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4926:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Lock_$715_storage",
																"typeString": "struct Staking.Lock storage ref"
															}
														},
														"id": 1168,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4935:11:6",
														"memberName": "levelIncome",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 712,
														"src": "4926:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4949:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4926:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "4926:24:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1175,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4979:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4983:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4979:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1177,
															"name": "income",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "4991:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1172,
															"name": "nlnt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "4961:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4966:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "4961:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4961:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "4961:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1181,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5033:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5037:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5033:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1183,
															"name": "income",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "5045:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1180,
														"name": "LevelIncomeClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "5014:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5014:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "EmitStatement",
												"src": "5009:43:6"
											}
										]
									},
									"functionSelector": "60f43fd2",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimLevelIncome",
									"nameLocation": "4661:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4677:2:6"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4689:0:6"
									},
									"scope": 1188,
									"src": "4652:408:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1189,
							"src": "199:4864:6",
							"usedErrors": [
								179
							],
							"usedEvents": [
								680,
								686,
								692,
								698,
								704
							]
						}
					],
					"src": "37:5028:6"
				},
				"id": 6
			}
		}
	}
}